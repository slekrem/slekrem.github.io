{"mappings":"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","sources":["node_modules/@getalby/sdk/dist/index.module.js","node_modules/nostr-tools/lib/esm/index.js","node_modules/@noble/curves/secp256k1.js","node_modules/@noble/curves/src/secp256k1.ts","node_modules/@noble/curves/node_modules/@noble/hashes/sha256.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts","node_modules/@noble/curves/node_modules/@noble/hashes/_sha2.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts","node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts","node_modules/@noble/curves/node_modules/@noble/hashes/utils.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts","node_modules/@noble/curves/abstract/modular.js","node_modules/@noble/curves/src/abstract/modular.ts","node_modules/@noble/curves/abstract/utils.js","node_modules/@noble/curves/src/abstract/utils.ts","node_modules/@noble/curves/abstract/weierstrass.js","node_modules/@noble/curves/src/abstract/weierstrass.ts","node_modules/@noble/curves/abstract/curve.js","node_modules/@noble/curves/src/abstract/curve.ts","node_modules/@noble/curves/abstract/hash-to-curve.js","node_modules/@noble/curves/src/abstract/hash-to-curve.ts","node_modules/@noble/curves/_shortw_utils.js","node_modules/@noble/curves/src/_shortw_utils.ts","node_modules/@noble/curves/node_modules/@noble/hashes/hmac.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts","node_modules/@noble/hashes/utils.js","node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/hashes/crypto.js","node_modules/@noble/hashes/src/crypto.ts","node_modules/@noble/hashes/sha256.js","node_modules/@noble/hashes/src/sha256.ts","node_modules/@noble/hashes/_sha2.js","node_modules/@noble/hashes/src/_sha2.ts","node_modules/@noble/hashes/_assert.js","node_modules/@noble/hashes/src/_assert.ts","node_modules/@scure/base/lib/esm/index.js","node_modules/@noble/ciphers/aes.js","node_modules/@noble/ciphers/src/aes.ts","node_modules/@noble/ciphers/utils.js","node_modules/@noble/ciphers/src/utils.ts","node_modules/@noble/ciphers/_assert.js","node_modules/@noble/ciphers/src/_assert.ts","node_modules/@noble/ciphers/_polyval.js","node_modules/@noble/ciphers/src/_polyval.ts","node_modules/@noble/ciphers/chacha.js","node_modules/@noble/ciphers/src/chacha.ts","node_modules/@noble/ciphers/_poly1305.js","node_modules/@noble/ciphers/src/_poly1305.ts","node_modules/@noble/ciphers/_arx.js","node_modules/@noble/ciphers/src/_arx.ts","node_modules/@noble/hashes/hkdf.js","node_modules/@noble/hashes/src/hkdf.ts","node_modules/@noble/hashes/hmac.js","node_modules/@noble/hashes/src/hmac.ts","node_modules/@getalby/lightning-tools/dist/index.module.js","js/main.js","js/wallet-manager.js","js/price-manager.js","js/stabilization-manager.js"],"sourcesContent":["import{Relay as e,nip19 as t,finalizeEvent as n,getEventHash as r,nip04 as o,nip44 as i,generateSecretKey as s,getPublicKey as u}from\"nostr-tools\";import{Invoice as c,LightningAddress as a,fiat as l}from\"@getalby/lightning-tools\";function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return t&&h(e.prototype,t),n&&h(e,n),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},d.apply(this,arguments)}function v(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,m(e,t)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function y(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function P(e,t,n){return P=y()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&m(o,n.prototype),o},P.apply(null,arguments)}function w(e){var t=\"function\"==typeof Map?new Map:void 0;return w=function(e){if(null===e||-1===Function.toString.call(e).indexOf(\"[native code]\"))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return P(e,arguments,p(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),m(n,e)},w(e)}function g(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t.indexOf(n=i[r])>=0||(o[n]=e[n]);return o}var b=/*#__PURE__*/function(){function e(){this.events={}}var t=e.prototype;return t.on=function(e,t){this.events[e]||(this.events[e]=[]),this.events[e].push(t)},t.off=function(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(function(e){return e!==t}))},t.emit=function(e,t){this.events[e]&&this.events[e].forEach(function(e){return e(t)})},e}();function _(e){return Object.entries(e).map(function(e){var t=e[0],n=e[1];return t&&n?t+\"=\"+n:\"\"}).filter(function(e){return e}).join(\"&\")}function k(e,t){return\"Basic \"+btoa(e+\":\"+t)}var E={__proto__:null,buildQueryString:_,basicAuthHeader:k},T=/*#__PURE__*/function(e){function t(t,n,r,o){var i,s=t.toString();return n&&(s+=\" \"+n),s+=\": \",s+=o.message?o.message:JSON.stringify(o),(i=e.call(this,s)||this).status=void 0,i.statusText=void 0,i.headers=void 0,i.error=void 0,i.status=t,i.statusText=n,i.headers=r,i.error=o,i}return v(t,e),t}(/*#__PURE__*/w(Error)),N={__proto__:null,OAuthClient:function(){},AuthClient:function(){},AlbyResponseError:T},j=[\"auth\",\"endpoint\",\"params\",\"request_body\",\"method\",\"max_retries\",\"base_url\",\"user_agent\",\"headers\"],q=function(e){return Promise.resolve(R(e)).then(function(e){return e.json()})},R=function(e){var t=e.auth,n=e.endpoint,r=e.params,o=void 0===r?{}:r,i=e.request_body,s=e.method,u=e.max_retries,c=e.base_url,a=void 0===c?O:c,l=e.user_agent,h=e.headers,f=g(e,j);try{var v=function(e){return Promise.resolve(S(p.toString(),d({headers:d({},m?{\"Content-Type\":\"application/json; charset=utf-8\"}:void 0,e,h,{\"User-Agent\":null!=l?l:\"@getalby/sdk\",\"X-User-Agent\":null!=l?l:\"@getalby/sdk\"}),method:s,body:m?JSON.stringify(i):void 0},f),u)).then(function(e){var t=function(){if(!e.ok)return Promise.resolve(e.json()).then(function(t){throw new T(e.status,e.statusText,e.headers,t)})}();return t&&t.then?t.then(function(t){return e}):e})},p=new URL(a+n);p.search=_(o);var m=\"POST\"===s&&!!i;return Promise.resolve(t?Promise.resolve(t.getAuthHeader(p.href,s)).then(v):v(void 0))}catch(e){return Promise.reject(e)}},S=function e(t,n,r){void 0===r&&(r=0);try{return Promise.resolve(fetch(t,n)).then(function(o){var i,s=function(){if(429===o.status&&r>0){var s=Number(o.headers.get(\"x-rate-limit-reset\")),u=Number(o.headers.get(\"x-rate-limit-remaining\")),c=1e3*s-Date.now(),a=1e3;return 0===u&&(a=c),Promise.resolve(new Promise(function(e){return setTimeout(e,a)})).then(function(){var o=e(t,n,r-1);return i=1,o})}}();return s&&s.then?s.then(function(e){return i?e:o}):i?s:o})}catch(e){return Promise.reject(e)}},O=\"https://api.getalby.com\",I=function(e){return e.reduce(function(e,t){return e+t.toString(16).padStart(2,\"0\")},\"\")},x=[\"expires_in\"],A=[\"token\"];function U(e){var t=e.expires_in;return d({},g(e,x),!!t&&{expires_at:Date.now()+1e3*t})}var C=/*#__PURE__*/function(){function e(e){this.token=void 0,this.options=void 0,this.code_verifier=void 0,this.code_challenge=void 0,this._refreshAccessTokenPromise=void 0,this._tokenEvents=void 0,this._tokenEvents=new b;var t=e.token,n=g(e,A);this.options=d({client_secret:\"\"},n),this.token=t,this._refreshAccessTokenPromise=null}var t=e.prototype;return t.on=function(e,t){this._tokenEvents.on(e,t)},t.refreshAccessToken=function(){try{var e=this;return e._refreshAccessTokenPromise||(e._refreshAccessTokenPromise=new Promise(function(t,n){try{return Promise.resolve(function(r,o){try{var i=function(n,r){try{var o=function(){var n,r=null==(n=e.token)?void 0:n.refresh_token,o=e.options,i=o.client_id,s=o.client_secret,u=o.request_options,c=o.user_agent;if(!i)throw new Error(\"client_id is required\");if(!r)throw new Error(\"refresh_token is required\");return Promise.resolve(q(d({},u,{endpoint:\"/oauth/token\",params:{client_id:i,grant_type:\"refresh_token\",refresh_token:r},user_agent:c,method:\"POST\",headers:d({},null==u?void 0:u.headers,{\"Content-type\":\"application/x-www-form-urlencoded\"},{Authorization:k(i,s)})}))).then(function(n){var r=U(n);e.token=r,t({token:r}),e._tokenEvents.emit(\"tokenRefreshed\",e.token)})}()}catch(e){return r(e)}return o&&o.then?o.then(void 0,r):o}(0,function(t){console.error(t),n(t),e._tokenEvents.emit(\"tokenRefreshFailed\",t)})}catch(e){return o(!0,e)}return i&&i.then?i.then(o.bind(null,!1),o.bind(null,!0)):o(!1,i)}(0,function(t,n){if(e._refreshAccessTokenPromise=null,t)throw n;return n}))}catch(e){return Promise.reject(e)}})),Promise.resolve(e._refreshAccessTokenPromise)}catch(e){return Promise.reject(e)}},t.isAccessTokenExpired=function(){var e,t,n=null==(e=this.token)?void 0:e.refresh_token,r=null==(t=this.token)?void 0:t.expires_at;return!r||!!n&&r<=Date.now()+1e3},t.requestAccessToken=function(e){try{var t=this,n=t.options,r=n.client_id,o=n.client_secret,i=n.callback,s=n.request_options,u=n.user_agent,c=t.code_verifier;if(!r)throw new Error(\"client_id is required\");if(!o&&!c)throw new Error(\"either client_secret is required, or code should be generated using a challenge\");if(!i)throw new Error(\"callback is required\");return Promise.resolve(q(d({},s,{endpoint:\"/oauth/token\",params:{code:e,grant_type:\"authorization_code\",code_verifier:c,client_id:r,redirect_uri:i},user_agent:u,method:\"POST\",headers:d({},null==s?void 0:s.headers,{\"Content-Type\":\"application/x-www-form-urlencoded\"},{Authorization:k(r,o)})}))).then(function(e){var n=U(e);return t.token=n,{token:n}})}catch(e){return Promise.reject(e)}},t.generateAuthURL=function(e){try{var t=function(){var t=n.code_challenge,o=new URL(e.authorizeUrl||\"https://getalby.com/oauth\");return o.search=_(d({},e,{client_id:i,scope:u.join(\" \"),response_type:\"code\",redirect_uri:s,code_challenge_method:r,code_challenge:t})),o.toString()},n=this;e||(e={});var r,o=n.options,i=o.client_id,s=o.callback,u=o.scopes;if(!s)throw new Error(\"callback required\");if(!u)throw new Error(\"scopes required\");var c=function(){if(\"S256\"===e.code_challenge_method)return Promise.resolve(n._generateS256Challenge()).then(function(){r=\"S256\"});\"plain\"===e.code_challenge_method&&e.code_challenge&&(n.code_challenge=e.code_challenge,n.code_verifier=e.code_challenge,r=\"plain\")}();return Promise.resolve(c&&c.then?c.then(t):t())}catch(e){return Promise.reject(e)}},t.getAuthHeader=function(){try{var e,t=function(){return{Authorization:\"Bearer \"+n.token.access_token}},n=this;if(null==(e=n.token)||!e.access_token)throw new Error(\"access_token is required\");var r=function(){if(n.isAccessTokenExpired())return Promise.resolve(n.refreshAccessToken()).then(function(){})}();return Promise.resolve(r&&r.then?r.then(t):t())}catch(e){return Promise.reject(e)}},t._generateS256Challenge=function(){try{var e=this,t=crypto.getRandomValues(new Uint8Array(64));return e.code_verifier=I(t),Promise.resolve(crypto.subtle.digest(\"SHA-256\",(new TextEncoder).encode(e.code_verifier))).then(function(t){var n=new Uint8Array(t);e.code_challenge=btoa(String.fromCharCode.apply(String,n)).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=+$/,\"\")})}catch(e){return Promise.reject(e)}},e}(),M=/*#__PURE__*/function(){function e(e){this.bearer_token=void 0,this.bearer_token=e}return e.prototype.getAuthHeader=function(){return{Authorization:\"Bearer \"+this.bearer_token}},e}(),F={__proto__:null,OAuth2User:C,OAuth2Bearer:M};function W(e){var t={};return e.recipient.customKey&&e.recipient.customValue&&(t[e.recipient.customKey]=e.recipient.customValue),t[7629169]=JSON.stringify(e.boostagram),{destination:e.recipient.address,amount:e.amount,custom_records:t}}var L=/*#__PURE__*/function(){function e(e,t){this.auth=void 0,this.defaultRequestOptions=void 0,this.auth=\"string\"==typeof e?new M(e):e,this.defaultRequestOptions=d({},t,{user_agent:null==t?void 0:t.user_agent})}var t=e.prototype;return t.accountBalance=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/balance\",params:e,method:\"GET\"}))},t.signMessage=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/signatures\",request_body:e,method:\"POST\"}))},t.accountSummary=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/user/summary\",params:e,method:\"GET\"}))},t.accountInformation=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/user/me\",params:e,method:\"GET\"}))},t.accountValue4Value=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/user/value4value\",params:e,method:\"GET\"}))},t.incomingInvoices=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/invoices/incoming\",params:e,method:\"GET\"}))},t.outgoingInvoices=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/invoices/outgoing\",params:e,method:\"GET\"}))},t.invoices=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/invoices\",params:e,method:\"GET\"}))},t.getInvoice=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/invoices/\"+e,method:\"GET\"}))},t.decodeInvoice=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/decode/bolt11/\"+e,method:\"GET\"}))},t.createInvoice=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/invoices\",request_body:e,method:\"POST\"}))},t.keysend=function(e,t){var n,r;return Array.isArray(e)?(n=\"/payments/keysend/multi\",r={keysends:e.map(function(e){return d({},e,{custom_records:e.customRecords})})}):(n=\"/payments/keysend\",r=d({},e,{custom_records:e.customRecords})),q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:n,request_body:r,method:\"POST\"}))},t.sendPayment=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/payments/bolt11\",request_body:e,method:\"POST\"}))},t.sendBoostagram=function(e,t){var n,r;return Array.isArray(e)?(n=\"/payments/keysend/multi\",r={keysends:e.map(function(e){return W(e)})}):(n=\"/payments/keysend\",r=W(e)),q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:n,request_body:r,method:\"POST\"}))},t.sendBoostagramToAlbyAccount=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/payments/keysend\",request_body:{destination:\"030a58b8653d32b99200a2334cfe913e51dc7d155aa0116c176657a4f1722677a3\",custom_records:{696969:e.account},amount:e.amount,memo:e.memo},method:\"POST\"}))},t.createWebhookEndpoint=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/webhook_endpoints\",request_body:e,method:\"POST\"}))},t.deleteWebhookEndpoint=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/webhook_endpoints/\"+e,method:\"DELETE\"}))},t.getSwapInfo=function(e){return q(d({auth:this.auth},this.defaultRequestOptions,e,{endpoint:\"/swaps/info\",method:\"GET\"}))},t.createSwap=function(e,t){return q(d({auth:this.auth},this.defaultRequestOptions,t,{endpoint:\"/swaps\",method:\"POST\",request_body:e}))},e}(),K={__proto__:null,auth:F,types:N,utils:E,Client:L};if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error(\"Non little-endian hardware is not supported\");const B=/* @__PURE__ */Array.from({length:256},(e,t)=>t.toString(16).padStart(2,\"0\"));function J(e){if(!(e instanceof Uint8Array))throw new Error(\"Uint8Array expected\");let t=\"\";for(let n=0;n<e.length;n++)t+=B[e[n]];return t}function H(e){if(\"string\"!=typeof e)throw new Error(\"hex string expected, got \"+typeof e);const t=e.length;if(t%2)throw new Error(\"padded hex string expected, got unpadded hex of length \"+t);const n=new Uint8Array(t/2);for(let t=0;t<n.length;t++){const r=2*t,o=e.slice(r,r+2),i=Number.parseInt(o,16);if(Number.isNaN(i)||i<0)throw new Error(\"Invalid byte sequence\");n[t]=i}return n}var z=/*#__PURE__*/function(e){function t(t,n){var r;return(r=e.call(this,t)||this).code=void 0,r.code=n,r}return v(t,e),t}(/*#__PURE__*/w(Error)),D=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),G=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),V=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),Y=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(V),X=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(V),Q=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),$=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),Z=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),ee=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z),te=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return v(t,e),t}(z);function ne(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}function re(e,t,n){if(!e.s){if(n instanceof oe){if(!n.s)return void(n.o=re.bind(null,e,t));1&t&&(t=n.s),n=n.v}if(n&&n.then)return void n.then(re.bind(null,e,t),re.bind(null,e,2));e.s=t,e.v=n;var r=e.o;r&&r(e)}}var oe=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(t,n){var r=new e,o=this.s;if(o){var i=1&o?t:n;if(i){try{re(r,1,i(this.v))}catch(e){re(r,2,e)}return r}return this}return this.o=function(e){try{var o=e.v;1&e.s?re(r,1,t?t(o):o):n?re(r,1,n(o)):re(r,2,o)}catch(e){re(r,2,e)}},r},e}();function ie(e){return e instanceof oe&&1&e.s}var se=/*#__PURE__*/function(){function c(n){this.relay=void 0,this.relayUrl=void 0,this.secret=void 0,this.lud16=void 0,this.walletPubkey=void 0,this.options=void 0,this._encryptionType=void 0,n&&n.nostrWalletConnectUrl&&(n=d({},c.parseWalletConnectUrl(n.nostrWalletConnectUrl),n)),this.options=d({},n||{}),this.relayUrl=this.options.relayUrl,this.relay=new e(this.relayUrl),this.options.secret&&(this.secret=this.options.secret.toLowerCase().startsWith(\"nsec\")?t.decode(this.options.secret).data:this.options.secret),this.lud16=this.options.lud16,this.walletPubkey=this.options.walletPubkey.toLowerCase().startsWith(\"npub\")?t.decode(this.options.walletPubkey).data:this.options.walletPubkey,void 0===globalThis.WebSocket&&console.error(\"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\")}c.parseWalletConnectUrl=function(e){e=e.replace(\"nostrwalletconnect://\",\"http://\").replace(\"nostr+walletconnect://\",\"http://\").replace(\"nostrwalletconnect:\",\"http://\").replace(\"nostr+walletconnect:\",\"http://\");var t=new URL(e),n=t.searchParams.get(\"relay\");if(!n)throw new Error(\"No relay URL found in connection string\");var r={walletPubkey:t.host,relayUrl:n},o=t.searchParams.get(\"secret\");o&&(r.secret=o);var i=t.searchParams.get(\"lud16\");return i&&(r.lud16=i),r};var a=c.prototype;return a.getNostrWalletConnectUrl=function(e){void 0===e&&(e=!0);var t=\"nostr+walletconnect://\"+this.walletPubkey+\"?relay=\"+this.relayUrl+\"&pubkey=\"+this.publicKey;return e&&(t=t+\"&secret=\"+this.secret),this.lud16&&(t=t+\"&lud16=\"+this.lud16),t},a.getPublicKey=function(){return Promise.resolve(this.publicKey)},a.signEvent=function(e){if(!this.secret)throw new Error(\"Missing secret key\");return Promise.resolve(n(e,H(this.secret)))},a.getEventHash=function(e){return r(e)},a.close=function(){return this.relay.close()},a.encrypt=function(e,t){try{var n,r=this;if(!r.secret)throw new Error(\"Missing secret\");var s=function(){if(\"nip04\"===r.encryptionType)return Promise.resolve(o.encrypt(r.secret,e,t)).then(function(e){n=e});var s=i.getConversationKey(H(r.secret),e);n=i.encrypt(t,s)}();return Promise.resolve(s&&s.then?s.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},a.decrypt=function(e,t){try{var n,r=this;if(!r.secret)throw new Error(\"Missing secret\");var s=function(){if(\"nip04\"===r.encryptionType)return Promise.resolve(o.decrypt(r.secret,e,t)).then(function(e){n=e});var s=i.getConversationKey(H(r.secret),e);n=i.decrypt(t,s)}();return Promise.resolve(s&&s.then?s.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},c.getAuthorizationUrl=function(e,t,n){if(void 0===t&&(t={}),e.indexOf(\"/#/\")>-1)throw new Error(\"hash router paths not supported\");var r=new URL(e);return t.name&&r.searchParams.set(\"name\",t.name),r.searchParams.set(\"pubkey\",n),t.returnTo&&r.searchParams.set(\"return_to\",t.returnTo),t.budgetRenewal&&r.searchParams.set(\"budget_renewal\",t.budgetRenewal),t.expiresAt&&r.searchParams.set(\"expires_at\",Math.floor(t.expiresAt.getTime()/1e3).toString()),t.maxAmount&&r.searchParams.set(\"max_amount\",t.maxAmount.toString()),t.requestMethods&&r.searchParams.set(\"request_methods\",t.requestMethods.join(\" \")),t.notificationTypes&&r.searchParams.set(\"notification_types\",t.notificationTypes.join(\" \")),t.isolated&&r.searchParams.set(\"isolated\",\"true\"),t.metadata&&r.searchParams.set(\"metadata\",JSON.stringify(t.metadata)),r},c.fromAuthorizationUrl=function(e,t,n){void 0===t&&(t={}),n=n||J(s()),t.name||(t.name=document.location.host);var r=this.getAuthorizationUrl(e,t,u(H(n))),o=window.outerHeight/2+window.screenY-300,i=window.outerWidth/2+window.screenX-200;return new Promise(function(e,t){var s=window.open(r.toString(),document.title+\" - Wallet Connect\",\"height=600,width=400,top=\"+o+\",left=\"+i);if(s){var u=function o(i){var u=i.data;u&&\"nwc:success\"===u.type&&i.origin===r.protocol+\"//\"+r.host&&(u.relayUrl||t(new Error(\"no relayUrl in response\")),u.walletPubkey||t(new Error(\"no walletPubkey in response\")),e(new c({relayUrl:u.relayUrl,walletPubkey:u.walletPubkey,secret:n,lud16:u.lud16})),clearInterval(a),window.removeEventListener(\"message\",o),s&&s.close())},a=setInterval(function(){s&&s.closed&&(clearInterval(a),window.removeEventListener(\"message\",u),t(new Error(\"Popup closed\")))},500);window.addEventListener(\"message\",u)}else t(new Error(\"failed to execute window.open\"))})},a.getWalletServiceInfo=function(){try{var e=this;return Promise.resolve(e._checkConnected()).then(function(){return Promise.resolve(new Promise(function(t,n){var r=[],o=e.relay.subscribe([{kinds:[13194],limit:1,authors:[e.walletPubkey]}],{eoseTimeout:1e4});o.onevent=function(e){r.push(e)},o.oneose=function(){o.close(),t(r)}})).then(function(e){var t;if(!e.length)throw new Error(\"no info event (kind 13194) returned from relay\");var n=e[0].content,r=e[0].tags.find(function(e){return\"notifications\"===e[0]}),o=e[0].tags.find(function(e){return\"v\"===e[0]}),i=e[0].tags.find(function(e){return\"encryption\"===e[0]}),s=[\"nip04\"];return o&&o[1].includes(\"1.0\")&&s.push(\"nip44_v2\"),i&&(s=i[1].split(\" \")),{encryptions:s,capabilities:n.split(/[ |,]/g),notifications:(null==r||null==(t=r[1])?void 0:t.split(\" \"))||[]}})})}catch(e){return Promise.reject(e)}},a.getInfo=function(){try{var e=this;return Promise.resolve(ne(function(){return Promise.resolve(e.executeNip47Request(\"get_info\",{},function(e){return!!e.methods},{replyTimeout:1e4}))},function(e){throw console.error(\"Failed to request get_info\",e),e}))}catch(e){return Promise.reject(e)}},a.getBudget=function(){try{var e=this;return Promise.resolve(ne(function(){return Promise.resolve(e.executeNip47Request(\"get_budget\",{},function(e){return void 0!==e},{replyTimeout:1e4}))},function(e){throw console.error(\"Failed to request get_budget\",e),e}))}catch(e){return Promise.reject(e)}},a.getBalance=function(){try{var e=this;return Promise.resolve(ne(function(){return Promise.resolve(e.executeNip47Request(\"get_balance\",{},function(e){return void 0!==e.balance},{replyTimeout:1e4}))},function(e){throw console.error(\"Failed to request get_balance\",e),e}))}catch(e){return Promise.reject(e)}},a.payInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"pay_invoice\",e,function(e){return!!e}))},function(e){throw console.error(\"Failed to request pay_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.payKeysend=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"pay_keysend\",e,function(e){return!!e.preimage}))},function(e){throw console.error(\"Failed to request pay_keysend\",e),e}))}catch(e){return Promise.reject(e)}},a.signMessage=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"sign_message\",e,function(t){return t.message===e.message&&!!t.signature}))},function(e){throw console.error(\"Failed to request sign_message\",e),e}))}catch(e){return Promise.reject(e)}},a.createConnection=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"create_connection\",e,function(e){return!!e.wallet_pubkey}))},function(e){throw console.error(\"Failed to request create_connection\",e),e}))}catch(e){return Promise.reject(e)}},a.multiPayInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeMultiNip47Request(\"multi_pay_invoice\",e,e.invoices.length,function(e){return!!e.preimage})).then(function(e){return{invoices:e,errors:[]}})},function(e){throw console.error(\"Failed to request multi_pay_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.multiPayKeysend=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeMultiNip47Request(\"multi_pay_keysend\",e,e.keysends.length,function(e){return!!e.preimage})).then(function(e){return{keysends:e,errors:[]}})},function(e){throw console.error(\"Failed to request multi_pay_keysend\",e),e}))}catch(e){return Promise.reject(e)}},a.makeInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){if(!e.amount)throw new Error(\"No amount specified\");return Promise.resolve(t.executeNip47Request(\"make_invoice\",e,function(e){return!!e.invoice}))},function(e){throw console.error(\"Failed to request make_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.makeHoldInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){if(!e.amount)throw new Error(\"No amount specified\");if(!e.payment_hash)throw new Error(\"No payment hash specified\");return Promise.resolve(t.executeNip47Request(\"make_hold_invoice\",e,function(e){return!!e.invoice}))},function(e){throw console.error(\"Failed to request make_hold_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.settleHoldInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"settle_hold_invoice\",e,function(e){return!!e}))},function(e){throw console.error(\"Failed to request settle_hold_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.cancelHoldInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"cancel_hold_invoice\",e,function(e){return!!e}))},function(e){throw console.error(\"Failed to request cancel_hold_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.lookupInvoice=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"lookup_invoice\",e,function(e){return!!e.invoice}))},function(e){throw console.error(\"Failed to request lookup_invoice\",e),e}))}catch(e){return Promise.reject(e)}},a.listTransactions=function(e){try{var t=this;return Promise.resolve(ne(function(){return Promise.resolve(t.executeNip47Request(\"list_transactions\",e,function(e){return!!e.transactions},{replyTimeout:1e4}))},function(e){throw console.error(\"Failed to request list_transactions\",e),e}))}catch(e){return Promise.reject(e)}},a.subscribeNotifications=function(e,t){try{var n,r,o,i=this,s=!0;return function(){try{var u=function(e,t,n){for(var r;;){var o=e();if(ie(o)&&(o=o.v),!o)return i;if(o.then){r=0;break}var i=n();if(i&&i.then){if(!ie(i)){r=1;break}i=i.s}}var s=new oe,u=re.bind(null,s,2);return(0===r?o.then(a):1===r?i.then(c):(void 0).then(function(){(o=e())?o.then?o.then(a).then(void 0,u):a(o):re(s,1,i)})).then(void 0,u),s;function c(t){i=t;do{if(!(o=e())||ie(o)&&!o.v)return void re(s,1,i);if(o.then)return void o.then(a).then(void 0,u);ie(i=n())&&(i=i.v)}while(!i||!i.then);i.then(c).then(void 0,u)}function a(e){e?(i=n())&&i.then?i.then(c).then(void 0,u):c(i):re(s,1,i)}}(function(){return!!s},0,function(){function u(){var e=function(){if(s)return Promise.resolve(new Promise(function(e){return setTimeout(e,1e3)})).then(function(){})}();if(e&&e.then)return e.then(function(){})}var c=ne(function(){return Promise.resolve(i._checkConnected()).then(function(){return Promise.resolve(i._selectEncryptionType()).then(function(){return o=i.relay.subscribe([{kinds:[].concat(\"nip04\"===i.encryptionType?[23196]:[23197]),authors:[i.walletPubkey],\"#p\":[i.publicKey]}],{}),console.info(\"subscribed to relay\"),o.onevent=function(n){try{return Promise.resolve(i.decrypt(i.walletPubkey,n.content)).then(function(n){var r;try{r=JSON.parse(n)}catch(e){return void console.error(\"Failed to parse decrypted event content\",e)}r.notification?(!t||t.indexOf(r.notification_type)>-1)&&e(r):console.error(\"No notification in response\",r)})}catch(e){return Promise.reject(e)}},Promise.resolve(new Promise(function(e){n=function(){e()},i.relay.onclose=r=function(){console.info(\"relay disconnected\"),null==n||n()}})).then(function(){void 0!==r&&(i.relay.onclose=null)})})})},function(e){console.error(\"error subscribing to notifications\",e||\"unknown relay error\")});return c&&c.then?c.then(u):u()});u&&u.then&&u.then(function(){})}catch(e){Promise.reject(e)}}(),Promise.resolve(function(){var e;s=!1,null==n||n(),null==(e=o)||e.close()})}catch(e){return Promise.reject(e)}},a.executeNip47Request=function(e,t,n,r){try{var o=this;return Promise.resolve(o._checkConnected()).then(function(){return Promise.resolve(o._selectEncryptionType()).then(function(){return new Promise(function(i,s){try{return Promise.resolve(o.encrypt(o.walletPubkey,JSON.stringify({method:e,params:t}))).then(function(e){var t={kind:23194,created_at:Math.floor(Date.now()/1e3),tags:[[\"p\",o.walletPubkey],[\"v\",\"nip44_v2\"===o.encryptionType?\"1.0\":\"0.0\"],[\"encryption\",o.encryptionType]],content:e};return Promise.resolve(o.signEvent(t)).then(function(e){var t=o.relay.subscribe([{kinds:[23195],authors:[o.walletPubkey],\"#e\":[e.id]}],{}),u=setTimeout(function(){t.close(),s(new X(\"reply timeout: event \"+e.id,\"INTERNAL\"))},(null==r?void 0:r.replyTimeout)||6e4);t.onevent=function(e){try{return clearTimeout(u),t.close(),Promise.resolve(o.decrypt(o.walletPubkey,e.content)).then(function(e){var r,o,c;try{r=JSON.parse(e)}catch(e){return clearTimeout(u),t.close(),void s(new $(\"failed to deserialize response\",\"INTERNAL\"))}r.result?n(r.result)?i(r.result):(clearTimeout(u),t.close(),s(new Z(\"response from NWC failed validation: \"+JSON.stringify(r.result),\"INTERNAL\"))):(clearTimeout(u),t.close(),s(new G((null==(o=r.error)?void 0:o.message)||\"unknown Error\",(null==(c=r.error)?void 0:c.code)||\"INTERNAL\")))})}catch(e){return Promise.reject(e)}};var c=setTimeout(function(){t.close(),s(new Y(\"publish timeout: \"+e.id,\"INTERNAL\"))},(null==r?void 0:r.publishTimeout)||5e3),a=ne(function(){return Promise.resolve(o.relay.publish(e)).then(function(){clearTimeout(c)})},function(e){clearTimeout(c),s(new Q(\"failed to publish: \"+e,\"INTERNAL\"))});if(a&&a.then)return a.then(function(){})})})}catch(e){Promise.reject(e)}})})})}catch(e){return Promise.reject(e)}},a.executeMultiNip47Request=function(e,t,n,r,o){try{var i=this;return Promise.resolve(i._checkConnected()).then(function(){return Promise.resolve(i._selectEncryptionType()).then(function(){var s=[];return new Promise(function(u,c){try{return Promise.resolve(i.encrypt(i.walletPubkey,JSON.stringify({method:e,params:t}))).then(function(e){var t={kind:23194,created_at:Math.floor(Date.now()/1e3),tags:[[\"p\",i.walletPubkey],[\"v\",\"nip44_v2\"===i.encryptionType?\"1.0\":\"0.0\"],[\"encryption\",i.encryptionType]],content:e};return Promise.resolve(i.signEvent(t)).then(function(e){var t=i.relay.subscribe([{kinds:[23195],authors:[i.walletPubkey],\"#e\":[e.id]}],{}),a=setTimeout(function(){t.close(),c(new X(\"reply timeout: event \"+e.id,\"INTERNAL\"))},(null==o?void 0:o.replyTimeout)||6e4);t.onevent=function(e){try{return Promise.resolve(i.decrypt(i.walletPubkey,e.content)).then(function(o){var i;try{i=JSON.parse(o)}catch(e){clearTimeout(a),t.close(),c(new $(\"failed to deserialize response\",\"INTERNAL\"))}if(i.result){var l;if(!r(i.result))return clearTimeout(a),t.close(),void c(new Z(\"Response from NWC failed validation: \"+JSON.stringify(i.result),\"INTERNAL\"));var h=null==(l=e.tags.find(function(e){return\"d\"===e[0]}))?void 0:l[1];if(void 0===h)return clearTimeout(a),t.close(),void c(new Z(\"No d tag found in response event\",\"INTERNAL\"));s.push(d({},i.result,{dTag:h})),s.length===n&&(clearTimeout(a),t.close(),u(s))}else{var f,v;clearTimeout(a),t.close(),c(new ee(null==(f=i.error)?void 0:f.message,null==(v=i.error)?void 0:v.code))}})}catch(e){return Promise.reject(e)}};var l=setTimeout(function(){t.close(),c(new Y(\"Publish timeout: \"+e.id,\"INTERNAL\"))},(null==o?void 0:o.publishTimeout)||5e3),h=ne(function(){return Promise.resolve(i.relay.publish(e)).then(function(){clearTimeout(l)})},function(e){clearTimeout(l),c(new Q(\"Failed to publish: \"+e,\"INTERNAL\"))});if(h&&h.then)return h.then(function(){})})})}catch(e){Promise.reject(e)}})})})}catch(e){return Promise.reject(e)}},a._checkConnected=function(){try{var e=this;if(!e.secret)throw new Error(\"Missing secret key\");if(!e.relayUrl)throw new Error(\"Missing relay url\");return Promise.resolve(ne(function(){var t=function(){if(!e.relay.connected)return Promise.resolve(e.relay.connect()).then(function(){})}();if(t&&t.then)return t.then(function(){})},function(){throw console.error(\"failed to connect to relay\",e.relayUrl),new D(\"Failed to connect to \"+e.relayUrl,\"OTHER\")}))}catch(e){return Promise.reject(e)}},a._selectEncryptionType=function(){try{var e=this;return Promise.resolve(function(){if(!e._encryptionType)return Promise.resolve(e.getWalletServiceInfo()).then(function(t){var n=e._findPreferredEncryptionType(t.encryptions);if(!n)throw new te(\"no compatible encryption or version found between wallet and client\",\"UNSUPPORTED_ENCRYPTION\");\"nip04\"===n&&console.warn(\"NIP-04 encryption is about to be deprecated. Please upgrade your wallet service to use NIP-44 instead.\"),e._encryptionType=n})}())}catch(e){return Promise.reject(e)}},a._findPreferredEncryptionType=function(e){return e.includes(\"nip44_v2\")?\"nip44_v2\":e.includes(\"nip04\")?\"nip04\":null},f(c,[{key:\"nostrWalletConnectUrl\",get:function(){return this.getNostrWalletConnectUrl()}},{key:\"connected\",get:function(){return this.relay.connected}},{key:\"publicKey\",get:function(){if(!this.secret)throw new Error(\"Missing secret key\");return u(H(this.secret))}},{key:\"encryptionType\",get:function(){if(!this._encryptionType)throw new Error(\"Missing encryption or version\");return this._encryptionType}}]),c}(),ue={get_info:\"getInfo\",get_balance:\"getBalance\",make_invoice:\"makeInvoice\",pay_invoice:\"sendPayment\",pay_keysend:\"payKeysend\",lookup_invoice:\"lookupInvoice\",list_transactions:\"listTransactions\",multi_pay_invoice:\"sendMultiPayment\",multi_pay_keysend:\"multiKeysend\",sign_message:\"signMessage\"},ce=/*#__PURE__*/function(){function e(e){this._enabled=!1,this.client=void 0,this.subscribers=void 0,this.client=(null==e?void 0:e.client)||new se(e),this.subscribers={}}e.fromAuthorizationUrl=function(t,n,r){void 0===n&&(n={});try{return Promise.resolve(se.fromAuthorizationUrl(t,n,r)).then(function(t){return new e({client:t})})}catch(e){return Promise.reject(e)}};var t=e.prototype;return t.on=function(e,t){this.subscribers[e]=t},t.notify=function(e,t){var n=this.subscribers[e];n&&n(t)},t.getPublicKey=function(){return this.client.getPublicKey()},t.signEvent=function(e){return this.client.signEvent(e)},t.enable=function(){try{return this._enabled=!0,Promise.resolve()}catch(e){return Promise.reject(e)}},t.close=function(){return this.client.close()},t.getInfo=function(){try{var e=this;return Promise.resolve(e.checkEnabled()).then(function(){var t=[\"lightning\",\"nostr\"],n=\"Alby JS SDK\";return function(r,o){try{var i=Promise.resolve(e.client.getInfo()).then(function(r){var o={methods:r.methods.map(function(e){return ue[e]}),node:{alias:r.alias,pubkey:r.pubkey,color:r.color},supports:t,version:n};return e.notify(\"getInfo\",o),o})}catch(e){return o(e)}return i&&i.then?i.then(void 0,o):i}(0,function(e){return console.error(\"Using minimal getInfo\",e),{methods:[\"sendPayment\"],node:{},supports:t,version:n}})})}catch(e){return Promise.reject(e)}},t.getBalance=function(){try{var e=this;return Promise.resolve(e.checkEnabled()).then(function(){return Promise.resolve(e.client.getBalance()).then(function(t){var n={balance:Math.floor(t.balance/1e3),currency:\"sats\"};return e.notify(\"getBalance\",n),n})})}catch(e){return Promise.reject(e)}},t.sendPayment=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.payInvoice({invoice:e})).then(function(e){var n={preimage:e.preimage};return t.notify(\"sendPayment\",n),n})})}catch(e){return Promise.reject(e)}},t.sendPaymentAsync=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return t.client.payInvoice({invoice:e}),t.notify(\"sendPaymentAsync\",{}),{}})}catch(e){return Promise.reject(e)}},t.keysend=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.payKeysend(le(e))).then(function(e){var n={preimage:e.preimage};return t.notify(\"keysend\",n),n})})}catch(e){return Promise.reject(e)}},t.signMessage=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.signMessage({message:e})).then(function(e){var n={message:e.message,signature:e.signature};return t.notify(\"keysend\",n),n})})}catch(e){return Promise.reject(e)}},t.makeInvoice=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){var n,r=\"object\"==typeof e?e:void 0,o=+(null!=(n=null==r?void 0:r.amount)?n:e);if(!o)throw new Error(\"No amount specified\");return Promise.resolve(t.client.makeInvoice({amount:1e3*o,description:null==r?void 0:r.defaultMemo})).then(function(e){var n={paymentRequest:e.invoice};return t.notify(\"makeInvoice\",n),n})})}catch(e){return Promise.reject(e)}},t.lookupInvoice=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.lookupInvoice({invoice:e.paymentRequest,payment_hash:e.paymentHash})).then(function(e){var n={preimage:e.preimage,paymentRequest:e.invoice,paid:!!e.settled_at};return t.notify(\"lookupInvoice\",n),n})})}catch(e){return Promise.reject(e)}},t.listTransactions=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.listTransactions(e)).then(function(e){var n={transactions:e.transactions.map(ae)};return t.notify(\"listTransactions\",n),n})})}catch(e){return Promise.reject(e)}},t.sendMultiPayment=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.multiPayInvoice({invoices:e.map(function(e,t){return{invoice:e,id:t.toString()}})})).then(function(n){var r={payments:n.invoices.map(function(t){var n=e[parseInt(t.dTag)];if(!n)throw new Error(\"Could not find paymentRequest matching response d tag\");return{paymentRequest:n,preimage:t.preimage}}),errors:[]};return t.notify(\"sendMultiPayment\",r),r})})}catch(e){return Promise.reject(e)}},t.multiKeysend=function(e){try{var t=this;return Promise.resolve(t.checkEnabled()).then(function(){return Promise.resolve(t.client.multiPayKeysend({keysends:e.map(function(e,t){return d({},le(e),{id:t.toString()})})})).then(function(n){var r={keysends:n.keysends.map(function(t){var n=e[parseInt(t.dTag)];if(!n)throw new Error(\"Could not find keysend matching response d tag\");return{keysend:n,preimage:t.preimage}}),errors:[]};return t.notify(\"multiKeysend\",r),r})})}catch(e){return Promise.reject(e)}},t.lnurl=function(e){throw new Error(\"Method not implemented.\")},t.request=function(e,t){throw new Error(\"Method not implemented.\")},t.verifyMessage=function(e,t){throw new Error(\"Method not implemented.\")},t.checkEnabled=function(){try{if(!this._enabled)throw new Error(\"please call enable() and await the promise before calling this function\");return Promise.resolve()}catch(e){return Promise.reject(e)}},f(e,[{key:\"options\",get:function(){return this.client.options}}]),e}();function ae(e){return d({},e,{amount:Math.floor(e.amount/1e3),fees_paid:e.fees_paid?Math.floor(e.fees_paid/1e3):0})}function le(e){return{amount:1e3*+e.amount,pubkey:e.destination,tlv_records:e.customRecords?Object.entries(e.customRecords).map(function(e){return{type:parseInt(e[0]),value:I((new TextEncoder).encode(e[1]))}}):[]}}function he(e,t){try{var n=e()}catch(e){return t(!0,e)}return n&&n.then?n.then(t.bind(null,!1),t.bind(null,!0)):t(!1,n)}function fe(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}var de={__proto__:null,NostrWebLNProvider:ce,NWC:ce,OauthWeblnProvider:/*#__PURE__*/function(){function e(e){this.client=void 0,this.auth=void 0,this.oauth=void 0,this.subscribers=void 0,this.isExecuting=void 0,this.auth=e.auth,this.client=new L(e.auth),this.oauth=!0,this.subscribers={},this.isExecuting=!1}var t=e.prototype;return t.on=function(e,t){this.subscribers[e]=t},t.notify=function(e,t){var n=this.subscribers[e];n&&n(t)},t.enable=function(){try{var e,t=this;return t.isExecuting?Promise.resolve():null!=(e=t.auth.token)&&e.access_token?Promise.resolve({enabled:!0}):Promise.resolve(function(){if(\"undefined\"==typeof window||void 0===window.document)throw new Error(\"Missing access token\");var e=he(function(){return t.isExecuting=!0,Promise.resolve(t.openAuthorization()).then(function(){})},function(e,n){if(t.isExecuting=!1,e)throw n;return n});if(e&&e.then)return e.then(function(){})}())}catch(e){return Promise.reject(e)}},t.sendPayment=function(e){try{var t=this;return t.isExecuting?Promise.resolve():Promise.resolve(he(function(){return fe(function(){return t.isExecuting=!0,Promise.resolve(t.client.sendPayment({invoice:e})).then(function(e){return t.notify(\"sendPayment\",e),{preimage:e.payment_preimage}})},function(e){var t=\"Unknown Error\";throw e instanceof Error&&(t=e.message),new Error(t)})},function(e,n){if(t.isExecuting=!1,e)throw n;return n}))}catch(e){return Promise.reject(e)}},t.keysend=function(e){try{var t=this;return t.isExecuting?Promise.resolve():Promise.resolve(he(function(){return fe(function(){return t.isExecuting=!0,Promise.resolve(t.client.keysend(e)).then(function(e){return t.notify(\"keysend\",e),{preimage:e.payment_preimage}})},function(e){var t=\"Unknown Error\";throw e instanceof Error&&(t=e.message),new Error(t)})},function(e,n){if(t.isExecuting=!1,e)throw n;return n}))}catch(e){return Promise.reject(e)}},t.getInfo=function(){try{return Promise.resolve({alias:\"Alby\"})}catch(e){return Promise.reject(e)}},t.makeInvoice=function(e){try{var t=this;return t.isExecuting?Promise.resolve():Promise.resolve(he(function(){return fe(function(){return t.isExecuting=!0,Promise.resolve(t.client.createInvoice({amount:parseInt(e.amount.toString()),description:e.defaultMemo})).then(function(e){return t.notify(\"makeInvoice\",e),{paymentRequest:e.payment_request}})},function(e){var t=\"Unknown Error\";throw e instanceof Error&&(t=e.message),new Error(t)})},function(e,n){if(t.isExecuting=!1,e)throw n;return n}))}catch(e){return Promise.reject(e)}},t.openAuthorization=function(){try{var e=this,t=window.outerHeight/2+window.screenY-350,n=window.outerWidth/2+window.screenX-300;return Promise.resolve(e.auth.generateAuthURL({code_challenge_method:\"S256\"})).then(function(r){return new Promise(function(o,i){var s=window.open(r,document.title+\" - WebLN enable\",\"height=700,width=600,top=\"+t+\",left=\"+n),u=!1;window.addEventListener(\"message\",function(t){try{var n=t.data,r=function(){if(n&&\"alby:oauth:success\"===n.type&&t.origin===document.location.protocol+\"//\"+document.location.host&&!u){u=!0,console.info(\"Processing OAuth code response\");var r=n.payload.code,c=fe(function(){return Promise.resolve(e.auth.requestAccessToken(r)).then(function(){e.client=new L(e.auth),s&&s.close(),e.notify(\"enable\"),o({enabled:!0})})},function(e){console.error(e),i({enabled:!1})});if(c&&c.then)return c.then(function(){})}}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}})})})}catch(e){return Promise.reject(e)}},e}()};function ve(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}function pe(e,t,n){if(!e.s){if(n instanceof me){if(!n.s)return void(n.o=pe.bind(null,e,t));1&t&&(t=n.s),n=n.v}if(n&&n.then)return void n.then(pe.bind(null,e,t),pe.bind(null,e,2));e.s=t,e.v=n;var r=e.o;r&&r(e)}}var me=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(t,n){var r=new e,o=this.s;if(o){var i=1&o?t:n;if(i){try{pe(r,1,i(this.v))}catch(e){pe(r,2,e)}return r}return this}return this.o=function(e){try{var o=e.v;1&e.s?pe(r,1,t?t(o):o):n?pe(r,1,n(o)):pe(r,2,o)}catch(e){pe(r,2,e)}},r},e}();function ye(e){return e instanceof me&&1&e.s}var Pe=/*#__PURE__*/function(){function t(t){if(this.options=void 0,this.appSecretKey=void 0,this.relay=void 0,this.appSecretKey=t.appSecretKey||J(s()),this.options=d({},t,{appPubkey:u(H(this.appSecretKey))}),!this.options.relayUrl)throw new Error(\"Missing relay url\");if(!this.options.requestMethods)throw new Error(\"Missing request methods\");this.relay=new e(this.options.relayUrl),void 0===globalThis.WebSocket&&console.error(\"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\")}var n=t.prototype;return n.getConnectionUri=function(e){void 0===e&&(e=\"\");var t=new URLSearchParams(d({relay:this.options.relayUrl,request_methods:this.options.requestMethods.join(\" \")},this.options.name?{name:this.options.name}:{},this.options.icon?{icon:this.options.icon}:{},this.options.returnTo?{return_to:this.options.returnTo}:{},this.options.notificationTypes?{notification_types:this.options.notificationTypes.join(\" \")}:{},this.options.maxAmount?{max_amount:this.options.maxAmount.toString()}:{},this.options.budgetRenewal?{budget_renewal:this.options.budgetRenewal}:{},this.options.expiresAt?{expires_at:this.options.expiresAt.toString()}:{},this.options.isolated?{isolated:this.options.isolated.toString()}:{},this.options.metadata?{metadata:JSON.stringify(this.options.metadata)}:{}));return\"nostr+walletauth\"+(e?\"+\"+e:\"\")+\"://\"+this.options.appPubkey+\"?\"+t.toString().replace(/\\+/g,\"%20\")},t.parseWalletAuthUrl=function(e){var t,n;if(!e.startsWith(\"nostr+walletauth\"))throw new Error(\"Unexpected scheme. Should be nostr+walletauth:// or nostr+walletauth+specificapp://\");var r=e.indexOf(\":\");(e=e.substring(r+1)).startsWith(\"//\")&&(e=e.substring(2)),e=\"http://\"+e;var o=new URL(e),i=o.host;if(64!==(null==i?void 0:i.length))throw new Error(\"Incorrect app pubkey found in auth string\");var s=o.searchParams.get(\"relay\");if(!s)throw new Error(\"No relay URL found in auth string\");var u=null==(t=o.searchParams.get(\"request_methods\"))?void 0:t.split(\" \");if(null==u||!u.length)throw new Error(\"No request methods found in auth string\");var c=null==(n=o.searchParams.get(\"notification_types\"))?void 0:n.split(\" \"),a=o.searchParams.get(\"max_amount\"),l=o.searchParams.get(\"expires_at\"),h=o.searchParams.get(\"metadata\");return{name:o.searchParams.get(\"name\")||void 0,icon:o.searchParams.get(\"icon\")||void 0,returnTo:o.searchParams.get(\"return_to\")||void 0,relayUrl:s,appPubkey:i,requestMethods:u,notificationTypes:c,budgetRenewal:o.searchParams.get(\"budget_renewal\"),expiresAt:l?parseInt(l):void 0,maxAmount:a?parseInt(a):void 0,isolated:\"true\"===o.searchParams.get(\"isolated\"),metadata:h?JSON.parse(h):void 0}},n.subscribe=function(e){try{var t,n,r=this,o=!0;return function(){try{var i=function(e,t,n){for(var r;;){var o=e();if(ye(o)&&(o=o.v),!o)return i;if(o.then){r=0;break}var i=n();if(i&&i.then){if(!ye(i)){r=1;break}i=i.s}}var s=new me,u=pe.bind(null,s,2);return(0===r?o.then(a):1===r?i.then(c):(void 0).then(function(){(o=e())?o.then?o.then(a).then(void 0,u):a(o):pe(s,1,i)})).then(void 0,u),s;function c(t){i=t;do{if(!(o=e())||ye(o)&&!o.v)return void pe(s,1,i);if(o.then)return void o.then(a).then(void 0,u);ye(i=n())&&(i=i.v)}while(!i||!i.then);i.then(c).then(void 0,u)}function a(e){e?(i=n())&&i.then?i.then(c).then(void 0,u):c(i):pe(s,1,i)}}(function(){return!!o},0,function(){function i(){var e=function(){if(o)return Promise.resolve(new Promise(function(e){return setTimeout(e,1e3)})).then(function(){})}();if(e&&e.then)return e.then(function(){})}var s=ve(function(){return Promise.resolve(r._checkConnected()).then(function(){var o=r.relay.subscribe([{kinds:[13194],\"#p\":[r.options.appPubkey]}],{});return console.info(\"subscribed to relay\"),o.onevent=function(t){try{var n=function(){e.onSuccess(i),o.close(),r.relay.close()},i=new se({relayUrl:r.options.relayUrl,secret:r.appSecretKey,walletPubkey:t.pubkey}),s=ve(function(){return Promise.resolve(i.getInfo()).then(function(e){i.options.lud16=e.lud16,i.lud16=e.lud16})},function(e){console.error(\"failed to fetch get_info\",e)});return Promise.resolve(s&&s.then?s.then(n):n())}catch(e){return Promise.reject(e)}},Promise.resolve(new Promise(function(e){t=function(){e()},r.relay.onclose=n=function(){console.info(\"relay disconnected\"),null==t||t()}})).then(function(){void 0!==n&&(r.relay.onclose=null)})})},function(e){console.error(\"error subscribing to info event\",e||\"unknown relay error\")});return s&&s.then?s.then(i):i()});i&&i.then&&i.then(function(){})}catch(e){Promise.reject(e)}}(),Promise.resolve({unsub:function(){o=!1,null==t||t()}})}catch(e){return Promise.reject(e)}},n._checkConnected=function(){try{var e=this;if(!e.appSecretKey)throw new Error(\"Missing secret key\");if(!e.options.relayUrl)throw new Error(\"Missing relay url\");return Promise.resolve(ve(function(){var t=function(){if(!e.relay.connected)return Promise.resolve(e.relay.connect()).then(function(){})}();if(t&&t.then)return t.then(function(){})},function(){throw console.error(\"failed to connect to relay\",e.options.relayUrl),new D(\"Failed to connect to \"+e.options.relayUrl,\"OTHER\")}))}catch(e){return Promise.reject(e)}},f(t,[{key:\"connectionUri\",get:function(){return this.getConnectionUri()}}]),t}();function we(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}function ge(e,t,n){if(!e.s){if(n instanceof be){if(!n.s)return void(n.o=ge.bind(null,e,t));1&t&&(t=n.s),n=n.v}if(n&&n.then)return void n.then(ge.bind(null,e,t),ge.bind(null,e,2));e.s=t,e.v=n;var r=e.o;r&&r(e)}}var be=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(t,n){var r=new e,o=this.s;if(o){var i=1&o?t:n;if(i){try{ge(r,1,i(this.v))}catch(e){ge(r,2,e)}return r}return this}return this.o=function(e){try{var o=e.v;1&e.s?ge(r,1,t?t(o):o):n?ge(r,1,n(o)):ge(r,2,o)}catch(e){ge(r,2,e)}},r},e}();function _e(e){return e instanceof be&&1&e.s}var ke=/*#__PURE__*/function(){function t(t){this.relay=void 0,this.relayUrl=void 0,this.relayUrl=t.relayUrl,this.relay=new e(this.relayUrl),void 0===globalThis.WebSocket&&console.error(\"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\")}var r=t.prototype;return r.publishWalletServiceInfoEvent=function(e,t,n){try{var r=this;return Promise.resolve(we(function(){return Promise.resolve(r._checkConnected()).then(function(){var o={kind:13194,created_at:Math.floor(Date.now()/1e3),tags:[[\"encryption\",\"nip04 nip44_v2\"],[\"notifications\",n.join(\" \")]],content:t.join(\" \")};return Promise.resolve(r.signEvent(o,e)).then(function(e){return Promise.resolve(r.relay.publish(e)).then(function(){})})})},function(e){throw console.error(\"failed to publish wallet service info event\",e),e}))}catch(e){return Promise.reject(e)}},r.subscribe=function(e,t){try{var n,r,o,i=this,s=!0;return function(){try{var u=function(e,t,n){for(var r;;){var o=e();if(_e(o)&&(o=o.v),!o)return i;if(o.then){r=0;break}var i=n();if(i&&i.then){if(!_e(i)){r=1;break}i=i.s}}var s=new be,u=ge.bind(null,s,2);return(0===r?o.then(a):1===r?i.then(c):(void 0).then(function(){(o=e())?o.then?o.then(a).then(void 0,u):a(o):ge(s,1,i)})).then(void 0,u),s;function c(t){i=t;do{if(!(o=e())||_e(o)&&!o.v)return void ge(s,1,i);if(o.then)return void o.then(a).then(void 0,u);_e(i=n())&&(i=i.v)}while(!i||!i.then);i.then(c).then(void 0,u)}function a(e){e?(i=n())&&i.then?i.then(c).then(void 0,u):c(i):ge(s,1,i)}}(function(){return!!s},0,function(){function u(){var e=function(){if(s)return Promise.resolve(new Promise(function(e){return setTimeout(e,1e3)})).then(function(){})}();if(e&&e.then)return e.then(function(){})}var c=we(function(){return console.info(\"checking connection to relay\"),Promise.resolve(i._checkConnected()).then(function(){return console.info(\"subscribing to relay\"),o=i.relay.subscribe([{kinds:[23194],authors:[e.clientPubkey],\"#p\":[e.walletPubkey]}],{}),console.info(\"subscribed to relay\"),o.onevent=function(n){try{var r=we(function(){var r,o=(null==(r=n.tags.find(function(e){return\"encryption\"===e[0]}))?void 0:r[1])||\"nip04\";return Promise.resolve(i.decrypt(e,n.content,o)).then(function(r){var s,u=JSON.parse(r);switch(u.method){case\"get_info\":s=null==t.getInfo?void 0:t.getInfo();break;case\"make_invoice\":s=null==t.makeInvoice?void 0:t.makeInvoice(u.params);break;case\"pay_invoice\":s=null==t.payInvoice?void 0:t.payInvoice(u.params);break;case\"pay_keysend\":s=null==t.payKeysend?void 0:t.payKeysend(u.params);break;case\"get_balance\":s=null==t.getBalance?void 0:t.getBalance();break;case\"lookup_invoice\":s=null==t.lookupInvoice?void 0:t.lookupInvoice(u.params);break;case\"list_transactions\":s=null==t.listTransactions?void 0:t.listTransactions(u.params);break;case\"sign_message\":s=null==t.signMessage?void 0:t.signMessage(u.params)}return Promise.resolve(s).then(function(t){t||(console.warn(\"received unsupported method\",u.method),t={error:{code:\"NOT_IMPLEMENTED\",message:\"This method is not supported by the wallet service\"},result:void 0});var r=[[\"e\",n.id]],s=Math.floor(Date.now()/1e3);return Promise.resolve(i.encrypt(e,JSON.stringify(d({result_type:u.method},t)),o)).then(function(t){return Promise.resolve(i.signEvent({kind:23195,created_at:s,tags:r,content:t},e.walletSecret)).then(function(e){return Promise.resolve(i.relay.publish(e)).then(function(){})})})})})},function(e){console.error(\"Failed to parse decrypted event content\",e)});return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},Promise.resolve(new Promise(function(e){n=function(){e()},i.relay.onclose=r=function(){console.error(\"relay disconnected\"),null==n||n()}})).then(function(){void 0!==r&&(i.relay.onclose=null)})})},function(e){console.error(\"error subscribing to requests\",e||\"unknown relay error\")});return c&&c.then?c.then(u):u()});u&&u.then&&u.then(function(){})}catch(e){Promise.reject(e)}}(),Promise.resolve(function(){var e;s=!1,null==n||n(),null==(e=o)||e.close()})}catch(e){return Promise.reject(e)}},r.signEvent=function(e,t){return Promise.resolve(n(e,H(t)))},r.close=function(){return this.relay.close()},r.encrypt=function(e,t,n){try{var r,s=function(){if(\"nip04\"===n)return Promise.resolve(o.encrypt(e.walletSecret,e.clientPubkey,t)).then(function(e){r=e});var s=i.getConversationKey(H(e.walletSecret),e.clientPubkey);r=i.encrypt(t,s)}();return Promise.resolve(s&&s.then?s.then(function(){return r}):r)}catch(e){return Promise.reject(e)}},r.decrypt=function(e,t,n){try{var r,s=function(){if(\"nip04\"===n)return Promise.resolve(o.decrypt(e.walletSecret,e.clientPubkey,t)).then(function(e){r=e});var s=i.getConversationKey(H(e.walletSecret),e.clientPubkey);r=i.decrypt(t,s)}();return Promise.resolve(s&&s.then?s.then(function(){return r}):r)}catch(e){return Promise.reject(e)}},r._checkConnected=function(){try{var e=this;if(!e.relayUrl)throw new Error(\"Missing relay url\");return Promise.resolve(we(function(){var t=function(){if(!e.relay.connected)return Promise.resolve(e.relay.connect()).then(function(){})}();if(t&&t.then)return t.then(function(){})},function(){throw console.error(\"failed to connect to relay\",e.relayUrl),new D(\"Failed to connect to \"+e.relayUrl,\"OTHER\")}))}catch(e){return Promise.reject(e)}},f(t,[{key:\"connected\",get:function(){return this.relay.connected}}]),t}(),Ee={__proto__:null,Nip47Error:z,Nip47NetworkError:D,Nip47WalletError:G,Nip47TimeoutError:V,Nip47PublishTimeoutError:Y,Nip47ReplyTimeoutError:X,Nip47PublishError:Q,Nip47ResponseDecodingError:$,Nip47ResponseValidationError:Z,Nip47UnexpectedResponseError:ee,Nip47UnsupportedEncryptionError:te,NWCClient:se,NWAClient:Pe,NWCWalletServiceKeyPair:function(e,t){if(this.walletSecret=void 0,this.walletPubkey=void 0,this.clientPubkey=void 0,this.walletSecret=e,this.clientPubkey=t,!this.walletSecret)throw new Error(\"Missing wallet secret key\");if(!this.clientPubkey)throw new Error(\"Missing client pubkey\");this.walletPubkey=u(H(this.walletSecret))},NWCWalletService:ke};function Te(e,t,n){if(!e.s){if(n instanceof Ne){if(!n.s)return void(n.o=Te.bind(null,e,t));1&t&&(t=n.s),n=n.v}if(n&&n.then)return void n.then(Te.bind(null,e,t),Te.bind(null,e,2));e.s=t,e.v=n;var r=e.o;r&&r(e)}}var Ne=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(t,n){var r=new e,o=this.s;if(o){var i=1&o?t:n;if(i){try{Te(r,1,i(this.v))}catch(e){Te(r,2,e)}return r}return this}return this.o=function(e){try{var o=e.v;1&e.s?Te(r,1,t?t(o):o):n?Te(r,1,n(o)):Te(r,2,o)}catch(e){Te(r,2,e)}},r},e}();function je(e){return e instanceof Ne&&1&e.s}var qe=/*#__PURE__*/function(){function e(e,t){this.transaction=void 0,this.invoice=void 0,this._nwcClient=void 0,this._unsubscribeFunc=void 0,this._timeoutFunc=void 0,this._timeoutId=void 0,this.transaction=t,this.invoice=new c({pr:t.invoice}),this._nwcClient=e}var t=e.prototype;return t.onPaid=function(e){var t=this;return function(){try{var n,r=function(){var r=function(n){null==t._unsubscribeFunc||t._unsubscribeFunc(),e(n)},o=function(e){return function(){t._timeoutFunc=void 0,clearTimeout(t._timeoutId),e()}},i=function(){if(n)return Promise.resolve(t._nwcClient.subscribeNotifications(function(e){e.notification.payment_hash===t.transaction.payment_hash&&r(e.notification)},[\"payment_received\"])).then(function(e){t._unsubscribeFunc=o(e)});console.warn(\"current connection does not support notifications, falling back to polling\"),t._unsubscribeFunc=o(t._onPaidPollingFallback(r))}();if(i&&i.then)return i.then(function(){})},o=function(e,r){try{var o=Promise.resolve(t._nwcClient.getInfo()).then(function(e){var t;n=null==(t=e.notifications)?void 0:t.includes(\"payment_received\")})}catch(e){return r()}return o&&o.then?o.then(void 0,r):o}(0,function(){console.error(\"failed to fetch info, falling back to polling\")});o&&o.then?o.then(r):r()}catch(e){Promise.reject(e)}}(),this},t.onTimeout=function(e,t){var n=this;return this._timeoutFunc=function(){null==n._unsubscribeFunc||n._unsubscribeFunc(),t()},this._timeoutId=setTimeout(function(){null==n._timeoutFunc||n._timeoutFunc()},1e3*e),this},t.unsubscribe=function(){var e;null==(e=this._unsubscribeFunc)||e.call(this)},t._onPaidPollingFallback=function(e){var t=this,n=!0;return function(r){try{var o=function(e,t,n){for(var r;;){var o=e();if(je(o)&&(o=o.v),!o)return i;if(o.then){r=0;break}var i=n();if(i&&i.then){if(!je(i)){r=1;break}i=i.s}}var s=new Ne,u=Te.bind(null,s,2);return(0===r?o.then(a):1===r?i.then(c):(void 0).then(function(){(o=e())?o.then?o.then(a).then(void 0,u):a(o):Te(s,1,i)})).then(void 0,u),s;function c(t){i=t;do{if(!(o=e())||je(o)&&!o.v)return void Te(s,1,i);if(o.then)return void o.then(a).then(void 0,u);je(i=n())&&(i=i.v)}while(!i||!i.then);i.then(c).then(void 0,u)}function a(e){e?(i=n())&&i.then?i.then(c).then(void 0,u):c(i):Te(s,1,i)}}(function(){return!r&&!!n},0,function(){return Promise.resolve(t._nwcClient.lookupInvoice({payment_hash:t.transaction.payment_hash})).then(function(t){return t.settled_at&&t.preimage?(e(t),n=!1,void(r=1)):Promise.resolve(new Promise(function(e){return setTimeout(e,3e3)})).then(function(){})})});o&&o.then&&o.then(function(){})}catch(e){Promise.reject(e)}}(),function(){n=!1}},e}(),Re=function(e){try{return\"number\"==typeof e?Promise.resolve({satoshi:e,millisat:1e3*e}):Promise.resolve(Promise.resolve(e.satoshi)).then(function(e){return{satoshi:e,millisat:1e3*e}})}catch(e){return Promise.reject(e)}},Se=function(e){return{satoshi:e}},Oe=/*#__PURE__*/function(){function e(e){this.nwcClient=void 0,this.nwcClient=\"string\"==typeof e?new se({nostrWalletConnectUrl:e}):e instanceof se?e:new se(e)}var t=e.prototype;return t.pay=function(e,t,n){try{var r=function(t){function r(e){return Promise.resolve(o.nwcClient.payInvoice(d({},n||{},{invoice:i,amount:null==t?void 0:t.millisat}))).then(function(e){return d({},e,{invoice:new c({pr:i})})})}var s=function(){if(i.indexOf(\"@\")>-1){if(!t)throw new Error(\"Amount must be provided when paying to a lightning address\");var r=new a(e);return Promise.resolve(r.fetch()).then(function(){var e,o;return Promise.resolve(r.requestInvoice({satoshi:t.satoshi,comment:null==n||null==(e=n.metadata)?void 0:e.comment,payerdata:null==n||null==(o=n.metadata)?void 0:o.payer_data})).then(function(e){i=e.paymentRequest})})}}();return s&&s.then?s.then(r):r()},o=this,i=e;return Promise.resolve(t?Promise.resolve(Re(t)).then(r):r(void 0))}catch(e){return Promise.reject(e)}},t.requestPayment=function(e,t){try{var n=this;return Promise.resolve(Re(e)).then(function(e){return Promise.resolve(n.nwcClient.makeInvoice(d({},t||{},{amount:e.millisat}))).then(function(e){return new qe(n.nwcClient,e)})})}catch(e){return Promise.reject(e)}},t.close=function(){this.nwcClient.close()},e}(),Ie=function(e,t){this.satoshi=void 0,this.satoshi=l.getSatoshiValue({amount:e,currency:t})},xe=function(e){return new Ie(e,\"USD\")},Ae=function(e){return new Ie(e,\"EUR\")},Ue=function(e){return new Ie(e,\"JPY\")},Ce=function(e){return new Ie(e,\"GBP\")},Me=function(e){return new Ie(e,\"CHF\")};export{Me as CHF,Ae as EUR,Ie as FiatAmount,Ce as GBP,Ue as JPY,Oe as LN,Oe as LNClient,qe as ReceiveInvoice,Se as SATS,xe as USD,Ee as nwc,K as oauth,Re as resolveAmount,de as webln};\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex as bytesToHex2 } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] !== \"string\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction sortEvents(events) {\n  return events.sort((a, b) => {\n    if (a.created_at !== b.created_at) {\n      return b.created_at - a.created_at;\n    }\n    return a.id.localeCompare(b.id);\n  });\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  bytesToHex: () => bytesToHex,\n  hexToBytes: () => hexToBytes,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nimport { bytesToHex, hexToBytes } from \"@noble/hashes/utils\";\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  try {\n    if (url.indexOf(\"://\") === -1)\n      url = \"wss://\" + url;\n    let p = new URL(url);\n    p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n    if (p.pathname.endsWith(\"/\"))\n      p.pathname = p.pathname.slice(0, -1);\n    if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n      p.port = \"\";\n    p.searchParams.sort();\n    p.hash = \"\";\n    return p.toString();\n  } catch (e) {\n    throw new Error(`Invalid URL: ${url}`);\n  }\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    if (this.first) {\n      this.first.prev = null;\n    }\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex2(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex2(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex2(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex2(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DirectMessageRelaysList: () => DirectMessageRelaysList,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  GiftWrap: () => GiftWrap,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  PrivateDirectMessage: () => PrivateDirectMessage,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  Seal: () => Seal,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isAddressableKind: () => isAddressableKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isKind: () => isKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isAddressableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isAddressableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nfunction isKind(event, kind) {\n  const kindAsArray = kind instanceof Array ? kind : [kind];\n  return validateEvent(event) && kindAsArray.includes(event.kind) || false;\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar Seal = 13;\nvar PrivateDirectMessage = 14;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar GiftWrap = 1059;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar DirectMessageRelaysList = 10050;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    return false;\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) {\n    return false;\n  }\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    return false;\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  for (const [key, value] of Object.entries(filter)) {\n    if (key[0] === \"#\" && Array.isArray(value) && !value.length)\n      return 0;\n  }\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isAddressableKind(kind)) && filter[\"#d\"]?.length ? filter.authors.length * filter.kinds.length * filter[\"#d\"].length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar SendingOnClosedConnection = class extends Error {\n  constructor(message, relay) {\n    super(`Tried to send message '${message} on a closed connection to ${relay}.`);\n    this.name = \"SendingOnClosedConnection\";\n  }\n};\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  publishTimeout = 4400;\n  openSubs = /* @__PURE__ */ new Map();\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  authPromise;\n  serial = 0;\n  verifyEvent;\n  _WebSocket;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation || WebSocket;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.authPromise = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (err) {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket error\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n        }\n      };\n      this.ws.onclose = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket closed\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection closed\");\n        }\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ep) {\n            clearTimeout(ep.timeout);\n            if (ok)\n              ep.resolve(reason);\n            else\n              ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new SendingOnClosedConnection(message, this.url);\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    const challenge = this.challenge;\n    if (!challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    if (this.authPromise)\n      return this.authPromise;\n    this.authPromise = new Promise(async (resolve, reject) => {\n      try {\n        let evt = await signAuthEvent(makeAuthEvent(this.url, challenge));\n        let timeout = setTimeout(() => {\n          let ep = this.openEventPublishes.get(evt.id);\n          if (ep) {\n            ep.reject(new Error(\"auth timed out\"));\n            this.openEventPublishes.delete(evt.id);\n          }\n        }, this.publishTimeout);\n        this.openEventPublishes.set(evt.id, { resolve, reject, timeout });\n        this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n      } catch (err) {\n        console.warn(\"subscribe auth function failed:\", err);\n      }\n    });\n    return this.authPromise;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        const ep = this.openEventPublishes.get(event.id);\n        if (ep) {\n          ep.reject(new Error(\"publish timed out\"));\n          this.openEventPublishes.delete(event.id);\n        }\n      }, this.publishTimeout);\n      this.openEventPublishes.set(event.id, { resolve, reject, timeout });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || (params.label ? params.label + \":\" : \"sub:\") + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed && this.relay.connected) {\n      try {\n        this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      } catch (err) {\n        if (err instanceof SendingOnClosedConnection) {\n        } else {\n          throw err;\n        }\n      }\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nvar _WebSocket;\ntry {\n  _WebSocket = WebSocket;\n} catch {\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent, websocketImplementation: _WebSocket });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  _WebSocket;\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent,\n        websocketImplementation: this._WebSocket\n      });\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n    });\n  }\n  subscribe(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    return this.subscribeMap(\n      relays.map((url) => ({ url, filter })),\n      params\n    );\n  }\n  subscribeMany(relays, filters, params) {\n    params.onauth = params.onauth || params.doauth;\n    return this.subscribeMap(\n      relays.flatMap((url) => filters.map((filter) => ({ url, filter }))),\n      params\n    );\n  }\n  subscribeMap(requests, params) {\n    params.onauth = params.onauth || params.doauth;\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      if (eosesReceived[i2])\n        return;\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === requests.length) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      if (closesReceived[i2])\n        return;\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === requests.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      requests.map(async ({ url, filter }, i2) => {\n        url = normalizeURL(url);\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe([filter], {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => {\n            if (reason.startsWith(\"auth-required: \") && params.onauth) {\n              relay.auth(params.onauth).then(() => {\n                relay.subscribe([filter], {\n                  ...params,\n                  oneose: () => handleEose(i2),\n                  onclose: (reason2) => {\n                    handleClose(i2, reason2);\n                  },\n                  alreadyHaveEvent: localAlreadyHaveEventHandler,\n                  eoseTimeout: params.maxWait\n                });\n              }).catch((err) => {\n                handleClose(i2, `auth was required and attempted, but failed with: ${err}`);\n              });\n            } else {\n              handleClose(i2, reason);\n            }\n          },\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close(reason) {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close(reason);\n        });\n      }\n    };\n  }\n  subscribeEose(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribe(relays, filter, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  subscribeManyEose(relays, filters, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeEose(relays, filter, {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event, options) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event).catch(async (err) => {\n        if (err instanceof Error && err.message.startsWith(\"auth-required: \") && options?.onauth) {\n          await r.auth(options.onauth);\n          return r.publish(event);\n        }\n        throw err;\n      }).then((reason) => {\n        if (this.trackRelays) {\n          let set = this.seenOn.get(event.id);\n          if (!set) {\n            set = /* @__PURE__ */ new Set();\n            this.seenOn.set(event.id, set);\n          }\n          set.add(r);\n        }\n        return reason;\n      });\n    });\n  }\n  listConnectionStatus() {\n    const map = /* @__PURE__ */ new Map();\n    this.relays.forEach((relay, url) => map.set(url, relay.connected));\n    return map;\n  }\n  destroy() {\n    this.relays.forEach((conn) => conn.close());\n    this.relays = /* @__PURE__ */ new Map();\n  }\n};\n\n// pool.ts\nvar _WebSocket2;\ntry {\n  _WebSocket2 = WebSocket;\n} catch {\n}\nvar SimplePool = class extends AbstractSimplePool {\n  constructor() {\n    super({ verifyEvent, websocketImplementation: _WebSocket2 });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  Bech32MaxSize: () => Bech32MaxSize,\n  NostrTypeGuard: () => NostrTypeGuard,\n  decode: () => decode,\n  decodeNostrURI: () => decodeNostrURI,\n  encodeBytes: () => encodeBytes,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex3, concatBytes, hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar NostrTypeGuard = {\n  isNProfile: (value) => /^nprofile1[a-z\\d]+$/.test(value || \"\"),\n  isNEvent: (value) => /^nevent1[a-z\\d]+$/.test(value || \"\"),\n  isNAddr: (value) => /^naddr1[a-z\\d]+$/.test(value || \"\"),\n  isNSec: (value) => /^nsec1[a-z\\d]{58}$/.test(value || \"\"),\n  isNPub: (value) => /^npub1[a-z\\d]{58}$/.test(value || \"\"),\n  isNote: (value) => /^note1[a-z\\d]+$/.test(value || \"\"),\n  isNcryptsec: (value) => /^ncryptsec1[a-z\\d]+$/.test(value || \"\")\n};\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decodeNostrURI(nip19code) {\n  try {\n    if (nip19code.startsWith(\"nostr:\"))\n      nip19code = nip19code.substring(6);\n    return decode(nip19code);\n  } catch (_err) {\n    return { type: \"invalid\", data: null };\n  }\n}\nfunction decode(code) {\n  let { prefix, words } = bech32.decode(code, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex3(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex3(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex3(tlv[2][0]),\n          kind: parseInt(bytesToHex3(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex3(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes2(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes2(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes2(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes2(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes2(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes2(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex4, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { cbc } from \"@noble/ciphers/aes\";\nimport { base64 } from \"@scure/base\";\nfunction encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let ciphertext = cbc(normalizedKey, iv).encrypt(plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nfunction decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let iv = base64.decode(ivb64);\n  let ciphertext = base64.decode(ctb64);\n  let plaintext = cbc(normalizedKey, iv).decrypt(ciphertext);\n  return utf8Decoder.decode(plaintext);\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  isNip05: () => isNip05,\n  isValid: () => isValid,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/;\nvar isNip05 = (value) => NIP05_REGEX.test(value || \"\");\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch (_) {\n  null;\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${query}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    return json.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [, name = \"_\", domain] = match;\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${name}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    const pubkey = json.names[name];\n    return pubkey ? { pubkey, relays: json.relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nasync function isValid(pubkey, nip05) {\n  const res = await queryProfile(nip05);\n  return res ? res.pubkey === pubkey : false;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: [],\n    quotes: []\n  };\n  let maybeParent;\n  let maybeRoot;\n  for (let i2 = event.tags.length - 1; i2 >= 0; i2--) {\n    const tag = event.tags[i2];\n    if (tag[0] === \"e\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl, eTagMarker, eTagAuthor] = tag;\n      const eventPointer = {\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : [],\n        author: eTagAuthor\n      };\n      if (eTagMarker === \"root\") {\n        result.root = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"reply\") {\n        result.reply = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"mention\") {\n        result.mentions.push(eventPointer);\n        continue;\n      }\n      if (!maybeParent) {\n        maybeParent = eventPointer;\n      } else {\n        maybeRoot = eventPointer;\n      }\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (tag[0] === \"q\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl] = tag;\n      result.quotes.push({\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : []\n      });\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n      continue;\n    }\n  }\n  if (!result.root) {\n    result.root = maybeRoot || maybeParent || result.reply;\n  }\n  if (!result.reply) {\n    result.reply = maybeParent || result.root;\n  }\n  ;\n  [result.reply, result.root].forEach((ref) => {\n    if (!ref)\n      return;\n    let idx = result.mentions.indexOf(ref);\n    if (idx !== -1) {\n      result.mentions.splice(idx, 1);\n    }\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays?.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  result.mentions.forEach((ref) => {\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  fastEventHash: () => fastEventHash,\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < 64; i2 += 8) {\n    const nibble = parseInt(hex.substring(i2, i2 + 8), 16);\n    if (nibble === 0) {\n      count += 32;\n    } else {\n      count += Math.clz32(nibble);\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now2 = Math.floor(new Date().getTime() / 1e3);\n    if (now2 !== event.created_at) {\n      count = 0;\n      event.created_at = now2;\n    }\n    tag[1] = (++count).toString();\n    event.id = fastEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\nfunction fastEventHash(evt) {\n  return bytesToHex5(\n    sha2562(utf8Encoder.encode(JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content])))\n  );\n}\n\n// nip17.ts\nvar nip17_exports = {};\n__export(nip17_exports, {\n  unwrapEvent: () => unwrapEvent2,\n  unwrapManyEvents: () => unwrapManyEvents2,\n  wrapEvent: () => wrapEvent2,\n  wrapManyEvents: () => wrapManyEvents2\n});\n\n// nip59.ts\nvar nip59_exports = {};\n__export(nip59_exports, {\n  createRumor: () => createRumor,\n  createSeal: () => createSeal,\n  createWrap: () => createWrap,\n  unwrapEvent: () => unwrapEvent,\n  unwrapManyEvents: () => unwrapManyEvents,\n  wrapEvent: () => wrapEvent,\n  wrapManyEvents: () => wrapManyEvents\n});\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  decrypt: () => decrypt2,\n  encrypt: () => encrypt2,\n  getConversationKey: () => getConversationKey,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2 } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar minPlaintextSize = 1;\nvar maxPlaintextSize = 65535;\nfunction getConversationKey(privkeyA, pubkeyB) {\n  const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n  return hkdf_extract(sha2563, sharedX, \"nip44-v2\");\n}\nfunction getMessageKeys(conversationKey, nonce) {\n  const keys = hkdf_expand(sha2563, conversationKey, nonce, 76);\n  return {\n    chacha_key: keys.subarray(0, 32),\n    chacha_nonce: keys.subarray(32, 44),\n    hmac_key: keys.subarray(44, 76)\n  };\n}\nfunction calcPaddedLen(len) {\n  if (!Number.isSafeInteger(len) || len < 1)\n    throw new Error(\"expected positive integer\");\n  if (len <= 32)\n    return 32;\n  const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n  const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n  return chunk * (Math.floor((len - 1) / chunk) + 1);\n}\nfunction writeU16BE(num) {\n  if (!Number.isSafeInteger(num) || num < minPlaintextSize || num > maxPlaintextSize)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const arr = new Uint8Array(2);\n  new DataView(arr.buffer).setUint16(0, num, false);\n  return arr;\n}\nfunction pad(plaintext) {\n  const unpadded = utf8Encoder.encode(plaintext);\n  const unpaddedLen = unpadded.length;\n  const prefix = writeU16BE(unpaddedLen);\n  const suffix = new Uint8Array(calcPaddedLen(unpaddedLen) - unpaddedLen);\n  return concatBytes2(prefix, unpadded, suffix);\n}\nfunction unpad(padded) {\n  const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n  const unpadded = padded.subarray(2, 2 + unpaddedLen);\n  if (unpaddedLen < minPlaintextSize || unpaddedLen > maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + calcPaddedLen(unpaddedLen))\n    throw new Error(\"invalid padding\");\n  return utf8Decoder.decode(unpadded);\n}\nfunction hmacAad(key, message, aad) {\n  if (aad.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const combined = concatBytes2(aad, message);\n  return hmac(sha2563, key, combined);\n}\nfunction decodePayload(payload) {\n  if (typeof payload !== \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const plen = payload.length;\n  if (plen < 132 || plen > 87472)\n    throw new Error(\"invalid payload length: \" + plen);\n  if (payload[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let data;\n  try {\n    data = base642.decode(payload);\n  } catch (error) {\n    throw new Error(\"invalid base64: \" + error.message);\n  }\n  const dlen = data.length;\n  if (dlen < 99 || dlen > 65603)\n    throw new Error(\"invalid data length: \" + dlen);\n  const vers = data[0];\n  if (vers !== 2)\n    throw new Error(\"unknown encryption version \" + vers);\n  return {\n    nonce: data.subarray(1, 33),\n    ciphertext: data.subarray(33, -32),\n    mac: data.subarray(-32)\n  };\n}\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const padded = pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const calculatedMac = hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return unpad(padded);\n}\nvar v2 = {\n  utils: {\n    getConversationKey,\n    calcPaddedLen\n  },\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\n\n// nip59.ts\nvar TWO_DAYS = 2 * 24 * 60 * 60;\nvar now = () => Math.round(Date.now() / 1e3);\nvar randomNow = () => Math.round(now() - Math.random() * TWO_DAYS);\nvar nip44ConversationKey = (privateKey, publicKey) => getConversationKey(privateKey, publicKey);\nvar nip44Encrypt = (data, privateKey, publicKey) => encrypt2(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey));\nvar nip44Decrypt = (data, privateKey) => JSON.parse(decrypt2(data.content, nip44ConversationKey(privateKey, data.pubkey)));\nfunction createRumor(event, privateKey) {\n  const rumor = {\n    created_at: now(),\n    content: \"\",\n    tags: [],\n    ...event,\n    pubkey: getPublicKey(privateKey)\n  };\n  rumor.id = getEventHash(rumor);\n  return rumor;\n}\nfunction createSeal(rumor, privateKey, recipientPublicKey) {\n  return finalizeEvent(\n    {\n      kind: Seal,\n      content: nip44Encrypt(rumor, privateKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: []\n    },\n    privateKey\n  );\n}\nfunction createWrap(seal, recipientPublicKey) {\n  const randomKey = generateSecretKey();\n  return finalizeEvent(\n    {\n      kind: GiftWrap,\n      content: nip44Encrypt(seal, randomKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: [[\"p\", recipientPublicKey]]\n    },\n    randomKey\n  );\n}\nfunction wrapEvent(event, senderPrivateKey, recipientPublicKey) {\n  const rumor = createRumor(event, senderPrivateKey);\n  const seal = createSeal(rumor, senderPrivateKey, recipientPublicKey);\n  return createWrap(seal, recipientPublicKey);\n}\nfunction wrapManyEvents(event, senderPrivateKey, recipientsPublicKeys) {\n  if (!recipientsPublicKeys || recipientsPublicKeys.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  const wrappeds = [wrapEvent(event, senderPrivateKey, senderPublicKey)];\n  recipientsPublicKeys.forEach((recipientPublicKey) => {\n    wrappeds.push(wrapEvent(event, senderPrivateKey, recipientPublicKey));\n  });\n  return wrappeds;\n}\nfunction unwrapEvent(wrap, recipientPrivateKey) {\n  const unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey);\n  return nip44Decrypt(unwrappedSeal, recipientPrivateKey);\n}\nfunction unwrapManyEvents(wrappedEvents, recipientPrivateKey) {\n  let unwrappedEvents = [];\n  wrappedEvents.forEach((e) => {\n    unwrappedEvents.push(unwrapEvent(e, recipientPrivateKey));\n  });\n  unwrappedEvents.sort((a, b) => a.created_at - b.created_at);\n  return unwrappedEvents;\n}\n\n// nip17.ts\nfunction createEvent(recipients, message, conversationTitle, replyTo) {\n  const baseEvent = {\n    created_at: Math.ceil(Date.now() / 1e3),\n    kind: PrivateDirectMessage,\n    tags: [],\n    content: message\n  };\n  const recipientsArray = Array.isArray(recipients) ? recipients : [recipients];\n  recipientsArray.forEach(({ publicKey, relayUrl }) => {\n    baseEvent.tags.push(relayUrl ? [\"p\", publicKey, relayUrl] : [\"p\", publicKey]);\n  });\n  if (replyTo) {\n    baseEvent.tags.push([\"e\", replyTo.eventId, replyTo.relayUrl || \"\", \"reply\"]);\n  }\n  if (conversationTitle) {\n    baseEvent.tags.push([\"subject\", conversationTitle]);\n  }\n  return baseEvent;\n}\nfunction wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo) {\n  const event = createEvent(recipient, message, conversationTitle, replyTo);\n  return wrapEvent(event, senderPrivateKey, recipient.publicKey);\n}\nfunction wrapManyEvents2(senderPrivateKey, recipients, message, conversationTitle, replyTo) {\n  if (!recipients || recipients.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  return [{ publicKey: senderPublicKey }, ...recipients].map(\n    (recipient) => wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo)\n  );\n}\nvar unwrapEvent2 = unwrapEvent;\nvar unwrapManyEvents2 = unwrapManyEvents;\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  let kind;\n  const tags = [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]];\n  if (reposted.kind === ShortTextNote) {\n    kind = Repost;\n  } else {\n    kind = GenericRepost;\n    tags.push([\"k\", String(reposted.kind)]);\n  }\n  return finalizeEvent(\n    {\n      kind,\n      tags,\n      content: t.content === \"\" || reposted.tags?.find((tag) => tag[0] === \"-\") ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (![Repost, GenericRepost].includes(event.kind)) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  parse: () => parse3\n});\nvar noCharacter = /\\W/m;\nvar noURLCharacter = /\\W |\\W$|$|,| /m;\nfunction* parse3(content) {\n  const max = content.length;\n  let prevIndex = 0;\n  let index = 0;\n  while (index < max) {\n    let u = content.indexOf(\":\", index);\n    if (u === -1) {\n      break;\n    }\n    if (content.substring(u - 5, u) === \"nostr\") {\n      const m = content.substring(u + 60).match(noCharacter);\n      const end = m ? u + 60 + m.index : max;\n      try {\n        let pointer;\n        let { data, type } = decode(content.substring(u + 1, end));\n        switch (type) {\n          case \"npub\":\n            pointer = { pubkey: data };\n            break;\n          case \"nsec\":\n          case \"note\":\n            index = end + 1;\n            continue;\n          default:\n            pointer = data;\n        }\n        if (prevIndex !== u - 5) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - 5) };\n        }\n        yield { type: \"reference\", pointer };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = u + 1;\n        continue;\n      }\n    } else if (content.substring(u - 5, u) === \"https\" || content.substring(u - 4, u) === \"http\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 5 : 4;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        if (url.pathname.endsWith(\".png\") || url.pathname.endsWith(\".jpg\") || url.pathname.endsWith(\".jpeg\") || url.pathname.endsWith(\".gif\") || url.pathname.endsWith(\".webp\")) {\n          yield { type: \"image\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp4\") || url.pathname.endsWith(\".avi\") || url.pathname.endsWith(\".webm\") || url.pathname.endsWith(\".mkv\")) {\n          yield { type: \"video\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp3\") || url.pathname.endsWith(\".aac\") || url.pathname.endsWith(\".ogg\") || url.pathname.endsWith(\".opus\")) {\n          yield { type: \"audio\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        yield { type: \"url\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else if (content.substring(u - 3, u) === \"wss\" || content.substring(u - 2, u) === \"ws\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 3 : 2;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid ws url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        yield { type: \"relay\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else {\n      index = u + 1;\n      continue;\n    }\n  }\n  if (prevIndex !== max) {\n    yield { type: \"text\", text: content.substring(prevIndex) };\n  }\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip54.ts\nvar nip54_exports = {};\n__export(nip54_exports, {\n  normalizeIdentifier: () => normalizeIdentifier\n});\nfunction normalizeIdentifier(name) {\n  name = name.trim().toLowerCase();\n  name = name.normalize(\"NFKC\");\n  return Array.from(name).map((char) => {\n    if (/\\p{Letter}/u.test(char) || /\\p{Number}/u.test(char)) {\n      return char;\n    }\n    return \"-\";\n  }).join(\"\");\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getSatoshisAmountFromBolt11: () => getSatoshisAmountFromBolt11,\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event && typeof event === \"string\") {\n    zr.tags.push([\"e\", event]);\n  }\n  if (event && typeof event === \"object\") {\n    if (isReplaceableKind(event.kind)) {\n      const a = [\"a\", `${event.kind}:${event.pubkey}:`];\n      zr.tags.push(a);\n    } else if (isAddressableKind(event.kind)) {\n      let d = event.tags.find(([t, v]) => t === \"d\" && v);\n      if (!d)\n        throw new Error(\"d tag not found or is empty\");\n      const a = [\"a\", `${event.kind}:${event.pubkey}:${d[1]}`];\n      zr.tags.push(a);\n    }\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\nfunction getSatoshisAmountFromBolt11(bolt11) {\n  if (bolt11.length < 50) {\n    return 0;\n  }\n  bolt11 = bolt11.substring(0, 50);\n  const idx = bolt11.lastIndexOf(\"1\");\n  if (idx === -1) {\n    return 0;\n  }\n  const hrp = bolt11.substring(0, idx);\n  if (!hrp.startsWith(\"lnbc\")) {\n    return 0;\n  }\n  const amount = hrp.substring(4);\n  if (amount.length < 1) {\n    return 0;\n  }\n  const char = amount[amount.length - 1];\n  const digit = char.charCodeAt(0) - \"0\".charCodeAt(0);\n  const isDigit = digit >= 0 && digit <= 9;\n  let cutPoint = amount.length - 1;\n  if (isDigit) {\n    cutPoint++;\n  }\n  if (cutPoint < 1) {\n    return 0;\n  }\n  const num = parseInt(amount.substring(0, cutPoint));\n  switch (char) {\n    case \"m\":\n      return num * 1e5;\n    case \"u\":\n      return num * 100;\n    case \"n\":\n      return num / 10;\n    case \"p\":\n      return num / 1e4;\n    default:\n      return num * 1e8;\n  }\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2564 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex6 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2564(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex6(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  Relay,\n  SimplePool,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip17_exports as nip17,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip54_exports as nip54,\n  nip57_exports as nip57,\n  nip59_exports as nip59,\n  nip98_exports as nip98,\n  parseReferences,\n  serializeEvent,\n  sortEvents,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeToCurve = exports.hashToCurve = exports.schnorr = exports.secp256k1 = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\nconst _shortw_utils_js_1 = require(\"./_shortw_utils.js\");\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = ((0, modular_js_1.pow2)(b3, _3n, P) * b3) % P;\n    const b9 = ((0, modular_js_1.pow2)(b6, _3n, P) * b3) % P;\n    const b11 = ((0, modular_js_1.pow2)(b9, _2n, P) * b2) % P;\n    const b22 = ((0, modular_js_1.pow2)(b11, _11n, P) * b11) % P;\n    const b44 = ((0, modular_js_1.pow2)(b22, _22n, P) * b22) % P;\n    const b88 = ((0, modular_js_1.pow2)(b44, _44n, P) * b44) % P;\n    const b176 = ((0, modular_js_1.pow2)(b88, _88n, P) * b88) % P;\n    const b220 = ((0, modular_js_1.pow2)(b176, _44n, P) * b44) % P;\n    const b223 = ((0, modular_js_1.pow2)(b220, _3n, P) * b3) % P;\n    const t1 = ((0, modular_js_1.pow2)(b223, _23n, P) * b22) % P;\n    const t2 = ((0, modular_js_1.pow2)(t1, _6n, P) * b2) % P;\n    const root = (0, modular_js_1.pow2)(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = (0, modular_js_1.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexports.secp256k1 = (0, _shortw_utils_js_1.createCurve)({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = (0, modular_js_1.mod)(k - c1 * a1 - c2 * a2, n);\n            let k2 = (0, modular_js_1.mod)(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256_1.sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = (0, sha256_1.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = (0, utils_js_1.concatBytes)(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return (0, sha256_1.sha256)((0, utils_js_1.concatBytes)(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => (0, utils_js_1.numberToBytesBE)(n, 32);\nconst modP = (x) => (0, modular_js_1.mod)(x, secp256k1P);\nconst modN = (x) => (0, modular_js_1.mod)(x, secp256k1N);\nconst Point = exports.secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = exports.secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN((0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = (0, utils_1.randomBytes)(32)) {\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = (0, utils_js_1.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ (0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN((0, utils_js_1.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = (0, utils_js_1.ensureBytes)('signature', signature, 64);\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const pub = (0, utils_js_1.ensureBytes)('publicKey', publicKey, 32);\n    try {\n        const P = lift_x((0, utils_js_1.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = (0, utils_js_1.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = (0, utils_js_1.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.schnorr = (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: exports.secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE: utils_js_1.numberToBytesBE,\n        bytesToNumberBE: utils_js_1.bytesToNumberBE,\n        taggedHash,\n        mod: modular_js_1.mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.isogenyMap)(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => (0, weierstrass_js_1.mapToCurveSimpleSWU)(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256_1.sha256,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapHashToField = exports.getMinHashLength = exports.getFieldBytesLength = exports.hashToPrivateScalar = exports.FpSqrtEven = exports.FpSqrtOdd = exports.Field = exports.nLength = exports.FpIsSquare = exports.FpDiv = exports.FpInvertBatch = exports.FpPow = exports.validateField = exports.isNegativeLE = exports.FpSqrt = exports.tonelliShanks = exports.invert = exports.pow2 = exports.pow = exports.mod = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nconst utils_js_1 = require(\"./utils.js\");\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nexports.mod = mod;\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\nexports.pow = pow;\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\nexports.pow2 = pow2;\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nexports.invert = invert;\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexports.tonelliShanks = tonelliShanks;\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\nexports.FpSqrt = FpSqrt;\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\nexports.isNegativeLE = isNegativeLE;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0, utils_js_1.validateObject)(field, opts);\n}\nexports.validateField = validateField;\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\nexports.FpPow = FpPow;\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexports.FpInvertBatch = FpInvertBatch;\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexports.FpDiv = FpDiv;\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\nexports.FpIsSquare = FpIsSquare;\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\nexports.nLength = nLength;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: (0, utils_js_1.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexports.Field = Field;\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexports.FpSqrtOdd = FpSqrtOdd;\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\nexports.FpSqrtEven = FpSqrtEven;\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\nexports.hashToPrivateScalar = hashToPrivateScalar;\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nfunction getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\nexports.getFieldBytesLength = getFieldBytesLength;\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nfunction getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\nexports.getMinHashLength = getMinHashLength;\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberBE)(key) : (0, utils_js_1.bytesToNumberLE)(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? (0, utils_js_1.numberToBytesLE)(reduced, fieldLen) : (0, utils_js_1.numberToBytesBE)(reduced, fieldLen);\n}\nexports.mapHashToField = mapHashToField;\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateObject = exports.createHmacDrbg = exports.bitMask = exports.bitSet = exports.bitGet = exports.bitLen = exports.utf8ToBytes = exports.equalBytes = exports.concatBytes = exports.ensureBytes = exports.numberToVarBytesBE = exports.numberToBytesLE = exports.numberToBytesBE = exports.bytesToNumberLE = exports.bytesToNumberBE = exports.hexToBytes = exports.hexToNumber = exports.numberToHexUnpadded = exports.bytesToHex = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexports.numberToHexUnpadded = numberToHexUnpadded;\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\nexports.hexToNumber = hexToNumber;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexports.bytesToNumberLE = bytesToNumberLE;\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\nexports.numberToBytesLE = numberToBytesLE;\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\nexports.numberToVarBytesBE = numberToVarBytesBE;\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\nexports.ensureBytes = ensureBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\nfunction equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexports.equalBytes = equalBytes;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\nexports.bitLen = bitLen;\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\nexports.bitGet = bitGet;\n/**\n * Sets single bit at position.\n */\nconst bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\nexports.bitSet = bitSet;\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\nexports.bitMask = bitMask;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\nexports.createHmacDrbg = createHmacDrbg;\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\nexports.validateObject = validateObject;\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapToCurveSimpleSWU = exports.SWUFpSqrtRatio = exports.weierstrass = exports.weierstrassPoints = exports.DER = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nconst mod = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst curve_js_1 = require(\"./curve.js\");\nfunction validatePointOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexports.DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = exports.DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = exports.DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = exports.DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = exports.DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE((0, utils_js_1.ensureBytes)('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes((0, utils_js_1.ensureBytes)('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = (0, curve_js_1.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nexports.weierstrassPoints = weierstrassPoints;\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = (0, utils_js_1.ensureBytes)('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = exports.DER.toSig((0, utils_js_1.ensureBytes)('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN((0, utils_js_1.ensureBytes)('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return exports.DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        if (prehash)\n            msgHash = (0, utils_js_1.ensureBytes)('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push((0, utils_js_1.ensureBytes)('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        publicKey = (0, utils_js_1.ensureBytes)('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof exports.DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\nexports.weierstrass = weierstrass;\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\nexports.SWUFpSqrtRatio = SWUFpSqrtRatio;\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nexports.mapToCurveSimpleSWU = mapToCurveSimpleSWU;\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateBasic = exports.wNAF = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexports.wNAF = wNAF;\nfunction validateBasic(curve) {\n    (0, modular_js_1.validateField)(curve.Fp);\n    (0, utils_js_1.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nexports.validateBasic = validateBasic;\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHasher = exports.isogenyMap = exports.hash_to_field = exports.expand_message_xof = exports.expand_message_xmd = void 0;\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return (0, utils_js_1.utf8ToBytes)(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = utils_js_1.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0, utils_js_1.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexports.expand_message_xmd = expand_message_xmd;\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\nexports.expand_message_xof = expand_message_xof;\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0, utils_js_1.validateObject)(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexports.hash_to_field = hash_to_field;\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexports.isogenyMap = isogenyMap;\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\nexports.createHasher = createHasher;\n//# sourceMappingURL=hash-to-curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCurve = exports.getHash = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs)),\n        randomBytes: utils_1.randomBytes,\n    };\n}\nexports.getHash = getHash;\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => (0, weierstrass_js_1.weierstrass)({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\nexports.createCurve = createCurve;\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, _assert_js_1.hash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0, _assert_js_1.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unsafe = exports.siv = exports.gcm = exports.cfb = exports.cbc = exports.ecb = exports.ctr = exports.expandKeyDecLE = exports.expandKeyLE = void 0;\n// prettier-ignore\nconst utils_js_1 = require(\"./utils.js\");\nconst _polyval_js_1 = require(\"./_polyval.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n// TODO: remove multiplication, binary ops only\nfunction mul2(n) {\n    return (n << 1) ^ (POLY & -(n >> 7));\n}\nfunction mul(a, b) {\n    let res = 0;\n    for (; b > 0; b >>= 1) {\n        // Montgomery ladder\n        res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n        a = mul2(a); // a = 2*a\n    }\n    return res;\n}\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n    let t = new Uint8Array(256);\n    for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x))\n        t[i] = x;\n    const box = new Uint8Array(256);\n    box[0] = 0x63; // first elm\n    for (let i = 0; i < 255; i++) {\n        let x = t[255 - i];\n        x |= x << 8;\n        box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n    }\n    return box;\n})();\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n// Rotate u32 by 8\nconst rotr32_8 = (n) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n) => (n << 8) | (n >>> 24);\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox, fn) {\n    if (sbox.length !== 256)\n        throw new Error('Wrong sbox length');\n    const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n    const T1 = T0.map(rotl32_8);\n    const T2 = T1.map(rotl32_8);\n    const T3 = T2.map(rotl32_8);\n    const T01 = new Uint32Array(256 * 256);\n    const T23 = new Uint32Array(256 * 256);\n    const sbox2 = new Uint16Array(256 * 256);\n    for (let i = 0; i < 256; i++) {\n        for (let j = 0; j < 256; j++) {\n            const idx = i * 256 + j;\n            T01[idx] = T0[i] ^ T1[j];\n            T23[idx] = T2[i] ^ T3[j];\n            sbox2[idx] = (sbox[i] << 8) | sbox[j];\n        }\n    }\n    return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\nconst tableEncoding = /* @__PURE__ */ genTtable(sbox, (s) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2));\nconst tableDecoding = /* @__PURE__ */ genTtable(invSbox, (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14));\nconst xPowers = /* @__PURE__ */ (() => {\n    const p = new Uint8Array(16);\n    for (let i = 0, x = 1; i < 16; i++, x = mul2(x))\n        p[i] = x;\n    return p;\n})();\nfunction expandKeyLE(key) {\n    (0, _assert_js_1.bytes)(key);\n    const len = key.length;\n    if (![16, 24, 32].includes(len))\n        throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n    const { sbox2 } = tableEncoding;\n    const k32 = (0, utils_js_1.u32)(key);\n    const Nk = k32.length;\n    const subByte = (n) => applySbox(sbox2, n, n, n, n);\n    const xk = new Uint32Array(len + 28); // expanded key\n    xk.set(k32);\n    // 4.3.1 Key expansion\n    for (let i = Nk; i < xk.length; i++) {\n        let t = xk[i - 1];\n        if (i % Nk === 0)\n            t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n        else if (Nk > 6 && i % Nk === 4)\n            t = subByte(t);\n        xk[i] = xk[i - Nk] ^ t;\n    }\n    return xk;\n}\nexports.expandKeyLE = expandKeyLE;\nfunction expandKeyDecLE(key) {\n    const encKey = expandKeyLE(key);\n    const xk = encKey.slice();\n    const Nk = encKey.length;\n    const { sbox2 } = tableEncoding;\n    const { T0, T1, T2, T3 } = tableDecoding;\n    // Inverse key by chunks of 4 (rounds)\n    for (let i = 0; i < Nk; i += 4) {\n        for (let j = 0; j < 4; j++)\n            xk[i + j] = encKey[Nk - i - 4 + j];\n    }\n    encKey.fill(0);\n    // apply InvMixColumn except first & last round\n    for (let i = 4; i < Nk - 4; i++) {\n        const x = xk[i];\n        const w = applySbox(sbox2, x, x, x, x);\n        xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n    }\n    return xk;\n}\nexports.expandKeyDecLE = expandKeyDecLE;\n// Apply tables\nfunction apply0123(T01, T23, s0, s1, s2, s3) {\n    return (T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n        T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]);\n}\nfunction applySbox(sbox2, s0, s1, s2, s3) {\n    return (sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n        (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16));\n}\nfunction encrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableEncoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // last round (without mixcolumns, so using SBOX2 table)\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction decrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableDecoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // Last round\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction getDst(len, dst) {\n    if (!dst)\n        return new Uint8Array(len);\n    (0, _assert_js_1.bytes)(dst);\n    if (dst.length < len)\n        throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n    return dst;\n}\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk, nonce, src, dst) {\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    (0, _assert_js_1.bytes)(src);\n    const srcLen = src.length;\n    dst = getDst(srcLen, dst);\n    const ctr = nonce;\n    const c32 = (0, utils_js_1.u32)(ctr);\n    // Fill block (empty, ctr=0)\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    const src32 = (0, utils_js_1.u32)(src);\n    const dst32 = (0, utils_js_1.u32)(dst);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        // Full 128 bit counter with wrap around\n        let carry = 1;\n        for (let i = ctr.length - 1; i >= 0; i--) {\n            carry = (carry + (ctr[i] & 0xff)) | 0;\n            ctr[i] = carry & 0xff;\n            carry >>>= 8;\n        }\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than block)\n    // It's possible to handle > u32 fast, but is it worth it?\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = (0, utils_js_1.u8)(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(xk, isLE, nonce, src, dst) {\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    (0, _assert_js_1.bytes)(src);\n    dst = getDst(src.length, dst);\n    const ctr = nonce; // write new value to nonce, so it can be re-used\n    const c32 = (0, utils_js_1.u32)(ctr);\n    const view = (0, utils_js_1.createView)(ctr);\n    const src32 = (0, utils_js_1.u32)(src);\n    const dst32 = (0, utils_js_1.u32)(dst);\n    const ctrPos = isLE ? 0 : 12;\n    const srcLen = src.length;\n    // Fill block (empty, ctr=0)\n    let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n        view.setUint32(ctrPos, ctrNum, isLE);\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than a block)\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = (0, utils_js_1.u8)(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexports.ctr = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function ctr(key, nonce) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(nonce, BLOCK_SIZE);\n    function processCtr(buf, dst) {\n        const xk = expandKeyLE(key);\n        const n = nonce.slice();\n        const out = ctrCounter(xk, n, buf, dst);\n        xk.fill(0);\n        n.fill(0);\n        return out;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCtr(plaintext, dst),\n        decrypt: (ciphertext, dst) => processCtr(ciphertext, dst),\n    };\n});\nfunction validateBlockDecrypt(data) {\n    (0, _assert_js_1.bytes)(data);\n    if (data.length % BLOCK_SIZE !== 0) {\n        throw new Error(`aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`);\n    }\n}\nfunction validateBlockEncrypt(plaintext, pcks5, dst) {\n    let outLen = plaintext.length;\n    const remaining = outLen % BLOCK_SIZE;\n    if (!pcks5 && remaining !== 0)\n        throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n    const b = (0, utils_js_1.u32)(plaintext);\n    if (pcks5) {\n        let left = BLOCK_SIZE - remaining;\n        if (!left)\n            left = BLOCK_SIZE; // if no bytes left, create empty padding block\n        outLen = outLen + left;\n    }\n    const out = getDst(outLen, dst);\n    const o = (0, utils_js_1.u32)(out);\n    return { b, o, out };\n}\nfunction validatePCKS(data, pcks5) {\n    if (!pcks5)\n        return data;\n    const len = data.length;\n    if (!len)\n        throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n    const lastByte = data[len - 1];\n    if (lastByte <= 0 || lastByte > 16)\n        throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n    const out = data.subarray(0, -lastByte);\n    for (let i = 0; i < lastByte; i++)\n        if (data[len - i - 1] !== lastByte)\n            throw new Error(`aes/pcks5: wrong padding`);\n    return out;\n}\nfunction padPCKS(left) {\n    const tmp = new Uint8Array(16);\n    const tmp32 = (0, utils_js_1.u32)(tmp);\n    tmp.set(left);\n    const paddingByte = BLOCK_SIZE - left.length;\n    for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++)\n        tmp[i] = paddingByte;\n    return tmp32;\n}\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexports.ecb = (0, utils_js_1.wrapCipher)({ blockSize: 16 }, function ecb(key, opts = {}) {\n    (0, _assert_js_1.bytes)(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const xk = expandKeyLE(key);\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const out = getDst(ciphertext.length, dst);\n            const b = (0, utils_js_1.u32)(ciphertext);\n            const o = (0, utils_js_1.u32)(out);\n            for (let i = 0; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexports.cbc = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function cbc(key, iv, opts = {}) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            const xk = expandKeyLE(key);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const n32 = (0, utils_js_1.u32)(iv);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const n32 = (0, utils_js_1.u32)(iv);\n            const out = getDst(ciphertext.length, dst);\n            const b = (0, utils_js_1.u32)(ciphertext);\n            const o = (0, utils_js_1.u32)(out);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            for (let i = 0; i + 4 <= b.length;) {\n                // prettier-ignore\n                const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n                (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n                const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n                (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexports.cfb = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function cfb(key, iv) {\n    (0, _assert_js_1.bytes)(key);\n    (0, _assert_js_1.bytes)(iv, 16);\n    function processCfb(src, isEncrypt, dst) {\n        const xk = expandKeyLE(key);\n        const srcLen = src.length;\n        dst = getDst(srcLen, dst);\n        const src32 = (0, utils_js_1.u32)(src);\n        const dst32 = (0, utils_js_1.u32)(dst);\n        const next32 = isEncrypt ? dst32 : src32;\n        const n32 = (0, utils_js_1.u32)(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= src32.length;) {\n            const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n            dst32[i + 0] = src32[i + 0] ^ e0;\n            dst32[i + 1] = src32[i + 1] ^ e1;\n            dst32[i + 2] = src32[i + 2] ^ e2;\n            dst32[i + 3] = src32[i + 3] ^ e3;\n            (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n        }\n        // leftovers (less than block)\n        const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n        if (start < srcLen) {\n            ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n            const buf = (0, utils_js_1.u8)(new Uint32Array([s0, s1, s2, s3]));\n            for (let i = start, pos = 0; i < srcLen; i++, pos++)\n                dst[i] = src[i] ^ buf[pos];\n            buf.fill(0);\n        }\n        xk.fill(0);\n        return dst;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCfb(plaintext, true, dst),\n        decrypt: (ciphertext, dst) => processCfb(ciphertext, false, dst),\n    };\n});\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(fn, isLE, key, data, AAD) {\n    const h = fn.create(key, data.length + (AAD?.length || 0));\n    if (AAD)\n        h.update(AAD);\n    h.update(data);\n    const num = new Uint8Array(16);\n    const view = (0, utils_js_1.createView)(num);\n    if (AAD)\n        (0, utils_js_1.setBigUint64)(view, 0, BigInt(AAD.length * 8), isLE);\n    (0, utils_js_1.setBigUint64)(view, 8, BigInt(data.length * 8), isLE);\n    h.update(num);\n    return h.digest();\n}\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexports.gcm = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function gcm(key, nonce, AAD) {\n    (0, _assert_js_1.bytes)(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0)\n        throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey, tagMask, data) {\n        const tag = computeTag(_polyval_js_1.ghash, false, authKey, data, AAD);\n        for (let i = 0; i < tagMask.length; i++)\n            tag[i] ^= tagMask[i];\n        return tag;\n    }\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const authKey = EMPTY_BLOCK.slice();\n        const counter = EMPTY_BLOCK.slice();\n        ctr32(xk, false, counter, counter, authKey);\n        if (nonce.length === 12) {\n            counter.set(nonce);\n        }\n        else {\n            // Spec (NIST 800-38d) supports variable size nonce.\n            // Not supported for now, but can be useful.\n            const nonceLen = EMPTY_BLOCK.slice();\n            const view = (0, utils_js_1.createView)(nonceLen);\n            (0, utils_js_1.setBigUint64)(view, 8, BigInt(nonce.length * 8), false);\n            // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n            _polyval_js_1.ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n        }\n        const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n        return { xk, authKey, counter, tagMask };\n    }\n    return {\n        encrypt: (plaintext) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const out = new Uint8Array(plaintext.length + tagLength);\n            ctr32(xk, false, counter, plaintext, out);\n            const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n            out.set(tag, plaintext.length);\n            xk.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            (0, _assert_js_1.bytes)(ciphertext);\n            if (ciphertext.length < tagLength)\n                throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = _computeTag(authKey, tagMask, data);\n            if (!(0, utils_js_1.equalBytes)(tag, passedTag))\n                throw new Error('aes/gcm: invalid ghash tag');\n            const out = ctr32(xk, false, counter, data);\n            authKey.fill(0);\n            tagMask.fill(0);\n            xk.fill(0);\n            return out;\n        },\n    };\n});\nconst limit = (name, min, max) => (value) => {\n    if (!Number.isSafeInteger(value) || min > value || value > max)\n        throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexports.siv = (0, utils_js_1.wrapCipher)({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function siv(key, nonce, AAD) {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    (0, _assert_js_1.bytes)(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n        (0, _assert_js_1.bytes)(AAD);\n        AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n        const len = key.length;\n        if (len !== 16 && len !== 24 && len !== 32)\n            throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n        const xk = expandKeyLE(key);\n        const encKey = new Uint8Array(len);\n        const authKey = new Uint8Array(16);\n        const n32 = (0, utils_js_1.u32)(nonce);\n        // prettier-ignore\n        let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n        let counter = 0;\n        for (const derivedKey of [authKey, encKey].map(utils_js_1.u32)) {\n            const d32 = (0, utils_js_1.u32)(derivedKey);\n            for (let i = 0; i < d32.length; i += 2) {\n                // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n                const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n                d32[i + 0] = o0;\n                d32[i + 1] = o1;\n                s0 = ++counter; // increment counter inside state\n            }\n        }\n        xk.fill(0);\n        return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey, authKey, data) {\n        const tag = computeTag(_polyval_js_1.polyval, true, authKey, data, AAD);\n        // Compute the expected tag by XORing S_s and the nonce, clearing the\n        // most significant bit of the last byte and encrypting with the\n        // message-encryption key.\n        for (let i = 0; i < 12; i++)\n            tag[i] ^= nonce[i];\n        tag[15] &= 0x7f; // Clear the highest bit\n        // encrypt tag as block\n        const t32 = (0, utils_js_1.u32)(tag);\n        // prettier-ignore\n        let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n        ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n        (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n        return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey, tag, input) {\n        let block = tag.slice();\n        block[15] |= 0x80; // Force highest bit\n        return ctr32(encKey, true, block, input);\n    }\n    return {\n        encrypt: (plaintext) => {\n            (0, _assert_js_1.bytes)(plaintext);\n            PLAIN_LIMIT(plaintext.length);\n            const { encKey, authKey } = deriveKeys();\n            const tag = _computeTag(encKey, authKey, plaintext);\n            const out = new Uint8Array(plaintext.length + tagLength);\n            out.set(tag, plaintext.length);\n            out.set(processSiv(encKey, tag, plaintext));\n            encKey.fill(0);\n            authKey.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            (0, _assert_js_1.bytes)(ciphertext);\n            CIPHER_LIMIT(ciphertext.length);\n            const tag = ciphertext.subarray(-tagLength);\n            const { encKey, authKey } = deriveKeys();\n            const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n            const expectedTag = _computeTag(encKey, authKey, plaintext);\n            encKey.fill(0);\n            authKey.fill(0);\n            if (!(0, utils_js_1.equalBytes)(tag, expectedTag))\n                throw new Error('invalid polyval tag');\n            return plaintext;\n        },\n    };\n});\nfunction isBytes32(a) {\n    return (a != null &&\n        typeof a === 'object' &&\n        (a instanceof Uint32Array || a.constructor.name === 'Uint32Array'));\n}\nfunction encryptBlock(xk, block) {\n    (0, _assert_js_1.bytes)(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_encryptBlock accepts result of expandKeyLE');\n    const b32 = (0, utils_js_1.u32)(block);\n    let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\nfunction decryptBlock(xk, block) {\n    (0, _assert_js_1.bytes)(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_decryptBlock accepts result of expandKeyLE');\n    const b32 = (0, utils_js_1.u32)(block);\n    let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexports.unsafe = {\n    expandKeyLE,\n    expandKeyDecLE,\n    encrypt,\n    decrypt,\n    encryptBlock,\n    decryptBlock,\n    ctrCounter,\n    ctr32,\n};\n//# sourceMappingURL=aes.js.map","// prettier-ignore\nimport {\n  wrapCipher, Cipher, CipherWithOutput,\n  createView, setBigUint64, equalBytes, u32, u8,\n} from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\n\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n\n// TODO: remove multiplication, binary ops only\nfunction mul2(n: number) {\n  return (n << 1) ^ (POLY & -(n >> 7));\n}\n\nfunction mul(a: number, b: number) {\n  let res = 0;\n  for (; b > 0; b >>= 1) {\n    // Montgomery ladder\n    res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n    a = mul2(a); // a = 2*a\n  }\n  return res;\n}\n\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n  let t = new Uint8Array(256);\n  for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x)) t[i] = x;\n  const box = new Uint8Array(256);\n  box[0] = 0x63; // first elm\n  for (let i = 0; i < 255; i++) {\n    let x = t[255 - i];\n    x |= x << 8;\n    box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n  }\n  return box;\n})();\n\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n\n// Rotate u32 by 8\nconst rotr32_8 = (n: number) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n: number) => (n << 8) | (n >>> 24);\n\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox: Uint8Array, fn: (n: number) => number) {\n  if (sbox.length !== 256) throw new Error('Wrong sbox length');\n  const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n  const T1 = T0.map(rotl32_8);\n  const T2 = T1.map(rotl32_8);\n  const T3 = T2.map(rotl32_8);\n  const T01 = new Uint32Array(256 * 256);\n  const T23 = new Uint32Array(256 * 256);\n  const sbox2 = new Uint16Array(256 * 256);\n  for (let i = 0; i < 256; i++) {\n    for (let j = 0; j < 256; j++) {\n      const idx = i * 256 + j;\n      T01[idx] = T0[i] ^ T1[j];\n      T23[idx] = T2[i] ^ T3[j];\n      sbox2[idx] = (sbox[i] << 8) | sbox[j];\n    }\n  }\n  return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\n\nconst tableEncoding = /* @__PURE__ */ genTtable(\n  sbox,\n  (s: number) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2)\n);\nconst tableDecoding = /* @__PURE__ */ genTtable(\n  invSbox,\n  (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14)\n);\n\nconst xPowers = /* @__PURE__ */ (() => {\n  const p = new Uint8Array(16);\n  for (let i = 0, x = 1; i < 16; i++, x = mul2(x)) p[i] = x;\n  return p;\n})();\n\nexport function expandKeyLE(key: Uint8Array): Uint32Array {\n  abytes(key);\n  const len = key.length;\n  if (![16, 24, 32].includes(len))\n    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n  const { sbox2 } = tableEncoding;\n  const k32 = u32(key);\n  const Nk = k32.length;\n  const subByte = (n: number) => applySbox(sbox2, n, n, n, n);\n  const xk = new Uint32Array(len + 28); // expanded key\n  xk.set(k32);\n  // 4.3.1 Key expansion\n  for (let i = Nk; i < xk.length; i++) {\n    let t = xk[i - 1];\n    if (i % Nk === 0) t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n    else if (Nk > 6 && i % Nk === 4) t = subByte(t);\n    xk[i] = xk[i - Nk] ^ t;\n  }\n  return xk;\n}\n\nexport function expandKeyDecLE(key: Uint8Array): Uint32Array {\n  const encKey = expandKeyLE(key);\n  const xk = encKey.slice();\n  const Nk = encKey.length;\n  const { sbox2 } = tableEncoding;\n  const { T0, T1, T2, T3 } = tableDecoding;\n  // Inverse key by chunks of 4 (rounds)\n  for (let i = 0; i < Nk; i += 4) {\n    for (let j = 0; j < 4; j++) xk[i + j] = encKey[Nk - i - 4 + j];\n  }\n  encKey.fill(0);\n  // apply InvMixColumn except first & last round\n  for (let i = 4; i < Nk - 4; i++) {\n    const x = xk[i];\n    const w = applySbox(sbox2, x, x, x, x);\n    xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n  }\n  return xk;\n}\n\n// Apply tables\nfunction apply0123(\n  T01: Uint32Array,\n  T23: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n) {\n  return (\n    T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n    T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]\n  );\n}\n\nfunction applySbox(sbox2: Uint16Array, s0: number, s1: number, s2: number, s3: number) {\n  return (\n    sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n    (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16)\n  );\n}\n\nfunction encrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableEncoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // last round (without mixcolumns, so using SBOX2 table)\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction decrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableDecoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // Last round\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction getDst(len: number, dst?: Uint8Array) {\n  if (!dst) return new Uint8Array(len);\n  abytes(dst);\n  if (dst.length < len)\n    throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n  return dst;\n}\n\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk: Uint32Array, nonce: Uint8Array, src: Uint8Array, dst?: Uint8Array) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  const srcLen = src.length;\n  dst = getDst(srcLen, dst);\n  const ctr = nonce;\n  const c32 = u32(ctr);\n  // Fill block (empty, ctr=0)\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    // Full 128 bit counter with wrap around\n    let carry = 1;\n    for (let i = ctr.length - 1; i >= 0; i--) {\n      carry = (carry + (ctr[i] & 0xff)) | 0;\n      ctr[i] = carry & 0xff;\n      carry >>>= 8;\n    }\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than block)\n  // It's possible to handle > u32 fast, but is it worth it?\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(\n  xk: Uint32Array,\n  isLE: boolean,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  dst = getDst(src.length, dst);\n  const ctr = nonce; // write new value to nonce, so it can be re-used\n  const c32 = u32(ctr);\n  const view = createView(ctr);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  const ctrPos = isLE ? 0 : 12;\n  const srcLen = src.length;\n  // Fill block (empty, ctr=0)\n  let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n    view.setUint32(ctrPos, ctrNum, isLE);\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than a block)\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function ctr(key: Uint8Array, nonce: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf: Uint8Array, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const n = nonce.slice();\n      const out = ctrCounter(xk, n, buf, dst);\n      xk.fill(0);\n      n.fill(0);\n      return out;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCtr(plaintext, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCtr(ciphertext, dst),\n    };\n  }\n);\n\nfunction validateBlockDecrypt(data: Uint8Array) {\n  abytes(data);\n  if (data.length % BLOCK_SIZE !== 0) {\n    throw new Error(\n      `aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`\n    );\n  }\n}\n\nfunction validateBlockEncrypt(plaintext: Uint8Array, pcks5: boolean, dst?: Uint8Array) {\n  let outLen = plaintext.length;\n  const remaining = outLen % BLOCK_SIZE;\n  if (!pcks5 && remaining !== 0)\n    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n  const b = u32(plaintext);\n  if (pcks5) {\n    let left = BLOCK_SIZE - remaining;\n    if (!left) left = BLOCK_SIZE; // if no bytes left, create empty padding block\n    outLen = outLen + left;\n  }\n  const out = getDst(outLen, dst);\n  const o = u32(out);\n  return { b, o, out };\n}\n\nfunction validatePCKS(data: Uint8Array, pcks5: boolean) {\n  if (!pcks5) return data;\n  const len = data.length;\n  if (!len) throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n  const lastByte = data[len - 1];\n  if (lastByte <= 0 || lastByte > 16) throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n  const out = data.subarray(0, -lastByte);\n  for (let i = 0; i < lastByte; i++)\n    if (data[len - i - 1] !== lastByte) throw new Error(`aes/pcks5: wrong padding`);\n  return out;\n}\n\nfunction padPCKS(left: Uint8Array) {\n  const tmp = new Uint8Array(16);\n  const tmp32 = u32(tmp);\n  tmp.set(left);\n  const paddingByte = BLOCK_SIZE - left.length;\n  for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++) tmp[i] = paddingByte;\n  return tmp32;\n}\n\nexport type BlockOpts = { disablePadding?: boolean };\n\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher(\n  { blockSize: 16 },\n  function ecb(key: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        abytes(plaintext);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const xk = expandKeyLE(key);\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        for (let i = 0; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cbc(key: Uint8Array, iv: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        const xk = expandKeyLE(key);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const n32 = u32(iv);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= b.length; ) {\n          // prettier-ignore\n          const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n          (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n          const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n          (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cfb(key: Uint8Array, iv: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src: Uint8Array, isEncrypt: boolean, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const srcLen = src.length;\n      dst = getDst(srcLen, dst);\n      const src32 = u32(src);\n      const dst32 = u32(dst);\n      const next32 = isEncrypt ? dst32 : src32;\n      const n32 = u32(iv);\n      // prettier-ignore\n      let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n      for (let i = 0; i + 4 <= src32.length; ) {\n        const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n        dst32[i + 0] = src32[i + 0] ^ e0;\n        dst32[i + 1] = src32[i + 1] ^ e1;\n        dst32[i + 2] = src32[i + 2] ^ e2;\n        dst32[i + 3] = src32[i + 3] ^ e3;\n        (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n      }\n      // leftovers (less than block)\n      const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n      if (start < srcLen) {\n        ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n        const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n        for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n        buf.fill(0);\n      }\n      xk.fill(0);\n      return dst;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCfb(plaintext, true, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCfb(ciphertext, false, dst),\n    };\n  }\n);\n\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(\n  fn: typeof ghash,\n  isLE: boolean,\n  key: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) {\n  const h = fn.create(key, data.length + (AAD?.length || 0));\n  if (AAD) h.update(AAD);\n  h.update(data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  if (AAD) setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n  setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n  h.update(num);\n  return h.digest();\n}\n\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function gcm(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0) throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey: Uint8Array, tagMask: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(ghash, false, authKey, data, AAD);\n      for (let i = 0; i < tagMask.length; i++) tag[i] ^= tagMask[i];\n      return tag;\n    }\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const authKey = EMPTY_BLOCK.slice();\n      const counter = EMPTY_BLOCK.slice();\n      ctr32(xk, false, counter, counter, authKey);\n      if (nonce.length === 12) {\n        counter.set(nonce);\n      } else {\n        // Spec (NIST 800-38d) supports variable size nonce.\n        // Not supported for now, but can be useful.\n        const nonceLen = EMPTY_BLOCK.slice();\n        const view = createView(nonceLen);\n        setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n        // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n        ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n      }\n      const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n      return { xk, authKey, counter, tagMask };\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const out = new Uint8Array(plaintext.length + tagLength);\n        ctr32(xk, false, counter, plaintext, out);\n        const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n        out.set(tag, plaintext.length);\n        xk.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        if (ciphertext.length < tagLength)\n          throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = _computeTag(authKey, tagMask, data);\n        if (!equalBytes(tag, passedTag)) throw new Error('aes/gcm: invalid ghash tag');\n        const out = ctr32(xk, false, counter, data);\n        authKey.fill(0);\n        tagMask.fill(0);\n        xk.fill(0);\n        return out;\n      },\n    };\n  }\n);\n\nconst limit = (name: string, min: number, max: number) => (value: number) => {\n  if (!Number.isSafeInteger(value) || min > value || value > max)\n    throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function siv(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n      abytes(AAD);\n      AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n      const len = key.length;\n      if (len !== 16 && len !== 24 && len !== 32)\n        throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n      const xk = expandKeyLE(key);\n      const encKey = new Uint8Array(len);\n      const authKey = new Uint8Array(16);\n      const n32 = u32(nonce);\n      // prettier-ignore\n      let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n      let counter = 0;\n      for (const derivedKey of [authKey, encKey].map(u32)) {\n        const d32 = u32(derivedKey);\n        for (let i = 0; i < d32.length; i += 2) {\n          // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n          const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n          d32[i + 0] = o0;\n          d32[i + 1] = o1;\n          s0 = ++counter; // increment counter inside state\n        }\n      }\n      xk.fill(0);\n      return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey: Uint32Array, authKey: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(polyval, true, authKey, data, AAD);\n      // Compute the expected tag by XORing S_s and the nonce, clearing the\n      // most significant bit of the last byte and encrypting with the\n      // message-encryption key.\n      for (let i = 0; i < 12; i++) tag[i] ^= nonce[i];\n      tag[15] &= 0x7f; // Clear the highest bit\n      // encrypt tag as block\n      const t32 = u32(tag);\n      // prettier-ignore\n      let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n      ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n      (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n      return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey: Uint32Array, tag: Uint8Array, input: Uint8Array) {\n      let block = tag.slice();\n      block[15] |= 0x80; // Force highest bit\n      return ctr32(encKey, true, block, input);\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        PLAIN_LIMIT(plaintext.length);\n        const { encKey, authKey } = deriveKeys();\n        const tag = _computeTag(encKey, authKey, plaintext);\n        const out = new Uint8Array(plaintext.length + tagLength);\n        out.set(tag, plaintext.length);\n        out.set(processSiv(encKey, tag, plaintext));\n        encKey.fill(0);\n        authKey.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        CIPHER_LIMIT(ciphertext.length);\n        const tag = ciphertext.subarray(-tagLength);\n        const { encKey, authKey } = deriveKeys();\n        const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n        const expectedTag = _computeTag(encKey, authKey, plaintext);\n        encKey.fill(0);\n        authKey.fill(0);\n        if (!equalBytes(tag, expectedTag)) throw new Error('invalid polyval tag');\n        return plaintext;\n      },\n    };\n  }\n);\n\nfunction isBytes32(a: unknown): a is Uint8Array {\n  return (\n    a != null &&\n    typeof a === 'object' &&\n    (a instanceof Uint32Array || a.constructor.name === 'Uint32Array')\n  );\n}\n\nfunction encryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_encryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\nfunction decryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_decryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n  expandKeyLE,\n  expandKeyDecLE,\n  encrypt,\n  decrypt,\n  encryptBlock,\n  decryptBlock,\n  ctrCounter,\n  ctr32,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.u64Lengths = exports.setBigUint64 = exports.wrapCipher = exports.Hash = exports.equalBytes = exports.checkOpts = exports.concatBytes = exports.toBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.numberToBytesBE = exports.bytesToNumberBE = exports.hexToNumber = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.createView = exports.u32 = exports.u16 = exports.u8 = void 0;\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nconst _assert_js_1 = require(\"./_assert.js\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexports.u16 = u16;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\nexports.hexToNumber = hexToNumber;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`string expected, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToUtf8 = bytesToUtf8;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if ((0, _assert_js_1.isBytes)(data))\n        data = data.slice();\n    else\n        throw new Error(`Uint8Array expected, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\nfunction checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\nexports.equalBytes = equalBytes;\n// For runtime check if class implements interface\nclass Hash {\n}\nexports.Hash = Hash;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nconst wrapCipher = (params, c) => {\n    Object.assign(c, params);\n    return c;\n};\nexports.wrapCipher = wrapCipher;\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexports.setBigUint64 = setBigUint64;\nfunction u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = (0, exports.createView)(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\nexports.u64Lengths = u64Lengths;\n//# sourceMappingURL=utils.js.map","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`string expected, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  else if (isBytes(data)) data = data.slice();\n  else throw new Error(`Uint8Array expected, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts: T2\n): T1 & T2 {\n  if (opts == null || typeof opts !== 'object') throw new Error('options must be defined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n// Params is outside return type, so it is accessible before calling constructor\n// If function support multiple nonceLength's, we return best one\nexport type CipherParams = { blockSize: number; nonceLength?: number; tagLength?: number };\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  c: C\n): C & P => {\n  Object.assign(c, params);\n  return c as C & P;\n};\n\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\nexport function u64Lengths(ciphertext: Uint8Array, AAD?: Uint8Array) {\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(ciphertext.length), true);\n  return num;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('hash must be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.polyval = exports.ghash = exports._toGHASHKey = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = (0, utils_js_1.u32)(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0, s1, s2, s3) => {\n    const hiBit = s3 & 1;\n    return {\n        s3: (s2 << 31) | (s3 >>> 1),\n        s2: (s1 << 31) | (s2 >>> 1),\n        s1: (s0 << 31) | (s1 >>> 1),\n        s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n    };\n};\nconst swapLE = (n) => (((n >>> 0) & 0xff) << 24) |\n    (((n >>> 8) & 0xff) << 16) |\n    (((n >>> 16) & 0xff) << 8) |\n    ((n >>> 24) & 0xff) |\n    0;\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nfunction _toGHASHKey(k) {\n    k.reverse();\n    const hiBit = k[15] & 1;\n    // k >>= 1\n    let carry = 0;\n    for (let i = 0; i < k.length; i++) {\n        const t = k[i];\n        k[i] = (t >>> 1) | carry;\n        carry = (t & 1) << 7;\n    }\n    k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n    return k;\n}\nexports._toGHASHKey = _toGHASHKey;\nconst estimateWindow = (bytes) => {\n    if (bytes > 64 * 1024)\n        return 8;\n    if (bytes > 1024)\n        return 4;\n    return 2;\n};\nclass GHASH {\n    // We select bits per window adaptively based on expectedLength\n    constructor(key, expectedLength) {\n        this.blockLen = BLOCK_SIZE;\n        this.outputLen = BLOCK_SIZE;\n        this.s0 = 0;\n        this.s1 = 0;\n        this.s2 = 0;\n        this.s3 = 0;\n        this.finished = false;\n        key = (0, utils_js_1.toBytes)(key);\n        (0, _assert_js_1.bytes)(key, 16);\n        const kView = (0, utils_js_1.createView)(key);\n        let k0 = kView.getUint32(0, false);\n        let k1 = kView.getUint32(4, false);\n        let k2 = kView.getUint32(8, false);\n        let k3 = kView.getUint32(12, false);\n        // generate table of doubled keys (half of montgomery ladder)\n        const doubles = [];\n        for (let i = 0; i < 128; i++) {\n            doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n            ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n        }\n        const W = estimateWindow(expectedLength || 1024);\n        if (![1, 2, 4, 8].includes(W))\n            throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n        this.W = W;\n        const bits = 128; // always 128 bits;\n        const windows = bits / W;\n        const windowSize = (this.windowSize = 2 ** W);\n        const items = [];\n        // Create precompute table for window of W bits\n        for (let w = 0; w < windows; w++) {\n            // truth table: 00, 01, 10, 11\n            for (let byte = 0; byte < windowSize; byte++) {\n                // prettier-ignore\n                let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n                for (let j = 0; j < W; j++) {\n                    const bit = (byte >>> (W - j - 1)) & 1;\n                    if (!bit)\n                        continue;\n                    const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n                    (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n                }\n                items.push({ s0, s1, s2, s3 });\n            }\n        }\n        this.t = items;\n    }\n    _updateBlock(s0, s1, s2, s3) {\n        (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n        const { W, t, windowSize } = this;\n        // prettier-ignore\n        let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n        const mask = (1 << W) - 1; // 2**W will kill performance.\n        let w = 0;\n        for (const num of [s0, s1, s2, s3]) {\n            for (let bytePos = 0; bytePos < 4; bytePos++) {\n                const byte = (num >>> (8 * bytePos)) & 0xff;\n                for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n                    const bit = (byte >>> (W * bitPos)) & mask;\n                    const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n                    (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n                    w += 1;\n                }\n            }\n        }\n        this.s0 = o0;\n        this.s1 = o1;\n        this.s2 = o2;\n        this.s3 = o3;\n    }\n    update(data) {\n        data = (0, utils_js_1.toBytes)(data);\n        (0, _assert_js_1.exists)(this);\n        const b32 = (0, utils_js_1.u32)(data);\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        const left = data.length % BLOCK_SIZE;\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    destroy() {\n        const { t } = this;\n        // clean precompute table\n        for (const elm of t) {\n            (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n        }\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        const { s0, s1, s2, s3 } = this;\n        const o32 = (0, utils_js_1.u32)(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out;\n    }\n    digest() {\n        const res = new Uint8Array(BLOCK_SIZE);\n        this.digestInto(res);\n        this.destroy();\n        return res;\n    }\n}\nclass Polyval extends GHASH {\n    constructor(key, expectedLength) {\n        key = (0, utils_js_1.toBytes)(key);\n        const ghKey = _toGHASHKey(key.slice());\n        super(ghKey, expectedLength);\n        ghKey.fill(0);\n    }\n    update(data) {\n        data = (0, utils_js_1.toBytes)(data);\n        (0, _assert_js_1.exists)(this);\n        const b32 = (0, utils_js_1.u32)(data);\n        const left = data.length % BLOCK_SIZE;\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(swapLE(b32[i * 4 + 3]), swapLE(b32[i * 4 + 2]), swapLE(b32[i * 4 + 1]), swapLE(b32[i * 4 + 0]));\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(swapLE(ZEROS32[3]), swapLE(ZEROS32[2]), swapLE(ZEROS32[1]), swapLE(ZEROS32[0]));\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // tmp ugly hack\n        const { s0, s1, s2, s3 } = this;\n        const o32 = (0, utils_js_1.u32)(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out.reverse();\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key, msg.length).update((0, utils_js_1.toBytes)(msg)).digest();\n    const tmp = hashCons(new Uint8Array(16), 0);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key, expectedLength) => hashCons(key, expectedLength);\n    return hashC;\n}\nexports.ghash = wrapConstructorWithKey((key, expectedLength) => new GHASH(key, expectedLength));\nexports.polyval = wrapConstructorWithKey((key, expectedLength) => new Polyval(key, expectedLength));\n//# sourceMappingURL=_polyval.js.map","import { createView, toBytes, Input, Hash, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0: number, s1: number, s2: number, s3: number) => {\n  const hiBit = s3 & 1;\n  return {\n    s3: (s2 << 31) | (s3 >>> 1),\n    s2: (s1 << 31) | (s2 >>> 1),\n    s1: (s0 << 31) | (s1 >>> 1),\n    s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n  };\n};\n\nconst swapLE = (n: number) =>\n  (((n >>> 0) & 0xff) << 24) |\n  (((n >>> 8) & 0xff) << 16) |\n  (((n >>> 16) & 0xff) << 8) |\n  ((n >>> 24) & 0xff) |\n  0;\n\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k: Uint8Array): Uint8Array {\n  k.reverse();\n  const hiBit = k[15] & 1;\n  // k >>= 1\n  let carry = 0;\n  for (let i = 0; i < k.length; i++) {\n    const t = k[i];\n    k[i] = (t >>> 1) | carry;\n    carry = (t & 1) << 7;\n  }\n  k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n  return k;\n}\n\ntype Value = { s0: number; s1: number; s2: number; s3: number };\n\nconst estimateWindow = (bytes: number) => {\n  if (bytes > 64 * 1024) return 8;\n  if (bytes > 1024) return 4;\n  return 2;\n};\n\nclass GHASH implements Hash<GHASH> {\n  readonly blockLen = BLOCK_SIZE;\n  readonly outputLen = BLOCK_SIZE;\n  protected s0 = 0;\n  protected s1 = 0;\n  protected s2 = 0;\n  protected s3 = 0;\n  protected finished = false;\n  protected t: Value[];\n  private W: number;\n  private windowSize: number;\n  // We select bits per window adaptively based on expectedLength\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key, 16);\n    const kView = createView(key);\n    let k0 = kView.getUint32(0, false);\n    let k1 = kView.getUint32(4, false);\n    let k2 = kView.getUint32(8, false);\n    let k3 = kView.getUint32(12, false);\n    // generate table of doubled keys (half of montgomery ladder)\n    const doubles: Value[] = [];\n    for (let i = 0; i < 128; i++) {\n      doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n      ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n    }\n    const W = estimateWindow(expectedLength || 1024);\n    if (![1, 2, 4, 8].includes(W))\n      throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n    this.W = W;\n    const bits = 128; // always 128 bits;\n    const windows = bits / W;\n    const windowSize = (this.windowSize = 2 ** W);\n    const items: Value[] = [];\n    // Create precompute table for window of W bits\n    for (let w = 0; w < windows; w++) {\n      // truth table: 00, 01, 10, 11\n      for (let byte = 0; byte < windowSize; byte++) {\n        // prettier-ignore\n        let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n        for (let j = 0; j < W; j++) {\n          const bit = (byte >>> (W - j - 1)) & 1;\n          if (!bit) continue;\n          const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n          (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n        }\n        items.push({ s0, s1, s2, s3 });\n      }\n    }\n    this.t = items;\n  }\n  protected _updateBlock(s0: number, s1: number, s2: number, s3: number) {\n    (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n    const { W, t, windowSize } = this;\n    // prettier-ignore\n    let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n    const mask = (1 << W) - 1; // 2**W will kill performance.\n    let w = 0;\n    for (const num of [s0, s1, s2, s3]) {\n      for (let bytePos = 0; bytePos < 4; bytePos++) {\n        const byte = (num >>> (8 * bytePos)) & 0xff;\n        for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n          const bit = (byte >>> (W * bitPos)) & mask;\n          const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n          (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n          w += 1;\n        }\n      }\n    }\n    this.s0 = o0;\n    this.s1 = o1;\n    this.s2 = o2;\n    this.s3 = o3;\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    const left = data.length % BLOCK_SIZE;\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  destroy() {\n    const { t } = this;\n    // clean precompute table\n    for (const elm of t) {\n      (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n    }\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out;\n  }\n  digest(): Uint8Array {\n    const res = new Uint8Array(BLOCK_SIZE);\n    this.digestInto(res);\n    this.destroy();\n    return res;\n  }\n}\n\nclass Polyval extends GHASH {\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    const ghKey = _toGHASHKey(key.slice());\n    super(ghKey, expectedLength);\n    ghKey.fill(0);\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const left = data.length % BLOCK_SIZE;\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(\n        swapLE(b32[i * 4 + 3]),\n        swapLE(b32[i * 4 + 2]),\n        swapLE(b32[i * 4 + 1]),\n        swapLE(b32[i * 4 + 0])\n      );\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(\n        swapLE(ZEROS32[3]),\n        swapLE(ZEROS32[2]),\n        swapLE(ZEROS32[1]),\n        swapLE(ZEROS32[0])\n      );\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // tmp ugly hack\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out.reverse();\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nfunction wrapConstructorWithKey<H extends Hash<H>>(\n  hashCons: (key: Input, expectedLength?: number) => Hash<H>\n) {\n  const hashC = (msg: Input, key: Input): Uint8Array =>\n    hashCons(key, msg.length).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(16), 0);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input, expectedLength?: number) => hashCons(key, expectedLength);\n  return hashC;\n}\n\nexport const ghash = wrapConstructorWithKey(\n  (key, expectedLength) => new GHASH(key, expectedLength)\n);\nexport const polyval = wrapConstructorWithKey(\n  (key, expectedLength) => new Polyval(key, expectedLength)\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.xchacha20poly1305 = exports.chacha20poly1305 = exports._poly1305_aead = exports.chacha12 = exports.chacha8 = exports.xchacha20 = exports.chacha20 = exports.chacha20orig = exports.hchacha = void 0;\n// prettier-ignore\nconst utils_js_1 = require(\"./utils.js\");\nconst _poly1305_js_1 = require(\"./_poly1305.js\");\nconst _arx_js_1 = require(\"./_arx.js\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nfunction hchacha(s, k, i, o32) {\n    let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n    for (let r = 0; r < 20; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = (0, _arx_js_1.rotl)(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = (0, _arx_js_1.rotl)(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = (0, _arx_js_1.rotl)(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = (0, _arx_js_1.rotl)(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = (0, _arx_js_1.rotl)(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = (0, _arx_js_1.rotl)(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = (0, _arx_js_1.rotl)(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = (0, _arx_js_1.rotl)(x04 ^ x09, 7);\n    }\n    let oi = 0;\n    o32[oi++] = x00;\n    o32[oi++] = x01;\n    o32[oi++] = x02;\n    o32[oi++] = x03;\n    o32[oi++] = x12;\n    o32[oi++] = x13;\n    o32[oi++] = x14;\n    o32[oi++] = x15;\n}\nexports.hchacha = hchacha;\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexports.chacha20orig = (0, _arx_js_1.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexports.chacha20 = (0, _arx_js_1.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexports.xchacha20 = (0, _arx_js_1.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    extendNonceFn: hchacha,\n    allowShortKeys: false,\n});\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexports.chacha8 = (0, _arx_js_1.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 8,\n});\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexports.chacha12 = (0, _arx_js_1.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 12,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const left = msg.length % 16;\n    if (left)\n        h.update(ZEROS16.subarray(left));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, data, AAD) {\n    const authKey = fn(key, nonce, ZEROS32);\n    const h = _poly1305_js_1.poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, data);\n    const num = new Uint8Array(16);\n    const view = (0, utils_js_1.createView)(num);\n    (0, utils_js_1.setBigUint64)(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    (0, utils_js_1.setBigUint64)(view, 8, BigInt(data.length), true);\n    h.update(num);\n    const res = h.digest();\n    authKey.fill(0);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nconst _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    (0, _assert_js_1.bytes)(key, 32);\n    (0, _assert_js_1.bytes)(nonce);\n    return {\n        encrypt: (plaintext, output) => {\n            const plength = plaintext.length;\n            const clength = plength + tagLength;\n            if (output) {\n                (0, _assert_js_1.bytes)(output, clength);\n            }\n            else {\n                output = new Uint8Array(clength);\n            }\n            xorStream(key, nonce, plaintext, output, 1);\n            const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n            output.set(tag, plength); // append tag\n            return output;\n        },\n        decrypt: (ciphertext, output) => {\n            const clength = ciphertext.length;\n            const plength = clength - tagLength;\n            if (clength < tagLength)\n                throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n            if (output) {\n                (0, _assert_js_1.bytes)(output, plength);\n            }\n            else {\n                output = new Uint8Array(plength);\n            }\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!(0, utils_js_1.equalBytes)(passedTag, tag))\n                throw new Error('invalid tag');\n            xorStream(key, nonce, data, output, 1);\n            return output;\n        },\n    };\n};\nexports._poly1305_aead = _poly1305_aead;\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexports.chacha20poly1305 = (0, utils_js_1.wrapCipher)({ blockSize: 64, nonceLength: 12, tagLength: 16 }, (0, exports._poly1305_aead)(exports.chacha20));\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexports.xchacha20poly1305 = (0, utils_js_1.wrapCipher)({ blockSize: 64, nonceLength: 24, tagLength: 16 }, (0, exports._poly1305_aead)(exports.xchacha20));\n//# sourceMappingURL=chacha.js.map","// prettier-ignore\nimport {\n  wrapCipher, CipherWithOutput, XorStream, createView, equalBytes, setBigUint64,\n} from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { createCipher, rotl } from './_arx.js';\nimport { bytes as abytes } from './_assert.js';\n\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(\n  s: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20\n): void {\n  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n      y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n      y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n      y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  for (let r = 0; r < rounds; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, o32: Uint32Array\n) {\n  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3],\n      x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3],\n      x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7],\n      x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n  for (let r = 0; r < 20; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  let oi = 0;\n  o32[oi++] = x00; o32[oi++] = x01;\n  o32[oi++] = x02; o32[oi++] = x03;\n  o32[oi++] = x12; o32[oi++] = x13;\n  o32[oi++] = x14; o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  allowShortKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  extendNonceFn: hchacha,\n  allowShortKeys: false,\n});\n\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 8,\n});\n\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 12,\n});\n\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const left = msg.length % 16;\n  if (left) h.update(ZEROS16.subarray(left));\n};\n\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(\n  fn: XorStream,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  const authKey = fn(key, nonce, ZEROS32);\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(data.length), true);\n  h.update(num);\n  const res = h.digest();\n  authKey.fill(0);\n  return res;\n}\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (xorStream: XorStream) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): CipherWithOutput => {\n    const tagLength = 16;\n    abytes(key, 32);\n    abytes(nonce);\n    return {\n      encrypt: (plaintext: Uint8Array, output?: Uint8Array) => {\n        const plength = plaintext.length;\n        const clength = plength + tagLength;\n        if (output) {\n          abytes(output, clength);\n        } else {\n          output = new Uint8Array(clength);\n        }\n        xorStream(key, nonce, plaintext, output, 1);\n        const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n        output.set(tag, plength); // append tag\n        return output;\n      },\n      decrypt: (ciphertext: Uint8Array, output?: Uint8Array) => {\n        const clength = ciphertext.length;\n        const plength = clength - tagLength;\n        if (clength < tagLength)\n          throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n        if (output) {\n          abytes(output, plength);\n        } else {\n          output = new Uint8Array(plength);\n        }\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = computeTag(xorStream, key, nonce, data, AAD);\n        if (!equalBytes(passedTag, tag)) throw new Error('invalid tag');\n        xorStream(key, nonce, data, output, 1);\n        return output;\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 12, tagLength: 16 },\n  _poly1305_aead(chacha20)\n);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 24, tagLength: 16 },\n  _poly1305_aead(xchacha20)\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.poly1305 = exports.wrapConstructorWithKey = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a, i) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 {\n    constructor(key) {\n        this.blockLen = 16;\n        this.outputLen = 16;\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.pos = 0;\n        this.finished = false;\n        key = (0, utils_js_1.toBytes)(key);\n        (0, _assert_js_1.bytes)(key, 32);\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        this.h.fill(0);\n        this.r.fill(0);\n        this.buffer.fill(0);\n        this.pad.fill(0);\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            // buffer.subarray(pos).fill(0);\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update((0, utils_js_1.toBytes)(msg)).digest();\n    const tmp = hashCons(new Uint8Array(32));\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\nexports.wrapConstructorWithKey = wrapConstructorWithKey;\nexports.poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n//# sourceMappingURL=_poly1305.js.map","import { exists as aexists, bytes as abytes, output as aoutput } from './_assert.js';\nimport { Input, toBytes, Hash } from './utils.js';\n\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a: Uint8Array, i: number) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 implements Hash<Poly1305> {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10);\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  constructor(key: Input) {\n    key = toBytes(key);\n    abytes(key, 32);\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy() {\n    this.h.fill(0);\n    this.r.fill(0);\n    this.buffer.fill(0);\n    this.pad.fill(0);\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      // buffer.subarray(pos).fill(0);\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends Hash<H>>(hashCons: (key: Input) => Hash<H>) {\n  const hashC = (msg: Input, key: Input): Uint8Array => hashCons(key).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(32));\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input) => hashCons(key);\n  return hashC;\n}\n\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCipher = exports.rotl = exports.sigma = void 0;\n// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = (0, utils_js_1.u32)(sigma16);\nconst sigma32_32 = (0, utils_js_1.u32)(sigma32);\nexports.sigma = sigma32_32.slice();\nfunction rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\nexports.rotl = rotl;\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = (0, utils_js_1.u32)(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? (0, utils_js_1.u32)(data) : U32_EMPTY;\n    const o32 = isAligned ? (0, utils_js_1.u32)(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error('arx: invalid block position');\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\nfunction createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = (0, utils_js_1.checkOpts)({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);\n    if (typeof core !== 'function')\n        throw new Error('core must be a function');\n    (0, _assert_js_1.number)(counterLength);\n    (0, _assert_js_1.number)(rounds);\n    (0, _assert_js_1.bool)(counterRight);\n    (0, _assert_js_1.bool)(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        (0, _assert_js_1.bytes)(key);\n        (0, _assert_js_1.bytes)(nonce);\n        (0, _assert_js_1.bytes)(data);\n        const len = data.length;\n        if (!output)\n            output = new Uint8Array(len);\n        (0, _assert_js_1.bytes)(output);\n        (0, _assert_js_1.number)(counter);\n        if (counter < 0 || counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        if (output.length < len)\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        let l = key.length, k, sigma;\n        if (l === 32) {\n            k = key.slice();\n            toClean.push(k);\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce)) {\n            nonce = nonce.slice();\n            toClean.push(nonce);\n        }\n        const k32 = (0, utils_js_1.u32)(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24)\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            extendNonceFn(sigma, k32, (0, utils_js_1.u32)(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length)\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = (0, utils_js_1.u32)(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        while (toClean.length > 0)\n            toClean.pop().fill(0);\n        return output;\n    };\n}\nexports.createCipher = createCipher;\n//# sourceMappingURL=_arx.js.map","// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { number as anumber, bytes as abytes, bool as abool } from './_assert.js';\nimport { XorStream, checkOpts, u32 } from './utils.js';\n\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str: string) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport const sigma = sigma32_32.slice();\n\nexport function rotl(a: number, b: number): number {\n  return (a << b) | (a >>> (32 - b));\n}\n\nexport type CipherCoreFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  output: Uint32Array,\n  counter: number,\n  rounds?: number\n) => void;\n\nexport type ExtendNonceFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  input: Uint32Array,\n  output: Uint32Array\n) => void;\n\nexport type CipherOpts = {\n  allowShortKeys?: boolean; // Original salsa / chacha allow 16-byte keys\n  extendNonceFn?: ExtendNonceFn;\n  counterLength?: number;\n  counterRight?: boolean; // right: nonce|counter; left: counter|nonce\n  rounds?: number;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b: Uint8Array) {\n  return b.byteOffset % 4 === 0;\n}\n\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\n\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(\n  core: CipherCoreFn,\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  data: Uint8Array,\n  output: Uint8Array,\n  counter: number,\n  rounds: number\n): void {\n  const len = data.length;\n  const block = new Uint8Array(BLOCK_LEN);\n  const b32 = u32(block);\n  // Make sure that buffers aligned to 4 bytes\n  const isAligned = isAligned32(data) && isAligned32(output);\n  const d32 = isAligned ? u32(data) : U32_EMPTY;\n  const o32 = isAligned ? u32(output) : U32_EMPTY;\n  for (let pos = 0; pos < len; counter++) {\n    core(sigma, key, nonce, b32, counter, rounds);\n    if (counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    const take = Math.min(BLOCK_LEN, len - pos);\n    // aligned to 4 bytes\n    if (isAligned && take === BLOCK_LEN) {\n      const pos32 = pos / 4;\n      if (pos % 4 !== 0) throw new Error('arx: invalid block position');\n      for (let j = 0, posj: number; j < BLOCK_LEN32; j++) {\n        posj = pos32 + j;\n        o32[posj] = d32[posj] ^ b32[j];\n      }\n      pos += BLOCK_LEN;\n      continue;\n    }\n    for (let j = 0, posj; j < take; j++) {\n      posj = pos + j;\n      output[posj] = data[posj] ^ block[j];\n    }\n    pos += take;\n  }\n}\n\nexport function createCipher(core: CipherCoreFn, opts: CipherOpts): XorStream {\n  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts(\n    { allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 },\n    opts\n  );\n  if (typeof core !== 'function') throw new Error('core must be a function');\n  anumber(counterLength);\n  anumber(rounds);\n  abool(counterRight);\n  abool(allowShortKeys);\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    abytes(key);\n    abytes(nonce);\n    abytes(data);\n    const len = data.length;\n    if (!output) output = new Uint8Array(len);\n    abytes(output);\n    anumber(counter);\n    if (counter < 0 || counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    if (output.length < len)\n      throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n    const toClean = [];\n\n    // Key & sigma\n    // key=16 -> sigma16, k=key|key\n    // key=32 -> sigma32, k=key\n    let l = key.length,\n      k: Uint8Array,\n      sigma: Uint32Array;\n    if (l === 32) {\n      k = key.slice();\n      toClean.push(k);\n      sigma = sigma32_32;\n    } else if (l === 16 && allowShortKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else {\n      throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n    }\n\n    // Nonce\n    // salsa20:      8   (8-byte counter)\n    // chacha20orig: 8   (8-byte counter)\n    // chacha20:     12  (4-byte counter)\n    // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n    // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n    // Align nonce to 4 bytes\n    if (!isAligned32(nonce)) {\n      nonce = nonce.slice();\n      toClean.push(nonce);\n    }\n\n    const k32 = u32(k);\n    // hsalsa & hchacha: handle extended nonce\n    if (extendNonceFn) {\n      if (nonce.length !== 24) throw new Error(`arx: extended nonce must be 24 bytes`);\n      extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n      nonce = nonce.subarray(16);\n    }\n\n    // Handle nonce counter\n    const nonceNcLen = 16 - counterLength;\n    if (nonceNcLen !== nonce.length)\n      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n\n    // Pad counter when nonce is 64 bit\n    if (nonceNcLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      nonce = nc;\n      toClean.push(nonce);\n    }\n    const n32 = u32(nonce);\n    runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n    while (toClean.length > 0) toClean.pop()!.fill(0);\n    return output;\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hkdf = exports.expand = exports.extract = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nfunction extract(hash, ikm, salt) {\n    _assert_js_1.default.hash(hash);\n    // NOTE: some libraries treat zero-length array as 'not provided';\n    // we don't, since we have undefined as 'not provided'\n    // https://github.com/RustCrypto/KDFs/issues/15\n    if (salt === undefined)\n        salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n    return (0, hmac_js_1.hmac)(hash, (0, utils_js_1.toBytes)(salt), (0, utils_js_1.toBytes)(ikm));\n}\nexports.extract = extract;\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = new Uint8Array([0]);\nconst EMPTY_BUFFER = new Uint8Array();\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nfunction expand(hash, prk, info, length = 32) {\n    _assert_js_1.default.hash(hash);\n    _assert_js_1.default.number(length);\n    if (length > 255 * hash.outputLen)\n        throw new Error('Length should be <= 255*HashLen');\n    const blocks = Math.ceil(length / hash.outputLen);\n    if (info === undefined)\n        info = EMPTY_BUFFER;\n    // first L(ength) octets of T\n    const okm = new Uint8Array(blocks * hash.outputLen);\n    // Re-use HMAC instance between blocks\n    const HMAC = hmac_js_1.hmac.create(hash, prk);\n    const HMACTmp = HMAC._cloneInto();\n    const T = new Uint8Array(HMAC.outputLen);\n    for (let counter = 0; counter < blocks; counter++) {\n        HKDF_COUNTER[0] = counter + 1;\n        // T(0) = empty string (zero length)\n        // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n        HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n            .update(info)\n            .update(HKDF_COUNTER)\n            .digestInto(T);\n        okm.set(T, hash.outputLen * counter);\n        HMAC._cloneInto(HMACTmp);\n    }\n    HMAC.destroy();\n    HMACTmp.destroy();\n    T.fill(0);\n    HKDF_COUNTER.fill(0);\n    return okm.slice(0, length);\n}\nexports.expand = expand;\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nconst hkdf = (hash, ikm, salt, info, length) => expand(hash, extract(hash, ikm, salt), info, length);\nexports.hkdf = hkdf;\n//# sourceMappingURL=hkdf.js.map","import assert from './_assert.js';\nimport { CHash, Input, toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash: CHash, ikm: Input, salt?: Input) {\n  assert.hash(hash);\n  // NOTE: some libraries treat zero-length array as 'not provided';\n  // we don't, since we have undefined as 'not provided'\n  // https://github.com/RustCrypto/KDFs/issues/15\n  if (salt === undefined) salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n  return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = new Uint8Array([0]);\nconst EMPTY_BUFFER = new Uint8Array();\n\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash: CHash, prk: Input, info?: Input, length: number = 32) {\n  assert.hash(hash);\n  assert.number(length);\n  if (length > 255 * hash.outputLen) throw new Error('Length should be <= 255*HashLen');\n  const blocks = Math.ceil(length / hash.outputLen);\n  if (info === undefined) info = EMPTY_BUFFER;\n  // first L(ength) octets of T\n  const okm = new Uint8Array(blocks * hash.outputLen);\n  // Re-use HMAC instance between blocks\n  const HMAC = hmac.create(hash, prk);\n  const HMACTmp = HMAC._cloneInto();\n  const T = new Uint8Array(HMAC.outputLen);\n  for (let counter = 0; counter < blocks; counter++) {\n    HKDF_COUNTER[0] = counter + 1;\n    // T(0) = empty string (zero length)\n    // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n    HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n      .update(info)\n      .update(HKDF_COUNTER)\n      .digestInto(T);\n    okm.set(T, hash.outputLen * counter);\n    HMAC._cloneInto(HMACTmp);\n  }\n  HMAC.destroy();\n  HMACTmp.destroy();\n  T.fill(0);\n  HKDF_COUNTER.fill(0);\n  return okm.slice(0, length);\n}\n\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (\n  hash: CHash,\n  ikm: Input,\n  salt: Input | undefined,\n  info: Input | undefined,\n  length: number\n) => expand(hash, extract(hash, ikm, salt), info, length);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","var e,t,r=(e=function(e,t){function r(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function n(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce((e,r)=>e?t(e,r.encode):r.encode,void 0),decode:e.reduce((e,r)=>e?t(e,r.decode):r.decode,void 0)}}function o(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&\"number\"!=typeof t[0])throw new Error(\"alphabet.encode input should be an array of numbers\");return t.map(t=>{if(r(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]})},decode:t=>{if(!Array.isArray(t)||t.length&&\"string\"!=typeof t[0])throw new Error(\"alphabet.decode input should be array of strings\");return t.map(t=>{if(\"string\"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: \"${t}\". Allowed: ${e}`);return r})}}}function i(e=\"\"){if(\"string\"!=typeof e)throw new Error(\"join separator should be string\");return{encode:t=>{if(!Array.isArray(t)||t.length&&\"string\"!=typeof t[0])throw new Error(\"join.encode input should be array of strings\");for(let e of t)if(\"string\"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if(\"string\"!=typeof t)throw new Error(\"join.decode input should be string\");return t.split(e)}}}function s(e,t=\"=\"){if(r(e),\"string\"!=typeof t)throw new Error(\"padding chr should be string\");return{encode(r){if(!Array.isArray(r)||r.length&&\"string\"!=typeof r[0])throw new Error(\"padding.encode input should be array of strings\");for(let e of r)if(\"string\"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&\"string\"!=typeof r[0])throw new Error(\"padding.encode input should be array of strings\");for(let e of r)if(\"string\"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error(\"Invalid padding: string should have whole number of bytes\");for(;n>0&&r[n-1]===t;n--)if(!((n-1)*e%8))throw new Error(\"Invalid padding: string has too much padding\");return r.slice(0,n)}}}function a(e){if(\"function\"!=typeof e)throw new Error(\"normalize fn should be function\");return{encode:e=>e,decode:t=>e(t)}}function c(e,t,n){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error(\"convertRadix: data should be array\");if(!e.length)return[];let o=0;const i=[],s=Array.from(e);for(s.forEach(e=>{if(r(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)});;){let e=0,r=!0;for(let i=o;i<s.length;i++){const a=s[i],c=t*e+a;if(!Number.isSafeInteger(c)||t*e/t!==e||c-a!=t*e)throw new Error(\"convertRadix: carry overflow\");if(e=c%n,s[i]=Math.floor(c/n),!Number.isSafeInteger(s[i])||s[i]*n+e!==c)throw new Error(\"convertRadix: carry overflow\");r&&(s[i]?r=!1:o=i)}if(i.push(e),r)break}for(let t=0;t<e.length-1&&0===e[t];t++)i.push(0);return i.reverse()}Object.defineProperty(t,\"__esModule\",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=t.assertNumber=void 0,t.assertNumber=r;const u=(e,t)=>t?u(t,e%t):e,h=(e,t)=>e+(t-u(e,t));function l(e,t,n,o){if(!Array.isArray(e))throw new Error(\"convertRadix2: data should be array\");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(h(t,n)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${n} carryBits=${h(t,n)}`);let i=0,s=0;const a=2**n-1,c=[];for(const o of e){if(r(o),o>=2**t)throw new Error(`convertRadix2: invalid data word=${o} from=${t}`);if(i=i<<t|o,s+t>32)throw new Error(`convertRadix2: carry overflow pos=${s} from=${t}`);for(s+=t;s>=n;s-=n)c.push((i>>s-n&a)>>>0);i&=2**s-1}if(i=i<<n-s&a,!o&&s>=t)throw new Error(\"Excess padding\");if(!o&&i)throw new Error(`Non-zero padding: ${i}`);return o&&s>0&&c.push(i>>>0),c}function f(e){return r(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error(\"radix.encode input should be Uint8Array\");return c(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&\"number\"!=typeof t[0])throw new Error(\"radix.decode input should be array of strings\");return Uint8Array.from(c(t,e,256))}}}function d(e,t=!1){if(r(e),e<=0||e>32)throw new Error(\"radix2: bits should be in (0..32]\");if(h(8,e)>32||h(e,8)>32)throw new Error(\"radix2: carry overflow\");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error(\"radix2.encode input should be Uint8Array\");return l(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&\"number\"!=typeof r[0])throw new Error(\"radix2.decode input should be array of strings\");return Uint8Array.from(l(r,e,8,t))}}}function p(e){if(\"function\"!=typeof e)throw new Error(\"unsafeWrapper fn should be function\");return function(...t){try{return e.apply(null,t)}catch(e){}}}function m(e,t){if(r(e),\"function\"!=typeof t)throw new Error(\"checksum fn should be function\");return{encode(r){if(!(r instanceof Uint8Array))throw new Error(\"checksum.encode: input should be Uint8Array\");const n=t(r).slice(0,e),o=new Uint8Array(r.length+e);return o.set(r),o.set(n,r.length),o},decode(r){if(!(r instanceof Uint8Array))throw new Error(\"checksum.decode: input should be Uint8Array\");const n=r.slice(0,-e),o=t(n).slice(0,e),i=r.slice(-e);for(let t=0;t<e;t++)if(o[t]!==i[t])throw new Error(\"Invalid checksum\");return n}}}t.utils={alphabet:o,chain:n,checksum:m,radix:f,radix2:d,join:i,padding:s},t.base16=n(d(4),o(\"0123456789ABCDEF\"),i(\"\")),t.base32=n(d(5),o(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),s(5),i(\"\")),t.base32hex=n(d(5),o(\"0123456789ABCDEFGHIJKLMNOPQRSTUV\"),s(5),i(\"\")),t.base32crockford=n(d(5),o(\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\"),i(\"\"),a(e=>e.toUpperCase().replace(/O/g,\"0\").replace(/[IL]/g,\"1\"))),t.base64=n(d(6),o(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"),s(6),i(\"\")),t.base64url=n(d(6),o(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"),s(6),i(\"\"));const y=e=>n(f(58),o(e),i(\"\"));t.base58=y(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"),t.base58flickr=y(\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"),t.base58xrp=y(\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\");const w=[0,2,3,5,6,7,9,10,11];t.base58xmr={encode(e){let r=\"\";for(let n=0;n<e.length;n+=8){const o=e.subarray(n,n+8);r+=t.base58.encode(o).padStart(w[o.length],\"1\")}return r},decode(e){let r=[];for(let n=0;n<e.length;n+=11){const o=e.slice(n,n+11),i=w.indexOf(o.length),s=t.base58.decode(o);for(let e=0;e<s.length-i;e++)if(0!==s[e])throw new Error(\"base58xmr: wrong padding\");r=r.concat(Array.from(s.slice(s.length-i)))}return Uint8Array.from(r)}},t.base58check=e=>n(m(4,t=>e(e(t))),t.base58);const g=n(o(\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\"),i(\"\")),v=[996825010,642813549,513874426,1027748829,705979059];function b(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<v.length;e++)1==(t>>e&1)&&(r^=v[e]);return r}function E(e,t,r=1){const n=e.length;let o=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);o=b(o)^r>>5}o=b(o);for(let t=0;t<n;t++)o=b(o)^31&e.charCodeAt(t);for(let e of t)o=b(o)^e;for(let e=0;e<6;e++)o=b(o);return o^=r,g.encode(l([o%2**30],30,5,!1))}function x(e){const t=\"bech32\"===e?1:734539939,r=d(5),n=r.decode,o=r.encode,i=p(n);function s(e,r=90){if(\"string\"!=typeof e)throw new Error(\"bech32.decode input should be string, not \"+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error(\"String must be lowercase or uppercase\");const o=(e=n).lastIndexOf(\"1\");if(0===o||-1===o)throw new Error('Letter \"1\" must be present between prefix and data only');const i=e.slice(0,o),s=e.slice(o+1);if(s.length<6)throw new Error(\"Data must be at least 6 characters long\");const a=g.decode(s).slice(0,-6),c=E(i,a,t);if(!s.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected \"${c}\"`);return{prefix:i,words:a}}return{encode:function(e,r,n=90){if(\"string\"!=typeof e)throw new Error(\"bech32.encode prefix should be string, not \"+typeof e);if(!Array.isArray(r)||r.length&&\"number\"!=typeof r[0])throw new Error(\"bech32.encode words should be array of numbers, not \"+typeof r);const o=e.length+7+r.length;if(!1!==n&&o>n)throw new TypeError(`Length ${o} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${g.encode(r)}${E(e,r,t)}`},decode:s,decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:p(s),fromWords:n,fromWordsUnsafe:i,toWords:o}}t.bech32=x(\"bech32\"),t.bech32m=x(\"bech32m\"),t.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.hex=n(d(4),o(\"0123456789abcdef\"),i(\"\"),a(e=>{if(\"string\"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}));const P={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},A=`Invalid encoding type. Available types: ${Object.keys(P).join(\", \")}`;t.bytesToString=(e,t)=>{if(\"string\"!=typeof e||!P.hasOwnProperty(e))throw new TypeError(A);if(!(t instanceof Uint8Array))throw new TypeError(\"bytesToString() expects Uint8Array\");return P[e].encode(t)},t.str=t.bytesToString,t.stringToBytes=(e,t)=>{if(!P.hasOwnProperty(e))throw new TypeError(A);if(\"string\"!=typeof t)throw new TypeError(\"stringToBytes() expects string\");return P[e].decode(t)},t.bytes=t.stringToBytes},e(t={exports:{}},t.exports),t.exports);const{bech32:n,hex:o,utf8:i}=r,s={bech32:\"bc\",pubKeyHash:0,scriptHash:5,validWitnessVersions:[0]},a={bech32:\"tb\",pubKeyHash:111,scriptHash:196,validWitnessVersions:[0]},c={bech32:\"tbs\",pubKeyHash:111,scriptHash:196,validWitnessVersions:[0]},u={bech32:\"bcrt\",pubKeyHash:111,scriptHash:196,validWitnessVersions:[0]},h={bech32:\"sb\",pubKeyHash:63,scriptHash:123,validWitnessVersions:[0]},l=[\"option_data_loss_protect\",\"initial_routing_sync\",\"option_upfront_shutdown_script\",\"gossip_queries\",\"var_onion_optin\",\"gossip_queries_ex\",\"option_static_remotekey\",\"payment_secret\",\"basic_mpp\",\"option_support_large_channel\"],f={m:BigInt(1e3),u:BigInt(1e6),n:BigInt(1e9),p:BigInt(1e12)},d=BigInt(\"2100000000000000000\"),p=BigInt(1e11),m={payment_hash:1,payment_secret:16,description:13,payee:19,description_hash:23,expiry:6,min_final_cltv_expiry:24,fallback_address:9,route_hint:3,feature_bits:5,metadata:27},y={};for(let e=0,t=Object.keys(m);e<t.length;e++){const r=t[e],n=m[t[e]].toString();y[n]=r}const w={1:e=>o.encode(n.fromWordsUnsafe(e)),16:e=>o.encode(n.fromWordsUnsafe(e)),13:e=>i.encode(n.fromWordsUnsafe(e)),19:e=>o.encode(n.fromWordsUnsafe(e)),23:e=>o.encode(n.fromWordsUnsafe(e)),27:e=>o.encode(n.fromWordsUnsafe(e)),6:v,24:v,3:function(e){const t=[];let r,i,s,a,c,u=n.fromWordsUnsafe(e);for(;u.length>0;)r=o.encode(u.slice(0,33)),i=o.encode(u.slice(33,41)),s=parseInt(o.encode(u.slice(41,45)),16),a=parseInt(o.encode(u.slice(45,49)),16),c=parseInt(o.encode(u.slice(49,51)),16),u=u.slice(51),t.push({pubkey:r,short_channel_id:i,fee_base_msat:s,fee_proportional_millionths:a,cltv_expiry_delta:c});return t},5:function(e){const t=e.slice().reverse().map(e=>[!!(1&e),!!(2&e),!!(4&e),!!(8&e),!!(16&e)]).reduce((e,t)=>e.concat(t),[]);for(;t.length<2*l.length;)t.push(!1);const r={};l.forEach((e,n)=>{let o;o=t[2*n]?\"required\":t[2*n+1]?\"supported\":\"unsupported\",r[e]=o});const n=t.slice(2*l.length);return r.extra_bits={start_bit:2*l.length,bits:n,has_required:n.reduce((e,t,r)=>r%2!=0?e||!1:e||t,!1)},r}};function g(e){return t=>({tagCode:parseInt(e),words:n.encode(\"unknown\",t,Number.MAX_SAFE_INTEGER)})}function v(e){return e.reverse().reduce((e,t,r)=>e+t*Math.pow(32,r),0)}var b=function(e){return Uint8Array.from(e.match(/.{1,2}/g).map(function(e){return parseInt(e,16)}))},E=function(e){if(!e)return null;try{var t=function(e,t){if(\"string\"!=typeof e)throw new Error(\"Lightning Payment Request must be string\");if(\"ln\"!==e.slice(0,2).toLowerCase())throw new Error(\"Not a proper lightning payment request\");const r=[],i=n.decode(e,Number.MAX_SAFE_INTEGER);e=e.toLowerCase();const l=i.prefix;let b=i.words,E=e.slice(l.length+1),x=b.slice(-104);b=b.slice(0,-104);let P=l.match(/^ln(\\S+?)(\\d*)([a-zA-Z]?)$/);if(P&&!P[2]&&(P=l.match(/^ln(\\S+)$/)),!P)throw new Error(\"Not a proper lightning payment request\");r.push({name:\"lightning_network\",letters:\"ln\"});const A=P[1];let k;switch(A){case s.bech32:k=s;break;case a.bech32:k=a;break;case c.bech32:k=c;break;case u.bech32:k=u;break;case h.bech32:k=h}if(!k||k.bech32!==A)throw new Error(\"Unknown coin bech32 prefix\");r.push({name:\"coin_network\",letters:A,value:k});const _=P[2];let U;_?(U=function(e,t){let r,n;if(e.slice(-1).match(/^[munp]$/))r=e.slice(-1),n=e.slice(0,-1);else{if(e.slice(-1).match(/^[^munp0-9]$/))throw new Error(\"Not a valid multiplier for the amount\");n=e}if(!n.match(/^\\d+$/))throw new Error(\"Not a valid human readable amount\");const o=BigInt(n),i=r?o*p/f[r]:o*p;if(\"p\"===r&&o%BigInt(10)!==BigInt(0)||i>d)throw new Error(\"Amount is outside of valid range\");return i.toString()}(_+P[3]),r.push({name:\"amount\",letters:P[2]+P[3],value:U})):U=null,r.push({name:\"separator\",letters:\"1\"});const L=v(b.slice(0,7));let D,N,I,j;for(b=b.slice(7),r.push({name:\"timestamp\",letters:E.slice(0,7),value:L}),E=E.slice(7);b.length>0;){const e=b[0].toString();D=y[e]||\"unknown_tag\",N=w[e]||g(e),b=b.slice(1),I=v(b.slice(0,2)),b=b.slice(2),j=b.slice(0,I),b=b.slice(I),r.push({name:D,tag:E[0],letters:E.slice(0,3+I),value:N(j)}),E=E.slice(3+I)}r.push({name:\"signature\",letters:E.slice(0,104),value:o.encode(n.fromWordsUnsafe(x))}),E=E.slice(104),r.push({name:\"checksum\",letters:E});let S={paymentRequest:e,sections:r,get expiry(){let e=r.find(e=>\"expiry\"===e.name);if(e)return R(\"timestamp\")+e.value},get route_hints(){return r.filter(e=>\"route_hint\"===e.name).map(e=>e.value)}};for(let e in m)\"route_hint\"!==e&&Object.defineProperty(S,e,{get:()=>R(e)});return S;function R(e){let t=r.find(t=>t.name===e);return t?t.value:void 0}}(e);if(!t||!t.sections)return null;var r=t.sections.find(function(e){return\"payment_hash\"===e.name});if(\"payment_hash\"!==(null==r?void 0:r.name)||!r.value)return null;var i=r.value,l=0,b=t.sections.find(function(e){return\"amount\"===e.name});\"amount\"===(null==b?void 0:b.name)&&b.value&&(l=parseInt(b.value)/1e3);var E=t.sections.find(function(e){return\"timestamp\"===e.name});if(\"timestamp\"!==(null==E?void 0:E.name)||!E.value)return null;var x,P=E.value,A=t.sections.find(function(e){return\"expiry\"===e.name});\"expiry\"===(null==A?void 0:A.name)&&(x=A.value);var k=t.sections.find(function(e){return\"description\"===e.name});return{paymentHash:i,satoshi:l,timestamp:P,expiry:x,description:\"description\"===(null==k?void 0:k.name)?null==k?void 0:k.value:void 0}}catch(e){return null}};function x(e,t=!0){if(e.destroyed)throw new Error(\"Hash instance has been destroyed\");if(t&&e.finished)throw new Error(\"Hash#digest() has already been called\")}const P=e=>e instanceof Uint8Array,A=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),k=(e,t)=>e<<32-t|e>>>t;if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error(\"Non little-endian hardware is not supported\");const _=/* @__PURE__ */Array.from({length:256},(e,t)=>t.toString(16).padStart(2,\"0\"));function U(e){if(!P(e))throw new Error(\"Uint8Array expected\");let t=\"\";for(let r=0;r<e.length;r++)t+=_[e[r]];return t}function L(e){if(\"string\"==typeof e&&(e=function(e){if(\"string\"!=typeof e)throw new Error(\"utf8ToBytes expected string, got \"+typeof e);return new Uint8Array((new TextEncoder).encode(e))}(e)),!P(e))throw new Error(\"expected Uint8Array, got \"+typeof e);return e}class D{clone(){return this._cloneInto()}}function N(e){const t=t=>e().update(L(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}class I extends D{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=A(this.buffer)}update(e){x(this);const{view:t,buffer:r,blockLen:n}=this,o=(e=L(e)).length;for(let i=0;i<o;){const s=Math.min(n-this.pos,o-i);if(s!==n)r.set(e.subarray(i,i+s),this.pos),this.pos+=s,i+=s,this.pos===n&&(this.process(t,0),this.pos=0);else{const t=A(e);for(;n<=o-i;i+=n)this.process(t,i)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){x(this),function(e,t){!function(e,...t){if(!(e instanceof Uint8Array))throw new Error(\"Expected Uint8Array\");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:n,isLE:o}=this;let{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>n-i&&(this.process(r,0),i=0);for(let e=i;e<n;e++)t[e]=0;!function(e,t,r,n){if(\"function\"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const o=BigInt(32),i=BigInt(4294967295),s=Number(r>>o&i),a=Number(r&i),c=n?0:4;e.setUint32(t+(n?4:0),s,n),e.setUint32(t+c,a,n)}(r,n-8,BigInt(8*this.length),o),this.process(r,0);const s=A(e),a=this.outputLen;if(a%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const c=a/4,u=this.get();if(c>u.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let e=0;e<c;e++)s.setUint32(4*e,u[e],o)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:o,destroyed:i,pos:s}=this;return e.length=n,e.pos=s,e.finished=o,e.destroyed=i,n%t&&e.buffer.set(r),e}}const j=(e,t,r)=>e&t^e&r^t&r,S=/* @__PURE__ */new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),R=/* @__PURE__ */new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),$=/* @__PURE__ */new Uint32Array(64);class T extends I{constructor(){super(64,32,8,!1),this.A=0|R[0],this.B=0|R[1],this.C=0|R[2],this.D=0|R[3],this.E=0|R[4],this.F=0|R[5],this.G=0|R[6],this.H=0|R[7]}get(){const{A:e,B:t,C:r,D:n,E:o,F:i,G:s,H:a}=this;return[e,t,r,n,o,i,s,a]}set(e,t,r,n,o,i,s,a){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|o,this.F=0|i,this.G=0|s,this.H=0|a}process(e,t){for(let r=0;r<16;r++,t+=4)$[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=$[e-15],r=$[e-2],n=k(t,7)^k(t,18)^t>>>3,o=k(r,17)^k(r,19)^r>>>10;$[e]=o+$[e-7]+n+$[e-16]|0}let{A:r,B:n,C:o,D:i,E:s,F:a,G:c,H:u}=this;for(let e=0;e<64;e++){const t=u+(k(s,6)^k(s,11)^k(s,25))+((h=s)&a^~h&c)+S[e]+$[e]|0,l=(k(r,2)^k(r,13)^k(r,22))+j(r,n,o)|0;u=c,c=a,a=s,s=i+t|0,i=o,o=n,n=r,r=t+l|0}var h;r=r+this.A|0,n=n+this.B|0,o=o+this.C|0,i=i+this.D|0,s=s+this.E|0,a=a+this.F|0,c=c+this.G|0,u=u+this.H|0,this.set(r,n,o,i,s,a,c,u)}roundClean(){$.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const W=/* @__PURE__ */N(()=>new T);var B=/*#__PURE__*/function(){function e(e){var t,r,n,o;if(this.paymentRequest=void 0,this.paymentHash=void 0,this.preimage=void 0,this.verify=void 0,this.satoshi=void 0,this.expiry=void 0,this.timestamp=void 0,this.createdDate=void 0,this.expiryDate=void 0,this.description=void 0,this.successAction=void 0,this.paymentRequest=e.pr,!this.paymentRequest)throw new Error(\"Invalid payment request\");var i=E(this.paymentRequest);if(!i)throw new Error(\"Failed to decode payment request\");this.paymentHash=i.paymentHash,this.satoshi=i.satoshi,this.timestamp=i.timestamp,this.expiry=i.expiry,this.createdDate=new Date(1e3*this.timestamp),this.expiryDate=this.expiry?new Date(1e3*(this.timestamp+this.expiry)):void 0,this.description=null!=(t=i.description)?t:null,this.verify=null!=(r=e.verify)?r:null,this.preimage=null!=(n=e.preimage)?n:null,this.successAction=null!=(o=e.successAction)?o:null}var t=e.prototype;return t.isPaid=function(){try{var e=this;if(e.preimage)return Promise.resolve(e.validatePreimage(e.preimage));if(e.verify)return Promise.resolve(e.verifyPayment());throw new Error(\"Could not verify payment\")}catch(e){return Promise.reject(e)}},t.validatePreimage=function(e){if(!e||!this.paymentHash)return!1;try{var t=U(W(b(e)));return this.paymentHash===t}catch(e){return!1}},t.verifyPayment=function(){try{var e=this;return Promise.resolve(function(t,r){try{var n=function(){if(!e.verify)throw new Error(\"LNURL verify not available\");return Promise.resolve(fetch(e.verify)).then(function(t){if(!t.ok)throw new Error(\"Verification request failed: \"+t.status+\" \"+t.statusText);return Promise.resolve(t.json()).then(function(t){return t.preimage&&(e.preimage=t.preimage),t.settled})})}()}catch(e){return r(e)}return n&&n.then?n.then(void 0,r):n}(0,function(e){return console.error(\"Failed to check LNURL-verify\",e),!1}))}catch(e){return Promise.reject(e)}},t.hasExpired=function(){var e=this.expiryDate;return!!e&&e.getTime()<Date.now()},e}(),H=function(e,t){var r=e.satoshi,n=e.comment,o=e.p,i=e.e,s=e.relays;void 0===t&&(t={});try{var a=t.nostr||globalThis.nostr;if(!a)throw new Error(\"nostr option or window.nostr is not available\");var c=[[\"relays\"].concat(s),[\"amount\",r.toString()]];return o&&c.push([\"p\",o]),i&&c.push([\"e\",i]),Promise.resolve(a.getPublicKey()).then(function(e){var t={pubkey:e,created_at:Math.floor(Date.now()/1e3),kind:9734,tags:c,content:null!=n?n:\"\"};return t.id=F(t),Promise.resolve(a.signEvent(t))})}catch(i){return Promise.reject(i)}},O=function(e){if(\"keysend\"!==e.tag)throw new Error(\"Invalid keysend params\");if(\"OK\"!==e.status)throw new Error(\"Keysend status not OK\");if(!e.pubkey)throw new Error(\"Pubkey does not exist\");var t,r;return e.customData&&e.customData[0]&&(t=e.customData[0].customKey,r=e.customData[0].customValue),{destination:e.pubkey,customKey:t,customValue:r}};function C(e){if(\"string\"!=typeof e.content)return!1;if(\"number\"!=typeof e.created_at)return!1;if(!Array.isArray(e.tags))return!1;for(var t=0;t<e.tags.length;t++){var r=e.tags[t];if(!Array.isArray(r))return!1;for(var n=0;n<r.length;n++)if(\"object\"==typeof r[n])return!1}return!0}function K(e){if(!C(e))throw new Error(\"can't serialize event with wrong or missing properties\");return JSON.stringify([0,e.pubkey,e.created_at,e.kind,e.tags,e.content])}function F(e){return U(W(K(e)))}function V(e,t){var r,n,o,i;return t&&e&&(n=(r=null==(o=e.names)?void 0:o[t])?null==(i=e.relays)?void 0:i[r]:void 0),[e,r,n]}var q=/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[\\w]*))?)/,z=function(e){return!!e&&q.test(e)},M=function(e){var t=e.amount;return t>0&&t>=e.min&&t<=e.max},G=function(e){try{if(\"payRequest\"!==e.tag)throw new Error(\"Invalid pay service params\");var t=(e.callback+\"\").trim();if(!z(t))throw new Error(\"Callback must be a valid url\");var r,n,o=Math.ceil(Number(e.minSendable||0)),i=Math.floor(Number(e.maxSendable));if(!o||!i||o>i)throw new Error(\"Invalid pay service params\");try{r=JSON.parse(e.metadata+\"\"),n=U(W(e.metadata+\"\"))}catch(e){r=[],n=U(W(\"[]\"))}for(var s=\"\",a=\"\",c=\"\",u=\"\",h=0;h<r.length;h++){var l=r[h],f=l[0],d=l[1];switch(f){case\"text/plain\":c=d;break;case\"text/identifier\":u=d;break;case\"text/email\":s=d;break;case\"image/png;base64\":case\"image/jpeg;base64\":a=\"data:\"+f+\",\"+d}}var p,m=e.payerData;try{p=new URL(t).hostname}catch(e){}return Promise.resolve({callback:t,fixed:o===i,min:o,max:i,domain:p,metadata:r,metadataHash:n,identifier:u,email:s,description:c,image:a,payerData:m,commentAllowed:Number(e.commentAllowed)||0,rawData:e,allowsNostr:e.allowsNostr||!1})}catch(e){return Promise.reject(e)}};function J(){return J=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},J.apply(this,arguments)}var Z=function(e,t){try{var r=e.boost;t||(t={});var n=t.webln||globalThis.webln;if(!n)throw new Error(\"WebLN not available\");if(!n.keysend)throw new Error(\"Keysend not available in current WebLN provider\");var o=e.amount||Math.floor(r.value_msat/1e3),i={destination:e.destination,amount:o,customRecords:{7629169:JSON.stringify(r)}};return e.customKey&&e.customValue&&(i.customRecords[e.customKey]=e.customValue),Promise.resolve(n.enable()).then(function(){return Promise.resolve(n.keysend(i))})}catch(e){return Promise.reject(e)}},X=/^((?:[^<>()[\\]\\\\.,;:\\s@\"]+(?:\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(?:\".+\"))@((?:\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(?:(?:[a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,Q=\"https://api.getalby.com/lnurl\",Y=/*#__PURE__*/function(){function e(e,t){this.address=void 0,this.options=void 0,this.username=void 0,this.domain=void 0,this.pubkey=void 0,this.lnurlpData=void 0,this.keysendData=void 0,this.nostrData=void 0,this.nostrPubkey=void 0,this.nostrRelays=void 0,this.webln=void 0,this.address=e,this.options={proxy:\"https://api.getalby.com/lnurl\"},this.options=Object.assign(this.options,t),this.parse(),this.webln=this.options.webln}var t=e.prototype;return t.parse=function(){var e=X.exec(this.address.toLowerCase());e&&(this.username=e[1],this.domain=e[2])},t.getWebLN=function(){return this.webln||globalThis.webln},t.fetch=function(){try{var e=this;return Promise.resolve(e.options.proxy?e.fetchWithProxy():e.fetchWithoutProxy())}catch(e){return Promise.reject(e)}},t.fetchWithProxy=function(){try{var e=this;return Promise.resolve(fetch(e.options.proxy+\"/lightning-address-details?\"+new URLSearchParams({ln:e.address}).toString())).then(function(t){if(!t.ok)throw new Error(\"Failed to fetch lnurl info: \"+t.status+\" \"+t.statusText);return Promise.resolve(t.json()).then(function(t){return Promise.resolve(e.parseLnUrlPayResponse(t.lnurlp)).then(function(){e.parseKeysendResponse(t.keysend),e.parseNostrResponse(t.nostr)})})})}catch(e){return Promise.reject(e)}},t.fetchWithoutProxy=function(){try{var e=this;return e.domain&&e.username?Promise.resolve(Promise.all([e.fetchLnurlData(),e.fetchKeysendData(),e.fetchNostrData()])).then(function(){}):Promise.resolve()}catch(e){return Promise.reject(e)}},t.fetchLnurlData=function(){try{var e=this;return Promise.resolve(fetch(e.lnurlpUrl())).then(function(t){var r=function(){if(t.ok)return Promise.resolve(t.json()).then(function(t){return Promise.resolve(e.parseLnUrlPayResponse(t)).then(function(){})})}();if(r&&r.then)return r.then(function(){})})}catch(e){return Promise.reject(e)}},t.fetchKeysendData=function(){try{var e=this;return Promise.resolve(fetch(e.keysendUrl())).then(function(t){var r=function(){if(t.ok)return Promise.resolve(t.json()).then(function(t){e.parseKeysendResponse(t)})}();if(r&&r.then)return r.then(function(){})})}catch(e){return Promise.reject(e)}},t.fetchNostrData=function(){try{var e=this;return Promise.resolve(fetch(e.nostrUrl())).then(function(t){var r=function(){if(t.ok)return Promise.resolve(t.json()).then(function(t){e.parseNostrResponse(t)})}();if(r&&r.then)return r.then(function(){})})}catch(e){return Promise.reject(e)}},t.lnurlpUrl=function(){return\"https://\"+this.domain+\"/.well-known/lnurlp/\"+this.username},t.keysendUrl=function(){return\"https://\"+this.domain+\"/.well-known/keysend/\"+this.username},t.nostrUrl=function(){return\"https://\"+this.domain+\"/.well-known/nostr.json?name=\"+this.username},t.generateInvoice=function(e){try{var t,r=function(e){var r=t&&t.pr&&t.pr.toString();if(!r)throw new Error(\"Invalid pay service invoice\");var n={pr:r};if(t&&t.verify&&(n.verify=t.verify.toString()),t&&t.successAction&&\"object\"==typeof t.successAction){var o=t.successAction,i=o.tag,s=o.description,a=o.url;\"message\"===i?n.successAction={tag:i,message:o.message}:\"url\"===i&&(n.successAction={tag:i,description:s,url:a})}return new B(n)},n=this,o=function(){if(n.options.proxy)return Promise.resolve(fetch(n.options.proxy+\"/generate-invoice?\"+new URLSearchParams(J({ln:n.address},e)).toString())).then(function(e){if(!e.ok)throw new Error(\"Failed to generate invoice: \"+e.status+\" \"+e.statusText);return Promise.resolve(e.json()).then(function(e){t=e.invoice})});if(!n.lnurlpData)throw new Error(\"No lnurlpData available. Please call fetch() first.\");if(!n.lnurlpData.callback||!z(n.lnurlpData.callback))throw new Error(\"Valid callback does not exist in lnurlpData\");var r=new URL(n.lnurlpData.callback);return r.search=new URLSearchParams(e).toString(),Promise.resolve(fetch(r.toString())).then(function(e){if(!e.ok)throw new Error(\"Failed to generate invoice: \"+e.status+\" \"+e.statusText);return Promise.resolve(e.json()).then(function(e){t=e})})}();return Promise.resolve(o&&o.then?o.then(r):r())}catch(e){return Promise.reject(e)}},t.requestInvoice=function(e){try{var t=this;if(!t.lnurlpData)throw new Error(\"No lnurlpData available. Please call fetch() first.\");var r=1e3*e.satoshi,n=t.lnurlpData,o=n.commentAllowed;if(!M({amount:r,min:n.min,max:n.max}))throw new Error(\"Invalid amount\");if(e.comment&&o&&o>0&&e.comment.length>o)throw new Error(\"The comment length must be \"+o+\" characters or fewer\");var i={amount:r.toString()};return e.comment&&(i.comment=e.comment),e.payerdata&&(i.payerdata=JSON.stringify(e.payerdata)),Promise.resolve(t.generateInvoice(i))}catch(e){return Promise.reject(e)}},t.boost=function(e,t){void 0===t&&(t=0);try{var r=this;if(!r.keysendData)throw new Error(\"No keysendData available. Please call fetch() first.\");var n=r.keysendData,o=n.destination,i=n.customKey,s=n.customValue,a=r.getWebLN();if(!a)throw new Error(\"WebLN not available\");return Promise.resolve(Z({destination:o,customKey:i,customValue:s,amount:t,boost:e},{webln:a}))}catch(e){return Promise.reject(e)}},t.zapInvoice=function(e,t){var r=e.satoshi,n=e.comment,o=e.relays,i=e.e;void 0===t&&(t={});try{var s=this;if(!s.lnurlpData)throw new Error(\"No lnurlpData available. Please call fetch() first.\");if(!s.nostrPubkey)throw new Error(\"Nostr Pubkey is missing\");var a=s.nostrPubkey,c=1e3*r,u=s.lnurlpData,h=u.allowsNostr;if(!M({amount:c,min:u.min,max:u.max}))throw new Error(\"Invalid amount\");if(!h)throw new Error(\"Your provider does not support zaps\");return Promise.resolve(H({satoshi:c,comment:n,p:a,e:i,relays:o},t)).then(function(e){var t={amount:c.toString(),nostr:JSON.stringify(e)};return Promise.resolve(s.generateInvoice(t))})}catch(i){return Promise.reject(i)}},t.zap=function(e,t){void 0===t&&(t={});try{var r=this.zapInvoice(e,t),n=this.getWebLN();if(!n)throw new Error(\"WebLN not available\");return Promise.resolve(n.enable()).then(function(){var e=n.sendPayment;return Promise.resolve(r).then(function(t){return e.call(n,t.paymentRequest)})})}catch(e){return Promise.reject(e)}},t.parseLnUrlPayResponse=function(e){try{var t=this,r=function(){if(e)return Promise.resolve(G(e)).then(function(e){t.lnurlpData=e})}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},t.parseKeysendResponse=function(e){e&&(this.keysendData=O(e))},t.parseNostrResponse=function(e){if(e){var t=V(e,this.username);this.nostrData=t[0],this.nostrPubkey=t[1],this.nostrRelays=t[2]}},e}(),ee=/*#__PURE__*/function(){function e(e){this.storage=void 0,this.storage=e||{}}var t=e.prototype;return t.getItem=function(e){return this.storage[e]},t.setItem=function(e,t){this.storage[e]=t},e}(),te=/*#__PURE__*/function(){function e(e){}var t=e.prototype;return t.getItem=function(e){return null},t.setItem=function(e,t){},e}(),re=function(e){for(var t,r=e.replace(\"L402\",\"\").replace(\"LSAT\",\"\").trim(),n={},o=/(\\w+)=(\"([^\"]*)\"|'([^']*)'|([^,]*))/g;null!==(t=o.exec(r));)n[t[1]]=t[3]||t[4]||t[5];return n},ne=new ee,oe=function(e,t,r){try{var n,o=function(r){return n?r:(t.headers[\"Accept-Authenticate\"]=i,Promise.resolve(fetch(e,t)).then(function(r){var n=r.headers.get(\"www-authenticate\");if(!n)return r;var o=re(n),c=o.token||o.macaroon,u=o.invoice;return Promise.resolve(s.enable()).then(function(){return Promise.resolve(s.sendPayment(u)).then(function(r){return a.setItem(e,JSON.stringify({token:c,preimage:r.preimage})),t.headers.Authorization=i+\" \"+c+\":\"+r.preimage,Promise.resolve(fetch(e,t))})})}))};r||(r={});var i=r.headerKey||\"L402\",s=r.webln||globalThis.webln;if(!s)throw new Error(\"WebLN is missing\");var a=r.store||ne;t||(t={}),t.cache=\"no-store\",t.mode=\"cors\",t.headers||(t.headers={});var c=a.getItem(e),u=function(){if(c){var r=JSON.parse(c);return t.headers.Authorization=i+\" \"+r.token+\":\"+r.preimage,Promise.resolve(fetch(e,t)).then(function(e){return n=1,e})}}();return Promise.resolve(u&&u.then?u.then(o):o(u))}catch(e){return Promise.reject(e)}},ie={__proto__:null,fetchWithL402:oe,MemoryStorage:ee,NoStorage:te,parseL402:re},se=function(e){try{var t=\"https://getalby.com/api/rates/\"+e.toLowerCase()+\".json\";return Promise.resolve(fetch(t)).then(function(e){if(!e.ok)throw new Error(\"Failed to fetch rate: \"+e.status+\" \"+e.statusText);return Promise.resolve(e.json()).then(function(e){return e.rate_float/1e8})})}catch(e){return Promise.reject(e)}},ae=function(e){var t=e.satoshi;return Promise.resolve(se(e.currency)).then(function(e){return Number(t)*e})},ce=function(e){var t=e.amount;return Promise.resolve(se(e.currency)).then(function(e){return Math.floor(Number(t)/e)})},ue=function(e){var t=e.currency,r=e.locale;return r||(r=\"en\"),Promise.resolve(ae({satoshi:e.satoshi,currency:t})).then(function(e){return e.toLocaleString(r,{style:\"currency\",currency:t})})},he={__proto__:null,getFiatBtcRate:se,getFiatValue:ae,getSatoshiValue:ce,getFormattedFiatValue:ue};export{Q as DEFAULT_PROXY,B as Invoice,X as LN_ADDRESS_REGEX,Y as LightningAddress,ee as MemoryStorage,te as NoStorage,E as decodeInvoice,oe as fetchWithL402,he as fiat,b as fromHexString,H as generateZapEvent,F as getEventHash,se as getFiatBtcRate,ae as getFiatValue,ue as getFormattedFiatValue,ce as getSatoshiValue,z as isUrl,M as isValidAmount,ie as l402,O as parseKeysendResponse,re as parseL402,G as parseLnUrlPayResponse,V as parseNostrResponse,Z as sendBoostagram,K as serializeEvent,C as validateEvent};\n","import { LN, nwc } from '@getalby/sdk';\nimport { WalletManager } from './wallet-manager.js';\nimport { PriceManager } from './price-manager.js';\nimport { StabilizationManager } from './stabilization-manager.js';\n\n// Main Application Class\nclass NWCApp {\n    constructor() {\n        this.walletManager = new WalletManager();\n        this.priceManager = new PriceManager();\n        this.stabilizationManager = new StabilizationManager(this.walletManager);\n\n        this.setupEventListeners();\n        this.makeGlobalFunctions();\n    }\n\n    setupEventListeners() {\n        // Listen for wallet connection changes to update stabilization UI\n        window.addEventListener('walletConnectionChanged', () => {\n            this.stabilizationManager.updateStabilizationUI();\n            this.stabilizationManager.updateWalletStabilizationDisplay();\n        });\n\n        // Setup currency selection handler\n        const currencySelect = document.getElementById('stabilization-currency');\n        if (currencySelect) {\n            currencySelect.addEventListener('change', () => {\n                this.stabilizationManager.updateStabilizationUI();\n            });\n        }\n\n        // Handle page load\n        window.addEventListener('load', () => {\n            this.initialize();\n        });\n    }\n\n    initialize() {\n        this.walletManager.log('NWC Demo page loaded');\n        this.walletManager.log('REAL NWC INTEGRATION with local dependencies - Use real wallet connection strings!');\n        this.walletManager.log('Supported wallets: Alby Hub, Coinos, Primal, lnwallet.app, Yakihonne...');\n\n        // Start Bitcoin price updates\n        this.priceManager.startPriceUpdates();\n\n        // Initialize stabilization UI\n        this.stabilizationManager.updateStabilizationUI();\n\n        // Load saved connection strings\n        this.walletManager.loadSavedConnectionStrings();\n\n        // Initialize price chart\n        this.priceManager.initializePriceChart();\n\n        // Load historical prices on first load if no data exists\n        const existingHistory = this.priceManager.getPriceHistory();\n        if (existingHistory.length === 0) {\n            this.priceManager.fetchHistoricalPrices();\n        }\n    }\n\n    // Make functions globally available for HTML onclick handlers\n    makeGlobalFunctions() {\n        // Wallet functions\n        window.connectWallet = (walletId) => this.walletManager.connectWallet(walletId);\n        window.disconnectWallet = (walletId) => this.walletManager.disconnectWallet(walletId);\n        window.getWalletInfo = (walletId) => this.walletManager.getWalletInfo(walletId);\n        window.getBalance = (walletId) => this.walletManager.getBalance(walletId);\n        window.createInvoice = (walletId) => this.walletManager.createInvoice(walletId);\n        window.payInvoice = (walletId) => this.walletManager.payInvoice(walletId);\n        window.listTransactions = (walletId) => this.walletManager.listTransactions(walletId);\n        window.payKeysend = (walletId) => this.walletManager.payKeysend(walletId);\n        window.saveConnectionString = (walletId) => this.walletManager.saveConnectionString(walletId);\n        window.clearConnectionString = (walletId) => this.walletManager.clearConnectionString(walletId);\n        window.toggleConnectionVisibility = (walletId) => this.walletManager.toggleConnectionVisibility(walletId);\n        window.clearLog = () => this.walletManager.clearLog();\n\n        // Price functions\n        window.fetchBitcoinPrice = () => this.priceManager.fetchBitcoinPrice();\n        window.startPriceUpdates = () => this.priceManager.startPriceUpdates();\n        window.stopPriceUpdates = () => this.priceManager.stopPriceUpdates();\n        window.fetchHistoricalPrices = () => this.priceManager.fetchHistoricalPrices();\n        window.updatePriceChart = () => this.priceManager.updatePriceChart();\n        window.clearAndReloadPriceData = () => this.priceManager.clearAndReloadPriceData();\n\n        // Stabilization functions\n        window.startStabilization = () => this.stabilizationManager.startStabilization();\n        window.stopStabilization = () => this.stabilizationManager.stopStabilization();\n    }\n}\n\n// Initialize the application\nnew NWCApp();","import { nwc } from '@getalby/sdk';\n\n// Wallet Management Module\nexport class WalletManager {\n    constructor() {\n        this.wallets = {\n            1: { isConnected: false, nwcClient: null, connectionData: null, transactionsSupported: null },\n            2: { isConnected: false, nwcClient: null, connectionData: null, transactionsSupported: null }\n        };\n    }\n\n    // Local Storage Functions\n    saveNWCString(walletId, nwcUrl) {\n        localStorage.setItem(`nwc-wallet-${walletId}`, nwcUrl);\n        this.log(`Wallet ${walletId}: NWC string saved`);\n    }\n\n    loadNWCString(walletId) {\n        return localStorage.getItem(`nwc-wallet-${walletId}`) || '';\n    }\n\n    clearNWCString(walletId) {\n        localStorage.removeItem(`nwc-wallet-${walletId}`);\n        this.log(`Wallet ${walletId}: Saved NWC string deleted`);\n    }\n\n    log(message) {\n        const logElement = document.getElementById('debug-log');\n        const timestamp = new Date().toLocaleTimeString();\n        logElement.textContent += `[${timestamp}] ${message}\\n`;\n        logElement.scrollTop = logElement.scrollHeight;\n    }\n\n    updateConnectionStatus(walletId, status, message) {\n        const statusElement = document.getElementById(`connection-status-${walletId}`);\n        const badgeClass = status === 'connected' ? 'bg-success' :\n                          status === 'connecting' ? 'bg-warning' : 'bg-secondary';\n        statusElement.className = `badge ${badgeClass} status-badge`;\n        statusElement.textContent = message;\n    }\n\n    toggleConnectionVisibility(walletId) {\n        const textarea = document.getElementById(`nwc-url-${walletId}`);\n        const toggleBtn = document.getElementById(`toggle-visibility-${walletId}`);\n\n        const isHidden = textarea.style.webkitTextSecurity === 'disc';\n\n        if (isHidden) {\n            // Show text\n            textarea.style.webkitTextSecurity = 'none';\n            toggleBtn.textContent = '🙈';\n            toggleBtn.title = 'Connection String verstecken';\n        } else {\n            // Hide text\n            textarea.style.webkitTextSecurity = 'disc';\n            toggleBtn.textContent = '👁️';\n            toggleBtn.title = 'Connection String anzeigen';\n        }\n    }\n\n    async connectWallet(walletId) {\n        const nwcUrl = document.getElementById(`nwc-url-${walletId}`).value;\n\n        if (!nwcUrl) {\n            alert('Please enter a valid NWC connection string');\n            return;\n        }\n\n        if (!nwcUrl.startsWith('nostr+walletconnect://')) {\n            alert('Invalid NWC connection string. Must start with \"nostr+walletconnect://\"');\n            return;\n        }\n\n        this.log(`Wallet ${walletId}: Attempting to connect real wallet...`);\n        this.updateConnectionStatus(walletId, 'connecting', 'Connecting...');\n\n        try {\n            // Create new NWC client with credentials\n            this.wallets[walletId].nwcClient = new nwc.NWCClient({ nostrWalletConnectUrl: nwcUrl });\n\n            // Test connection by getting wallet info\n            const info = await this.wallets[walletId].nwcClient.getInfo();\n\n            this.wallets[walletId].isConnected = true;\n            this.wallets[walletId].connectionData = { url: nwcUrl };\n            this.updateConnectionStatus(walletId, 'connected', 'Connected');\n\n            // Disable connection form when connected\n            document.getElementById(`nwc-url-${walletId}`).disabled = true;\n            document.getElementById(`toggle-visibility-${walletId}`).disabled = true;\n            document.getElementById(`connect-btn-${walletId}`).disabled = true;\n            document.getElementById(`disconnect-btn-${walletId}`).disabled = false;\n\n            // Auto-save connection string\n            this.saveNWCString(walletId, nwcUrl);\n\n            this.log(`Wallet ${walletId}: Successfully connected!`);\n            this.log(`Wallet ${walletId}: Alias: ${info.alias || 'N/A'}`);\n            this.log(`Wallet ${walletId}: Pubkey: ${info.pubkey ? info.pubkey.substring(0, 20) + '...' : 'N/A'}`);\n            this.log(`Wallet ${walletId}: Methods: ${info.methods ? info.methods.join(', ') : 'N/A'}`);\n\n            // Display initial wallet info\n            document.getElementById(`wallet-info-${walletId}`).textContent = JSON.stringify(info, null, 2);\n\n            // Trigger stabilization UI update\n            window.dispatchEvent(new CustomEvent('walletConnectionChanged'));\n\n        } catch (error) {\n            this.updateConnectionStatus(walletId, 'disconnected', 'Connection failed');\n            this.log(`Wallet ${walletId}: Error connecting: ${error.message}`);\n            console.error(`Wallet ${walletId} NWC Connection Error:`, error);\n        }\n    }\n\n    disconnectWallet(walletId) {\n        this.log(`Wallet ${walletId}: Disconnecting...`);\n        this.wallets[walletId].isConnected = false;\n        this.wallets[walletId].nwcClient = null;\n        this.wallets[walletId].connectionData = null;\n        this.wallets[walletId].transactionsSupported = null;\n        this.updateConnectionStatus(walletId, 'disconnected', 'Not connected');\n\n        // Re-enable connection form when disconnected\n        document.getElementById(`nwc-url-${walletId}`).disabled = false;\n        document.getElementById(`toggle-visibility-${walletId}`).disabled = false;\n        document.getElementById(`connect-btn-${walletId}`).disabled = false;\n        document.getElementById(`disconnect-btn-${walletId}`).disabled = true;\n        document.getElementById(`wallet-info-${walletId}`).textContent = '';\n        document.getElementById(`payment-result-${walletId}`).textContent = '';\n        this.log(`Wallet ${walletId}: Successfully disconnected`);\n\n        // Trigger stabilization UI update\n        window.dispatchEvent(new CustomEvent('walletConnectionChanged'));\n    }\n\n    async getWalletInfo(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        try {\n            this.log(`Wallet ${walletId}: get_info request sent...`);\n            const info = await this.wallets[walletId].nwcClient.getInfo();\n            document.getElementById(`wallet-info-${walletId}`).textContent = JSON.stringify(info, null, 2);\n            this.log(`Wallet ${walletId}: get_info response received`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error in get_info: ${error.message}`);\n            document.getElementById(`wallet-info-${walletId}`).textContent = `Error: ${error.message}`;\n        }\n    }\n\n    async getBalance(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        try {\n            this.log(`Wallet ${walletId}: get_balance request sent...`);\n            const balance = await this.wallets[walletId].nwcClient.getBalance();\n\n            // Convert balance display to show correct sats\n            const displayBalance = {\n                ...balance,\n                balance_sats: Math.round(balance.balance / 1000),\n                balance_millisats: balance.balance\n            };\n\n            document.getElementById(`wallet-info-${walletId}`).textContent = JSON.stringify(displayBalance, null, 2);\n            this.log(`Wallet ${walletId}: Balance: ${Math.round(balance.balance / 1000)} sats (${balance.balance} millisats)`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error in get_balance: ${error.message}`);\n            document.getElementById(`wallet-info-${walletId}`).textContent = `Error: ${error.message}`;\n        }\n    }\n\n    async createInvoice(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        const amount = prompt('Enter amount in Satoshis:', '1000');\n        if (!amount) return;\n\n        const description = prompt('Description (optional):', `NWC Demo Invoice - Wallet ${walletId}`);\n\n        try {\n            this.log(`Wallet ${walletId}: make_invoice request for ${amount} sats...`);\n            const invoice = await this.wallets[walletId].nwcClient.makeInvoice({\n                amount: parseInt(amount) * 1000, // Convert to millisats\n                description: description || `NWC Demo Invoice - Wallet ${walletId}`\n            });\n\n            document.getElementById(`payment-result-${walletId}`).textContent = JSON.stringify(invoice, null, 2);\n            this.log(`Wallet ${walletId}: Invoice created successfully`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error creating invoice: ${error.message}`);\n            document.getElementById(`payment-result-${walletId}`).textContent = `Error: ${error.message}`;\n        }\n    }\n\n    async payInvoice(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        const invoice = prompt('Enter Lightning Invoice:', 'lnbc...');\n        if (!invoice) return;\n\n        try {\n            this.log(`Wallet ${walletId}: pay_invoice request sent...`);\n            const result = await this.wallets[walletId].nwcClient.payInvoice({ invoice: invoice });\n\n            document.getElementById(`payment-result-${walletId}`).textContent = JSON.stringify(result, null, 2);\n            this.log(`Wallet ${walletId}: Payment sent successfully`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error paying invoice: ${error.message}`);\n            document.getElementById(`payment-result-${walletId}`).textContent = `Error: ${error.message}`;\n        }\n    }\n\n    async listTransactions(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        try {\n            this.log(`Wallet ${walletId}: list_transactions request sent...`);\n\n            const transactions = await this.wallets[walletId].nwcClient.listTransactions({\n                from: 0,\n                until: Math.floor(Date.now() / 1000),\n                limit: 50,\n                offset: 0,\n                unpaid: false,\n                type: undefined\n            });\n\n            document.getElementById(`payment-result-${walletId}`).textContent = JSON.stringify(transactions, null, 2);\n            this.log(`Wallet ${walletId}: ${transactions.transactions ? transactions.transactions.length : 0} transactions retrieved`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error retrieving transactions: ${error.message}`);\n            console.error(`Wallet ${walletId} listTransactions error:`, error);\n\n            // Fallback: Try without parameters\n            try {\n                this.log(`Wallet ${walletId}: Trying listTransactions without parameters...`);\n                const transactions = await this.wallets[walletId].nwcClient.listTransactions({});\n                document.getElementById(`payment-result-${walletId}`).textContent = JSON.stringify(transactions, null, 2);\n                this.log(`Wallet ${walletId}: Transactions retrieved with fallback method`);\n            } catch (fallbackError) {\n                this.log(`Wallet ${walletId}: Fallback also failed: ${fallbackError.message}`);\n                document.getElementById(`payment-result-${walletId}`).textContent = `Error: ${error.message}\\nFallback Error: ${fallbackError.message}`;\n            }\n        }\n    }\n\n    async payKeysend(walletId) {\n        if (!this.wallets[walletId].isConnected || !this.wallets[walletId].nwcClient) {\n            alert(`Please connect Wallet ${walletId} first`);\n            return;\n        }\n\n        const pubkey = prompt('Recipient Pubkey:', '02...');\n        const amount = prompt('Amount in Satoshis:', '1000');\n\n        if (!pubkey || !amount) return;\n\n        try {\n            this.log(`Wallet ${walletId}: pay_keysend request for ${amount} sats to ${pubkey.substring(0, 10)}...`);\n\n            const result = await this.wallets[walletId].nwcClient.payKeysend({\n                pubkey: pubkey,\n                amount: parseInt(amount) * 1000 // Convert to millisats\n            });\n\n            document.getElementById(`payment-result-${walletId}`).textContent = JSON.stringify(result, null, 2);\n            this.log(`Wallet ${walletId}: Keysend payment sent successfully`);\n        } catch (error) {\n            this.log(`Wallet ${walletId}: Error sending keysend: ${error.message}`);\n            document.getElementById(`payment-result-${walletId}`).textContent = `Error: ${error.message}`;\n        }\n    }\n\n    saveConnectionString(walletId) {\n        const nwcUrl = document.getElementById(`nwc-url-${walletId}`).value;\n        if (!nwcUrl) {\n            alert('No connection string to save');\n            return;\n        }\n        this.saveNWCString(walletId, nwcUrl);\n    }\n\n    clearConnectionString(walletId) {\n        this.clearNWCString(walletId);\n        document.getElementById(`nwc-url-${walletId}`).value = '';\n    }\n\n    loadSavedConnectionStrings() {\n        // Load saved connection strings for both wallets\n        for (let walletId = 1; walletId <= 2; walletId++) {\n            const savedUrl = this.loadNWCString(walletId);\n            if (savedUrl) {\n                const textarea = document.getElementById(`nwc-url-${walletId}`);\n                textarea.value = savedUrl;\n                // Ensure the text is properly masked\n                textarea.style.webkitTextSecurity = 'disc';\n                this.log(`Wallet ${walletId}: Saved NWC string loaded`);\n            }\n        }\n    }\n\n    clearLog() {\n        document.getElementById('debug-log').textContent = 'Debug messages will be displayed here...\\n';\n    }\n}","// Bitcoin Price Management Module\nexport class PriceManager {\n    constructor() {\n        this.priceUpdateInterval = null;\n        this.priceChart = null;\n        this.PRICE_STORAGE_KEY = 'nwc-price-history';\n        this.MAX_PRICE_HISTORY = 10000; // Keep last 10,000 price points\n        this.PRICE_CHANGE_THRESHOLD = 0.5; // Minimum 0.5% price change to store point\n    }\n\n    // Price Storage Functions\n    savePriceHistory(priceData) {\n        try {\n            const history = this.getPriceHistory();\n            const timestamp = Date.now();\n\n            // Check if we should save this point\n            if (history.length > 0) {\n                const lastPoint = history[history.length - 1];\n                const timeDiff = timestamp - lastPoint.timestamp;\n\n                // Minimum interval: 1 hour (to match historical data pattern)\n                const minInterval = 60 * 60 * 1000; // 1 hour in milliseconds\n\n                // Check for significant price change\n                const shouldSave = Object.keys(priceData).some(currency => {\n                    const oldPrice = lastPoint.prices[currency];\n                    const newPrice = priceData[currency];\n                    const changePercent = Math.abs((newPrice - oldPrice) / oldPrice * 100);\n                    return changePercent >= this.PRICE_CHANGE_THRESHOLD;\n                });\n\n                // Only save if significant change or enough time has passed\n                const hoursPassed = timeDiff / (1000 * 60 * 60);\n\n                if (hoursPassed < 1) {\n                    // Too soon, just update timestamp of last point\n                    lastPoint.timestamp = timestamp;\n                    localStorage.setItem(this.PRICE_STORAGE_KEY, JSON.stringify(history));\n                    return;\n                } else if (hoursPassed < 2 && !shouldSave) {\n                    // Between 1-2 hours but no significant change, skip\n                    lastPoint.timestamp = timestamp;\n                    localStorage.setItem(this.PRICE_STORAGE_KEY, JSON.stringify(history));\n                    return;\n                }\n            }\n\n            // Add new price point\n            history.push({\n                timestamp: timestamp,\n                prices: { ...priceData }\n            });\n\n            // Keep only last MAX_PRICE_HISTORY points\n            if (history.length > this.MAX_PRICE_HISTORY) {\n                history.splice(0, history.length - this.MAX_PRICE_HISTORY);\n            }\n\n            localStorage.setItem(this.PRICE_STORAGE_KEY, JSON.stringify(history));\n            console.log(`💾 Neuer Preispunkt gespeichert (${history.length} total)`);\n        } catch (error) {\n            console.error('Error saving price history:', error);\n        }\n    }\n\n    getPriceHistory() {\n        try {\n            const stored = localStorage.getItem(this.PRICE_STORAGE_KEY);\n            return stored ? JSON.parse(stored) : [];\n        } catch (error) {\n            console.error('Error loading price history:', error);\n            return [];\n        }\n    }\n\n    getFilteredPriceHistory(timeRange) {\n        const history = this.getPriceHistory();\n        if (history.length === 0) return [];\n\n        const now = Date.now();\n        let timeWindow;\n\n        switch (timeRange) {\n            case '12h':\n                timeWindow = 12 * 60 * 60 * 1000; // 12 hours\n                break;\n            case '24h':\n                timeWindow = 24 * 60 * 60 * 1000; // 24 hours\n                break;\n            case '2d':\n                timeWindow = 2 * 24 * 60 * 60 * 1000; // 2 days\n                break;\n            case '4d':\n                timeWindow = 4 * 24 * 60 * 60 * 1000; // 4 days\n                break;\n            case '7d':\n                timeWindow = 7 * 24 * 60 * 60 * 1000; // 7 days\n                break;\n            default:\n                timeWindow = 12 * 60 * 60 * 1000; // Default to 12 hours\n        }\n\n        const cutoffTime = now - timeWindow;\n        return history.filter(point => point.timestamp >= cutoffTime);\n    }\n\n    clearPriceHistory() {\n        localStorage.removeItem(this.PRICE_STORAGE_KEY);\n        this.log('Price history cleared');\n    }\n\n    async clearAndReloadPriceData() {\n        try {\n            this.log('🗑️ Clearing all price data...');\n\n            // Clear existing price history\n            localStorage.removeItem(this.PRICE_STORAGE_KEY);\n\n            // Clear chart\n            if (this.priceChart) {\n                this.priceChart.data.labels = [];\n                this.priceChart.data.datasets.forEach(dataset => {\n                    dataset.data = [];\n                });\n                this.priceChart.update();\n            }\n\n            this.log('✅ Price data cleared');\n\n            // Reload fresh historical data\n            await this.fetchHistoricalPrices();\n\n            this.log('✅ Fresh price data loaded');\n\n        } catch (error) {\n            this.log(`❌ Error reloading price data: ${error.message}`);\n            console.error('Error clearing and reloading price data:', error);\n        }\n    }\n\n    log(message) {\n        const logElement = document.getElementById('debug-log');\n        if (logElement) {\n            const timestamp = new Date().toLocaleTimeString();\n            logElement.textContent += `[${timestamp}] ${message}\\n`;\n            logElement.scrollTop = logElement.scrollHeight;\n        }\n    }\n\n    // Historical Price Functions\n    async fetchHistoricalPrices() {\n        try {\n            this.log('📈 Loading real historical prices from mempool.space...');\n\n            const response = await fetch('https://mempool.space/api/v1/historical-price');\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            this.log(`📈 ${data.prices.length} historical data points received from API`);\n\n            // Convert mempool.space data to our format\n            const convertedHistory = data.prices.map(item => ({\n                timestamp: item.time * 1000, // Convert Unix timestamp to milliseconds\n                prices: {\n                    USD: item.USD,\n                    EUR: item.EUR,\n                    GBP: item.GBP,\n                    CHF: item.CHF,\n                    CAD: item.CAD,\n                    JPY: item.JPY,\n                    AUD: item.AUD // Also include AUD if we want to expand later\n                }\n            }));\n\n            // Sort by timestamp (oldest first) and limit to our storage limit\n            const sortedHistory = convertedHistory\n                .sort((a, b) => a.timestamp - b.timestamp)\n                .slice(-this.MAX_PRICE_HISTORY);\n\n            // Save to localStorage\n            localStorage.setItem(this.PRICE_STORAGE_KEY, JSON.stringify(sortedHistory));\n\n            this.log(`📈 ${sortedHistory.length} real historical price points saved`);\n\n            // Update chart if it exists\n            if (this.priceChart) {\n                this.updatePriceChart();\n            }\n\n        } catch (error) {\n            this.log(`📈 Error loading historical prices: ${error.message}`);\n            console.error('Historical price fetch error:', error);\n\n            // Fallback: Log that we're using existing data\n            const existingHistory = this.getPriceHistory();\n            if (existingHistory.length > 0) {\n                this.log(`📈 Using ${existingHistory.length} existing price points`);\n            } else {\n                this.log('📈 No historical data available');\n            }\n        }\n    }\n\n    // Bitcoin Price Functions\n    async fetchBitcoinPrice() {\n        try {\n            this.log('Fetching Bitcoin price...');\n\n            const response = await fetch('https://mempool.space/api/v1/prices');\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const priceData = await response.json();\n\n            // Update price displays\n            this.updatePriceDisplay(priceData);\n\n            // Update live price in chart\n            this.updateLivePriceInChart(priceData);\n\n            this.log('Bitcoin price updated successfully');\n\n        } catch (error) {\n            this.log(`Error fetching Bitcoin price: ${error.message}`);\n            console.error('Bitcoin price fetch error:', error);\n\n            // Update displays with error\n            const currencies = ['usd', 'eur', 'gbp', 'chf', 'cad', 'jpy'];\n            currencies.forEach(currency => {\n                const priceEl = document.getElementById(`price-${currency}`);\n                const satsEl = document.getElementById(`sats-${currency}`);\n                if (priceEl) priceEl.textContent = 'Error';\n                if (satsEl) satsEl.textContent = 'Error';\n            });\n            const updatedEl = document.getElementById('price-updated');\n            if (updatedEl) updatedEl.textContent = 'Last Update: Error';\n        }\n    }\n\n    updateLivePriceInChart(priceData) {\n        if (!this.priceChart) return;\n\n        const now = Date.now();\n        const selectedRange = document.querySelector('input[name=\"timeRange\"]:checked')?.value || '12h';\n\n        // Get current history\n        const history = this.getPriceHistory();\n\n        // Create current price point\n        const currentPricePoint = {\n            timestamp: now,\n            prices: {\n                USD: priceData.USD,\n                EUR: priceData.EUR,\n                GBP: priceData.GBP,\n                CHF: priceData.CHF,\n                CAD: priceData.CAD,\n                JPY: priceData.JPY\n            }\n        };\n\n        // Create temporary history with current price\n        const liveHistory = [...history, currentPricePoint];\n\n        // Filter for selected time range\n        const filteredHistory = this.filterHistoryByRange(liveHistory, selectedRange);\n\n        if (filteredHistory.length === 0) return;\n\n        // Update chart with live data\n        const labels = filteredHistory.map(item => item.timestamp);\n        const currencies = ['USD', 'EUR', 'GBP', 'CHF', 'CAD', 'JPY'];\n\n        this.priceChart.data.labels = labels;\n\n        currencies.forEach((currency, index) => {\n            const dataPoints = filteredHistory.map((item) => ({\n                x: item.timestamp,\n                y: item.prices[currency]\n            }));\n            this.priceChart.data.datasets[index].data = dataPoints;\n        });\n\n        // Update chart with no animation for smooth live updates\n        this.priceChart.update('none');\n\n        // Save to persistent history only according to our rules\n        this.savePriceHistory(priceData);\n    }\n\n    filterHistoryByRange(history, timeRange) {\n        if (history.length === 0) return [];\n\n        const now = Date.now();\n        let timeWindow;\n\n        switch (timeRange) {\n            case '12h':\n                timeWindow = 12 * 60 * 60 * 1000;\n                break;\n            case '24h':\n                timeWindow = 24 * 60 * 60 * 1000;\n                break;\n            case '2d':\n                timeWindow = 2 * 24 * 60 * 60 * 1000;\n                break;\n            case '4d':\n                timeWindow = 4 * 24 * 60 * 60 * 1000;\n                break;\n            case '7d':\n                timeWindow = 7 * 24 * 60 * 60 * 1000;\n                break;\n            default:\n                timeWindow = 12 * 60 * 60 * 1000;\n        }\n\n        const cutoffTime = now - timeWindow;\n        return history.filter(point => point.timestamp >= cutoffTime);\n    }\n\n    updatePriceDisplay(priceData) {\n        // Format and display prices\n        const currencies = {\n            usd: { symbol: '$', value: priceData.USD, unit: '$1' },\n            eur: { symbol: '€', value: priceData.EUR, unit: '€1' },\n            gbp: { symbol: '£', value: priceData.GBP, unit: '£1' },\n            chf: { symbol: '₣', value: priceData.CHF, unit: '₣1' },\n            cad: { symbol: 'C$', value: priceData.CAD, unit: 'C$1' },\n            jpy: { symbol: '¥', value: priceData.JPY, unit: '¥1' }\n        };\n\n        Object.entries(currencies).forEach(([currency, data]) => {\n            const priceElement = document.getElementById(`price-${currency}`);\n            const satsElement = document.getElementById(`sats-${currency}`);\n\n            if (priceElement && satsElement && data.value) {\n                // Format Bitcoin price\n                const formattedValue = currency === 'jpy' ?\n                    Math.round(data.value).toLocaleString() :\n                    data.value.toLocaleString('de-DE', {\n                        minimumFractionDigits: 0,\n                        maximumFractionDigits: 0\n                    });\n\n                priceElement.textContent = `${data.symbol} ${formattedValue}`;\n\n                // Calculate satoshis for 1 unit of currency\n                const satoshisPerUnit = Math.round(100000000 / data.value);\n                const formattedSats = satoshisPerUnit.toLocaleString('de-DE');\n\n                satsElement.textContent = `${formattedSats} sats = ${data.unit}`;\n            }\n        });\n\n        // Update timestamp\n        const now = new Date();\n        const timeString = now.toLocaleTimeString('en-US');\n        const updatedEl = document.getElementById('price-updated');\n        if (updatedEl) updatedEl.textContent = `Last Update: ${timeString}`;\n    }\n\n    startPriceUpdates() {\n        // Clear existing interval\n        if (this.priceUpdateInterval) {\n            clearInterval(this.priceUpdateInterval);\n        }\n\n        // Fetch price immediately\n        this.fetchBitcoinPrice();\n\n        // Set up auto-refresh every 30 seconds\n        this.priceUpdateInterval = setInterval(() => this.fetchBitcoinPrice(), 30000);\n\n        this.log('Bitcoin price auto-update started (every 30 seconds)');\n    }\n\n    stopPriceUpdates() {\n        if (this.priceUpdateInterval) {\n            clearInterval(this.priceUpdateInterval);\n            this.priceUpdateInterval = null;\n            this.log('Bitcoin price auto-update stopped');\n        }\n    }\n\n    // Chart Functions\n    initializePriceChart() {\n        const ctx = document.getElementById('priceChart')?.getContext('2d');\n        if (!ctx) return;\n\n        this.priceChart = new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'USD ($)',\n                        data: [],\n                        borderColor: '#0066cc',\n                        backgroundColor: 'rgba(0, 102, 204, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'EUR (€)',\n                        data: [],\n                        borderColor: '#dc3545',\n                        backgroundColor: 'rgba(220, 53, 69, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'GBP (£)',\n                        data: [],\n                        borderColor: '#28a745',\n                        backgroundColor: 'rgba(40, 167, 69, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'CHF',\n                        data: [],\n                        borderColor: '#ffc107',\n                        backgroundColor: 'rgba(255, 193, 7, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'CAD',\n                        data: [],\n                        borderColor: '#6f42c1',\n                        backgroundColor: 'rgba(111, 66, 193, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'JPY (¥)',\n                        data: [],\n                        borderColor: '#fd7e14',\n                        backgroundColor: 'rgba(253, 126, 20, 0.1)',\n                        borderWidth: 2,\n                        fill: false,\n                        tension: 0.4,\n                        pointRadius: 1,\n                        yAxisID: 'y1'\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                interaction: {\n                    mode: 'index',\n                    intersect: false\n                },\n                plugins: {\n                    legend: {\n                        display: true,\n                        position: 'top',\n                        onClick: function(e, legendItem, legend) {\n                            const index = legendItem.datasetIndex;\n                            const chart = legend.chart;\n                            const isVisible = chart.isDatasetVisible(index);\n                            chart.setDatasetVisibility(index, !isVisible);\n                            chart.update('none');\n                        }\n                    },\n                    tooltip: {\n                        mode: 'index',\n                        intersect: false,\n                        callbacks: {\n                            title: function(context) {\n                                return 'Bitcoin Preis';\n                            },\n                            label: function(context) {\n                                const currency = context.dataset.label;\n                                const value = context.parsed.y;\n                                return `${currency}: ${value.toLocaleString('de-DE')}`;\n                            }\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        type: 'linear',\n                        position: 'bottom',\n                        min: function(context) {\n                            const data = context.chart.data.labels;\n                            return data.length > 0 ? Math.min(...data) : 0;\n                        },\n                        max: function(context) {\n                            const data = context.chart.data.labels;\n                            return data.length > 0 ? Math.max(...data) : 0;\n                        },\n                        grid: {\n                            color: 'rgba(0, 0, 0, 0.1)'\n                        },\n                        ticks: {\n                            callback: function(value) {\n                                const date = new Date(value);\n                                return date.toLocaleTimeString('de-DE', {\n                                    hour: '2-digit',\n                                    minute: '2-digit'\n                                });\n                            },\n                            maxTicksLimit: 8\n                        }\n                    },\n                    y: {\n                        type: 'linear',\n                        display: true,\n                        position: 'left',\n                        beginAtZero: false,\n                        title: {\n                            display: true,\n                            text: 'USD/EUR/GBP/CHF/CAD'\n                        },\n                        grid: {\n                            color: 'rgba(0, 0, 0, 0.1)'\n                        }\n                    },\n                    y1: {\n                        type: 'linear',\n                        display: true,\n                        position: 'right',\n                        beginAtZero: false,\n                        title: {\n                            display: true,\n                            text: 'JPY (¥)'\n                        },\n                        grid: {\n                            drawOnChartArea: false\n                        }\n                    }\n                }\n            }\n        });\n\n        // Update chart initially\n        this.updatePriceChart();\n    }\n\n    updatePriceChart() {\n        if (!this.priceChart) return;\n\n        // Get selected time range\n        const selectedRange = document.querySelector('input[name=\"timeRange\"]:checked')?.value || '12h';\n        const history = this.getFilteredPriceHistory(selectedRange);\n\n        if (history.length === 0) {\n            this.priceChart.data.labels = [];\n            this.priceChart.data.datasets.forEach(dataset => {\n                dataset.data = [];\n            });\n            this.priceChart.update();\n            return;\n        }\n\n        // Prepare data for chart\n        const labels = history.map(item => item.timestamp);\n        const currencies = ['USD', 'EUR', 'GBP', 'CHF', 'CAD', 'JPY'];\n\n        // Update chart data\n        this.priceChart.data.labels = labels;\n\n        currencies.forEach((currency, index) => {\n            const dataPoints = history.map((item) => ({\n                x: item.timestamp,\n                y: item.prices[currency]\n            }));\n            this.priceChart.data.datasets[index].data = dataPoints;\n        });\n\n        // Update chart\n        this.priceChart.update('none'); // No animation for smoother updates\n    }\n}","// Balance Stabilization Manager Module\nexport class StabilizationManager {\n    constructor(walletManager) {\n        this.walletManager = walletManager;\n        this.stabilizationData = {\n            active: false,\n            currency: null,\n            initialBalance: 0,\n            targetValue: 0,\n            initialPrice: 0,\n            checkInterval: null,\n            threshold: 1, // minimum sats difference to trigger rebalancing\n            lastRebalanceTime: 0,\n            rebalanceMinInterval: 5000, // minimum 5 seconds between rebalances\n            errorCount: 0,\n            maxErrors: 5\n        };\n    }\n\n    log(message) {\n        this.walletManager.log(message);\n    }\n\n    async startStabilization() {\n        const currency = document.getElementById('stabilization-currency').value;\n\n        if (!currency) {\n            alert('Please select a currency');\n            return;\n        }\n\n        if (!this.walletManager.wallets[2].isConnected || !this.walletManager.wallets[2].nwcClient) {\n            alert('Stability Receiver must be connected for stabilization');\n            return;\n        }\n\n        if (!this.walletManager.wallets[1].isConnected || !this.walletManager.wallets[1].nwcClient) {\n            alert('Stability Provider must be connected for rebalancing');\n            return;\n        }\n\n        try {\n            this.log(`💱 Starting stabilization for ${currency.toUpperCase()}...`);\n\n            // Get current balance of Stability Receiver\n            const balanceResponse = await this.walletManager.wallets[2].nwcClient.getBalance();\n            // Convert from millisats to sats\n            const currentBalance = Math.round(balanceResponse.balance / 1000);\n\n            // Get current Bitcoin prices\n            const response = await fetch('https://mempool.space/api/v1/prices');\n            const priceData = await response.json();\n\n            const currentPrice = priceData[currency.toUpperCase()];\n            if (!currentPrice) {\n                throw new Error(`Price for ${currency.toUpperCase()} not available`);\n            }\n\n            // Calculate target value in selected currency\n            const targetValue = (currentBalance / 100000000) * currentPrice;\n\n            // Store stabilization data\n            this.stabilizationData = {\n                active: true,\n                currency: currency,\n                initialBalance: currentBalance,\n                targetValue: targetValue,\n                initialPrice: currentPrice,\n                checkInterval: null,\n                threshold: 1,\n                lastRebalanceTime: 0,\n                rebalanceMinInterval: 5000,\n                errorCount: 0,\n                maxErrors: 5\n            };\n\n            // Update UI\n            this.updateStabilizationUI();\n\n            // Start monitoring with longer interval to reduce timeout issues\n            this.stabilizationData.checkInterval = setInterval(() => this.checkRebalancing(), 15000); // every 15 seconds\n\n            this.log(`💱 Stabilization active: ${currentBalance} sats = ${targetValue.toFixed(2)} ${currency.toUpperCase()}`);\n            this.log(`💱 Monitoring started (every 15 seconds with timeout protection)`);\n\n        } catch (error) {\n            this.log(`💱 Error starting stabilization: ${error.message}`);\n            console.error('Stabilization start error:', error);\n        }\n    }\n\n    async stopStabilization() {\n        if (!this.stabilizationData.active) return;\n\n        this.log('💱 Stopping stabilization...');\n\n        // Clear monitoring interval\n        if (this.stabilizationData.checkInterval) {\n            clearInterval(this.stabilizationData.checkInterval);\n        }\n\n        // Reset stabilization data\n        this.stabilizationData = {\n            active: false,\n            currency: null,\n            initialBalance: 0,\n            targetValue: 0,\n            initialPrice: 0,\n            checkInterval: null,\n            threshold: 1,\n            lastRebalanceTime: 0,\n            rebalanceMinInterval: 5000,\n            errorCount: 0,\n            maxErrors: 5\n        };\n\n        // Update UI\n        this.updateStabilizationUI();\n\n        this.log('💱 Stabilization stopped');\n    }\n\n    async checkRebalancing() {\n        if (!this.stabilizationData.active) return;\n\n        try {\n            // Get current prices\n            const response = await fetch('https://mempool.space/api/v1/prices');\n            const priceData = await response.json();\n            const currentPrice = priceData[this.stabilizationData.currency.toUpperCase()];\n\n            // Get current balance of Stability Receiver\n            const balanceResponse = await this.walletManager.wallets[2].nwcClient.getBalance();\n            // Convert from millisats to sats\n            const currentBalance = Math.round(balanceResponse.balance / 1000);\n\n            // Calculate current value in target currency\n            const currentValue = (currentBalance / 100000000) * currentPrice;\n\n            // Calculate required balance to maintain target value\n            const requiredBalance = Math.round((this.stabilizationData.targetValue / currentPrice) * 100000000);\n            const difference = currentBalance - requiredBalance;\n\n            // Update status display\n            this.updateStabilizationStatus(currentBalance, currentValue, requiredBalance, difference);\n\n            // Update wallet displays\n            this.updateWalletStabilizationDisplay();\n\n            // Check if rebalancing is needed and allowed\n            const now = Date.now();\n            const timeSinceLastRebalance = now - this.stabilizationData.lastRebalanceTime;\n\n            // Debug logging\n            this.log(`💱 Debug: difference=${difference}, abs=${Math.abs(difference)}, lastRebalance=${this.stabilizationData.lastRebalanceTime}, timeSince=${timeSinceLastRebalance}`);\n\n            // Get current threshold from UI\n            const currentThreshold = parseInt(document.getElementById('rebalance-threshold').value) || 1;\n            this.stabilizationData.threshold = currentThreshold;\n\n            if (Math.abs(difference) >= this.stabilizationData.threshold) {\n                if (timeSinceLastRebalance >= this.stabilizationData.rebalanceMinInterval) {\n                    this.log(`💱 Rebalancing needed: ${difference > 0 ? '+' : ''}${difference} sats difference`);\n                    await this.performRebalancing(difference);\n                } else {\n                    const waitTime = Math.round((this.stabilizationData.rebalanceMinInterval - timeSinceLastRebalance) / 1000);\n                    if (!isNaN(waitTime) && waitTime > 0) {\n                        this.log(`💱 Rebalancing required (${difference > 0 ? '+' : ''}${difference} sats), but waiting ${waitTime}s (cooldown)`);\n                    } else {\n                        this.log(`💱 Rebalancing required (${difference > 0 ? '+' : ''}${difference} sats), starting immediately`);\n                        await this.performRebalancing(difference);\n                    }\n                }\n            } else {\n                // Log when difference is below threshold\n                if (Math.abs(difference) > 0) {\n                    this.log(`💱 Small difference: ${difference > 0 ? '+' : ''}${difference} sats (below ${this.stabilizationData.threshold} sats threshold)`);\n                }\n            }\n\n            // Reset error counter on successful check\n            this.stabilizationData.errorCount = 0;\n\n        } catch (error) {\n            this.stabilizationData.errorCount++;\n            this.log(`💱 Error in rebalancing check (${this.stabilizationData.errorCount}/${this.stabilizationData.maxErrors}): ${error.message}`);\n            console.error('Rebalancing check error:', error);\n\n            // Stop stabilization if too many errors\n            if (this.stabilizationData.errorCount >= this.stabilizationData.maxErrors) {\n                this.log(`💱 Too many errors (${this.stabilizationData.maxErrors}), stopping stabilization`);\n                this.stopStabilization();\n            }\n        }\n    }\n\n    async performRebalancing(difference) {\n        const amount = Math.abs(difference);\n\n        try {\n            this.log(`💱 Starte Rebalancing: ${amount} sats (${difference > 0 ? 'Receiver → Provider' : 'Provider → Receiver'})`);\n\n            // Add timeout wrapper for all operations\n            const timeoutPromise = new Promise((_, reject) =>\n                setTimeout(() => reject(new Error('Operation timed out after 30 seconds')), 30000)\n            );\n\n            if (difference > 0) {\n                // Stability Receiver has too much -> send excess to Stability Provider\n\n                // Create invoice on Stability Provider with timeout\n                const invoicePromise = this.walletManager.wallets[1].nwcClient.makeInvoice({\n                    amount: amount * 1000, // Convert sats to millisats\n                    description: `Stabilization: excess ${amount} sats (${this.stabilizationData.currency.toUpperCase()})`\n                });\n\n                const invoice = await Promise.race([invoicePromise, timeoutPromise]);\n                this.log(`💱 Invoice erstellt: ${amount} sats`);\n\n                // Pay invoice from Stability Receiver with timeout\n                const paymentPromise = this.walletManager.wallets[2].nwcClient.payInvoice({\n                    invoice: invoice.invoice\n                });\n\n                const payment = await Promise.race([paymentPromise, timeoutPromise]);\n                this.log(`💱 Rebalancing erfolgreich: ${amount} sats übertragen (Receiver → Provider)`);\n\n            } else {\n                // Stability Receiver has too little -> receive from Stability Provider\n\n                // Create invoice on Stability Receiver with timeout\n                const invoicePromise = this.walletManager.wallets[2].nwcClient.makeInvoice({\n                    amount: amount * 1000, // Convert sats to millisats\n                    description: `Stabilization: deficit ${amount} sats (${this.stabilizationData.currency.toUpperCase()})`\n                });\n\n                const invoice = await Promise.race([invoicePromise, timeoutPromise]);\n                this.log(`💱 Invoice erstellt: ${amount} sats`);\n\n                // Pay invoice from Stability Provider with timeout\n                const paymentPromise = this.walletManager.wallets[1].nwcClient.payInvoice({\n                    invoice: invoice.invoice\n                });\n\n                const payment = await Promise.race([paymentPromise, timeoutPromise]);\n                this.log(`💱 Rebalancing erfolgreich: ${amount} sats übertragen (Provider → Receiver)`);\n            }\n\n            // Update last rebalance time\n            this.stabilizationData.lastRebalanceTime = Date.now();\n            this.stabilizationData.errorCount = 0; // Reset error counter on success\n\n        } catch (error) {\n            this.stabilizationData.errorCount++;\n\n            if (error.message.includes('timed out')) {\n                this.log(`💱 Rebalancing Timeout: ${error.message}`);\n                this.log(`💱 Möglicherweise Relay-Verbindungsprobleme. Versuche beim nächsten Zyklus erneut.`);\n            } else if (error.message.includes('insufficient')) {\n                this.log(`💱 Rebalancing fehlgeschlagen: Unzureichende Balance`);\n            } else {\n                this.log(`💱 Rebalancing fehlgeschlagen: ${error.message}`);\n            }\n\n            console.error('Rebalancing error:', error);\n\n            // If too many consecutive errors, pause rebalancing for longer\n            if (this.stabilizationData.errorCount >= 3) {\n                this.stabilizationData.lastRebalanceTime = Date.now();\n                this.log(`💱 Pausiere Rebalancing für 2 Minuten nach ${this.stabilizationData.errorCount} Fehlern`);\n                setTimeout(() => {\n                    this.stabilizationData.lastRebalanceTime = 0;\n                    this.log(`💱 Rebalancing wieder bereit`);\n                }, 120000); // 2 minutes pause\n            }\n        }\n    }\n\n    updateStabilizationUI() {\n        const currencySelect = document.getElementById('stabilization-currency');\n        const startBtn = document.getElementById('start-stabilization');\n        const stopBtn = document.getElementById('stop-stabilization');\n        const thresholdInput = document.getElementById('rebalance-threshold');\n\n        if (this.stabilizationData.active) {\n            currencySelect.disabled = true;\n            thresholdInput.disabled = true;\n            startBtn.disabled = true;\n            stopBtn.disabled = false;\n        } else {\n            currencySelect.disabled = false;\n            thresholdInput.disabled = false;\n            startBtn.disabled = !currencySelect.value || !this.walletManager.wallets[1].isConnected || !this.walletManager.wallets[2].isConnected;\n            stopBtn.disabled = true;\n        }\n    }\n\n    updateStabilizationStatus(currentBalance, currentValue, requiredBalance, difference) {\n        const statusElement = document.getElementById('stabilization-status');\n        const infoElement = document.getElementById('stabilization-info');\n\n        if (this.stabilizationData.active) {\n            const currency = this.stabilizationData.currency.toUpperCase();\n            const targetValue = this.stabilizationData.targetValue;\n\n            statusElement.className = 'alert alert-success py-2 px-3 mb-2';\n            statusElement.innerHTML = `Status: Aktiv (${currency})`;\n\n            infoElement.innerHTML = `\n                <div><strong>Zielwert:</strong> ${targetValue.toFixed(2)} ${currency}</div>\n                <div><strong>Aktueller Wert:</strong> ${currentValue.toFixed(2)} ${currency}</div>\n                <div><strong>Balance:</strong> ${currentBalance.toLocaleString()} sats</div>\n                <div><strong>Soll-Balance:</strong> ${requiredBalance.toLocaleString()} sats</div>\n                <div><strong>Differenz:</strong> ${difference > 0 ? '+' : ''}${difference.toLocaleString()} sats</div>\n            `;\n        } else {\n            statusElement.className = 'alert alert-secondary py-2 px-3 mb-2';\n            statusElement.innerHTML = 'Status: Nicht aktiv';\n            infoElement.innerHTML = '';\n        }\n    }\n\n    async updateWalletStabilizationDisplay() {\n        // Update Stability Provider display\n        await this.updateSingleWalletDisplay(1);\n        // Update Stability Receiver display\n        await this.updateSingleWalletDisplay(2);\n        // Update transaction displays\n        await this.updateWalletTransactions(1);\n        await this.updateWalletTransactions(2);\n    }\n\n    async updateSingleWalletDisplay(walletId) {\n        const infoElement = document.getElementById(`wallet${walletId}-stabilization-info`);\n\n        if (!this.walletManager.wallets[walletId].isConnected) {\n            infoElement.innerHTML = `\n                <div class=\"text-center text-muted py-3\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <div>Wallet ${walletId} verbinden um Daten anzuzeigen</div>\n                </div>\n            `;\n            return;\n        }\n\n        try {\n            // Get wallet balance\n            const balanceResponse = await this.walletManager.wallets[walletId].nwcClient.getBalance();\n            const balanceSats = Math.round(balanceResponse.balance / 1000);\n\n            // Get current Bitcoin price\n            const priceResponse = await fetch('https://mempool.space/api/v1/prices');\n            const priceData = await priceResponse.json();\n\n            // Calculate values for different currencies\n            const currencies = {\n                USD: { symbol: '$', value: priceData.USD },\n                EUR: { symbol: '€', value: priceData.EUR },\n                GBP: { symbol: '£', value: priceData.GBP },\n                CHF: { symbol: '₣', value: priceData.CHF },\n                CAD: { symbol: 'C$', value: priceData.CAD },\n                JPY: { symbol: '¥', value: priceData.JPY }\n            };\n\n            let currencyDisplays = '';\n            Object.entries(currencies).forEach(([code, data]) => {\n                const value = (balanceSats / 100000000) * data.value;\n                currencyDisplays += `\n                    <div class=\"d-flex justify-content-between mb-1\">\n                        <span class=\"small\">${code}:</span>\n                        <span class=\"small fw-bold\">${data.symbol}${value.toFixed(2)}</span>\n                    </div>\n                `;\n            });\n\n            // Show stabilization status for Stability Receiver\n            let stabilizationStatus = '';\n            if (walletId === 2 && this.stabilizationData.active) {\n                const targetCurrency = this.stabilizationData.currency.toUpperCase();\n                const currentValue = (balanceSats / 100000000) * currencies[targetCurrency].value;\n                const targetValue = this.stabilizationData.targetValue;\n                const difference = currentValue - targetValue;\n\n                stabilizationStatus = `\n                    <div class=\"border-top pt-2 mt-2\">\n                        <div class=\"small text-success\">\n                            <strong>🎯 Stabilisierung aktiv (${targetCurrency})</strong>\n                        </div>\n                        <div class=\"d-flex justify-content-between\">\n                            <span class=\"small\">Zielwert:</span>\n                            <span class=\"small\">${currencies[targetCurrency].symbol}${targetValue.toFixed(2)}</span>\n                        </div>\n                        <div class=\"d-flex justify-content-between\">\n                            <span class=\"small\">Differenz:</span>\n                            <span class=\"small ${difference >= 0 ? 'text-success' : 'text-danger'}\">\n                                ${difference >= 0 ? '+' : ''}${currencies[targetCurrency].symbol}${difference.toFixed(2)}\n                            </span>\n                        </div>\n                    </div>\n                `;\n            }\n\n            infoElement.innerHTML = `\n                <div class=\"mb-2\">\n                    <div class=\"d-flex justify-content-between mb-2\">\n                        <span class=\"fw-bold\">Balance:</span>\n                        <span class=\"fw-bold text-primary\">${balanceSats.toLocaleString()} sats</span>\n                    </div>\n                    <div class=\"border-top pt-2\">\n                        <div class=\"small text-muted mb-1\">Währungswerte:</div>\n                        ${currencyDisplays}\n                    </div>\n                    ${stabilizationStatus}\n                </div>\n            `;\n\n        } catch (error) {\n            infoElement.innerHTML = `\n                <div class=\"text-center text-danger py-3\">\n                    <i class=\"fas fa-exclamation-triangle\"></i>\n                    <div>Fehler beim Laden der Wallet-Daten</div>\n                    <small>${error.message}</small>\n                </div>\n            `;\n        }\n    }\n\n    async updateWalletTransactions(walletId) {\n        const transactionsElement = document.getElementById(`wallet${walletId}-transactions`);\n\n        if (!this.walletManager.wallets[walletId].isConnected) {\n            transactionsElement.innerHTML = `\n                <div class=\"text-center text-muted py-3\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <div>Wallet ${walletId} verbinden um Transaktionen anzuzeigen</div>\n                </div>\n            `;\n            return;\n        }\n\n        // Check if we already know transactions are not supported\n        if (this.walletManager.wallets[walletId].transactionsSupported === false) {\n            transactionsElement.innerHTML = `\n                <div class=\"text-center text-warning py-3\">\n                    <i class=\"fas fa-clock\"></i>\n                    <div>Transaktionen nicht verfügbar</div>\n                    <small class=\"text-muted\">NWC Provider unterstützt diese Funktion nicht</small>\n                </div>\n            `;\n            return;\n        }\n\n        // Show loading state only on first attempt\n        if (this.walletManager.wallets[walletId].transactionsSupported === null) {\n            transactionsElement.innerHTML = `\n                <div class=\"text-center text-muted py-3\">\n                    <div class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></div>\n                    <div>Transaktionen werden geladen...</div>\n                </div>\n            `;\n        }\n\n        try {\n            // Use the existing working listTransactions logic\n            const transactionResponse = await this.walletManager.wallets[walletId].nwcClient.listTransactions({\n                from: 0,\n                until: Math.floor(Date.now() / 1000),\n                limit: 10, // Only get last 10 for the UI\n                offset: 0,\n                unpaid: false,\n                type: undefined\n            });\n\n            let transactions = transactionResponse.transactions || transactionResponse;\n\n            // If that fails, try without parameters as fallback\n            if (!transactions || transactions.length === 0) {\n                const fallbackResponse = await this.walletManager.wallets[walletId].nwcClient.listTransactions({});\n                transactions = fallbackResponse.transactions || fallbackResponse;\n            }\n\n            // Mark as supported if we get here\n            this.walletManager.wallets[walletId].transactionsSupported = true;\n\n            if (!transactions || transactions.length === 0) {\n                transactionsElement.innerHTML = `\n                    <div class=\"text-center text-muted py-3\">\n                        <i class=\"fas fa-inbox\"></i>\n                        <div>Keine Transaktionen gefunden</div>\n                    </div>\n                `;\n                return;\n            }\n\n            // Sort transactions by date (newest first) and limit to last 10\n            const sortedTransactions = transactions\n                .sort((a, b) => b.created_at - a.created_at)\n                .slice(0, 10);\n\n            let transactionHtml = '';\n            sortedTransactions.forEach(tx => {\n                const date = new Date(tx.created_at * 1000);\n                const amountSats = Math.round(tx.amount / 1000); // Convert millisats to sats\n                const txType = tx.type || 'payment';\n\n                // Determine if transaction is incoming or outgoing\n                let isIncoming = false;\n                let icon = '💸';\n                let colorClass = 'text-danger';\n                let typeText = 'Ausgehend';\n\n                // Check transaction type first, then amount as fallback\n                if (txType === 'incoming') {\n                    isIncoming = true;\n                    icon = '📥';\n                    colorClass = 'text-success';\n                    typeText = 'Empfangen';\n                } else if (txType === 'outgoing') {\n                    isIncoming = false;\n                    icon = '📤';\n                    colorClass = 'text-danger';\n                    typeText = 'Gesendet';\n                } else {\n                    // Fallback: use amount sign to determine direction\n                    isIncoming = amountSats > 0;\n                    if (isIncoming) {\n                        icon = '💰';\n                        colorClass = 'text-success';\n                        typeText = 'Eingehend';\n                    }\n                }\n\n                // Format description\n                let description = tx.description || tx.memo || 'Keine Beschreibung';\n                if (description.length > 40) {\n                    description = description.substring(0, 40) + '...';\n                }\n\n                transactionHtml += `\n                    <div class=\"border-bottom px-3 py-2\">\n                        <div class=\"d-flex justify-content-between align-items-start mb-1\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"me-2\">${icon}</span>\n                                <div>\n                                    <div class=\"small fw-bold ${colorClass}\">\n                                        ${isIncoming ? '+' : '-'}${Math.abs(amountSats).toLocaleString()} sats\n                                    </div>\n                                    <div class=\"text-muted\" style=\"font-size: 0.75rem;\">\n                                        ${typeText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"text-end\">\n                                <div class=\"text-muted small\">\n                                    ${date.toLocaleString('de-DE', {\n                                        day: '2-digit',\n                                        month: '2-digit',\n                                        hour: '2-digit',\n                                        minute: '2-digit'\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"small text-muted\" style=\"font-size: 0.75rem;\">\n                            ${description}\n                        </div>\n                    </div>\n                `;\n            });\n\n            transactionsElement.innerHTML = transactionHtml;\n\n        } catch (error) {\n            console.warn(`Wallet ${walletId} transactions error:`, error.message);\n\n            // Determine if it's a timeout or other error\n            const isTimeout = error.message.includes('Timeout') || error.message.includes('reply timeout');\n\n            if (isTimeout) {\n                // Mark transactions as unsupported for this wallet\n                this.walletManager.wallets[walletId].transactionsSupported = false;\n\n                transactionsElement.innerHTML = `\n                    <div class=\"text-center text-warning py-3\">\n                        <i class=\"fas fa-clock\"></i>\n                        <div>Transaktionen nicht verfügbar</div>\n                        <small class=\"text-muted\">NWC Provider unterstützt diese Funktion nicht</small>\n                    </div>\n                `;\n            } else {\n                // For non-timeout errors, still mark as unsupported to avoid retries\n                this.walletManager.wallets[walletId].transactionsSupported = false;\n\n                transactionsElement.innerHTML = `\n                    <div class=\"text-center text-danger py-3\">\n                        <i class=\"fas fa-exclamation-triangle\"></i>\n                        <div>Fehler beim Laden der Transaktionen</div>\n                        <small class=\"text-muted\">${error.message}</small>\n                    </div>\n                `;\n            }\n        }\n    }\n}"],"names":[],"version":3,"file":"nwc.cf396756.js.map"}